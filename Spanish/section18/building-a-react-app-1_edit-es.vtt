WEBVTT

00:00.840 --> 00:04.900
De acuerdo, construyamos nuestra aplicación RoboFriends. Creo que para empezar

00:04.930 --> 00:10.730
queremos pensar nuevamente en los componentes y qué tipo de componentes queremos construir

00:10.750 --> 00:16.720
Al mirar este sitio web, es probable que el componente más pequeño en el que probablemente queremos comenzar a trabajar sea

00:17.020 --> 00:19.000
el componente de la tarjeta

00:19.000 --> 00:25.480
Esta carta aquí. Si podemos construir uno de estos, entonces, de acuerdo con lo que he dicho antes, podemos simplemente

00:25.720 --> 00:29.180
copie todos estos componentes y agréguelos a la página

00:29.350 --> 00:31.440
Comencemos con esto

00:31.660 --> 00:34.530
El componente de la tarjeta

00:34.590 --> 00:36.400
Bien

00:36.580 --> 00:40.610
Ahora, ya no usaremos el componente 'Hola'

00:40.690 --> 00:43.430
y si recuerda que se veía así

00:43.780 --> 00:47.530
Solo, sé que es triste, pero vamos a eliminarlo

00:47.680 --> 00:49.810
Vamos a eliminar el 'hello.css'

00:50.290 --> 00:52.090
Comience limpio

00:52.100 --> 00:54.830
Así que voy a eliminar. DE ACUERDO

01:00.330 --> 01:03.810
Y también borraremos 'hello.css'

01:03.850 --> 01:09.040
Sé que todo nuestro trabajo duro desapareció por completo

01:09.210 --> 01:12.420
¿Sabes que? Vamos a comenzar a eliminar cosas que no necesitamos

01:12.420 --> 01:16.880
en este proyecto. Por ejemplo, el 'App.js' que teníamos inicialmente?

01:16.890 --> 01:23.200
Bueno, podemos eliminar eso. También podemos eliminar 'App.css'

01:27.400 --> 01:28.450
'App.test'

01:32.370 --> 01:41.020
Y el logo

01:41.050 --> 01:41.500
Bien

01:41.500 --> 01:44.410
Así que todo se ve muy pequeño ahora

01:44.470 --> 01:52.430
Solo tenemos 'index.css', 'index.js' y este 'Register Service Worker' que viene con 'Create a React App'

01:52.430 --> 01:54.620
que no necesitamos tocar

01:54.950 --> 02:00.940
DE ACUERDO. Obviamente, no hemos podido compilar porque, bueno, las importaciones de 'Hola' realmente no funcionan. Nosotros no tenemos

02:00.940 --> 02:03.970
cualquier cosa. Comencemos con esto

02:03.990 --> 02:08.670
Comencemos creando un componente de "tarjeta"

02:10.330 --> 02:15.870
Y este componente de la tarjeta, tendremos que importarlo desde 'card.js'

02:15.940 --> 02:22.860
De nuevo, si guardo esto, sigo recibiendo un error porque no existe

02:22.990 --> 02:23.740
Así que vamos a crearlo

02:23.770 --> 02:37.130
Voy a decir 'nuevo archivo', card.js '. Nuevamente asegurándome de que esto esté usando 'Babel'. Y hagamos lo que sea

02:37.130 --> 02:38.870
lo hemos hecho antes Nosotros importamos

02:42.180 --> 02:46.800
Reaccionar de 'reaccionar'

02:47.050 --> 02:51.520
En lugar de hacer las cosas de la clase por ahora, nos vamos a preocupar por construir la función

02:51.580 --> 02:57.440
así que voy a decir 'const', 'Card' es igual a -

02:57.440 --> 02:59.400
No tendrá ninguna propiedad por ahora

03:00.470 --> 03:05.490
Y esto volverá - tener algunos paréntesis

03:11.530 --> 03:21.110
Y aquí diremos que tiene un 'div'. Dentro de este 'div' tendremos una imagen y esta imagen

03:21.110 --> 03:26.180
tener algún tipo de fuente que - aún no sabemos qué es, así que lo mantendremos tal como está

03:26.280 --> 03:29.840
Etiqueta de cierre Y tendremos otro 'div'

03:34.780 --> 03:35.500
eso dentro de aquí

03:35.520 --> 03:46.980
Si recuerda, tenemos nuestro nombre y correo electrónico aquí. Entonces haremos un 'H2'. Simplemente escribiremos codificados

03:46.990 --> 03:48.080
valores aquí

03:48.310 --> 03:51.890
Haremos a Jane Doe

03:52.070 --> 04:01.090
Y finalmente una etiqueta 'p' que tiene alguna dirección de correo electrónico. Así que hagamos Jane Doe en gmail punto com

04:01.550 --> 04:03.620
Cerrar la etiqueta

04:03.670 --> 04:03.970
Todo bien

04:03.970 --> 04:07.530
Entonces solo tenemos un componente simple que está regresando

04:07.540 --> 04:08.060
'tarjeta'

04:08.110 --> 04:10.950
Y recuerda que queremos exportar esto

04:10.960 --> 04:14.530
entonces queremos decir 'exportar', 'predeterminado', 'tarjeta'

04:17.370 --> 04:18.210
Salvar

04:18.490 --> 04:21.480
Obtengo que los elementos img deben tener una propiedad alternativa

04:21.630 --> 04:23.390
Nuevamente me está dando una buena pista

04:23.400 --> 04:26.920
así que simplemente agreguemos una propiedad 'alt'

04:26.970 --> 04:29.540
Solo decimos de qué se trata esta foto

04:29.640 --> 04:38.870
así que solo diré 'foto' por el momento. O diré 'robots' por ahora. Compilar con éxito. Si miramos hacia atrás en nuestra

04:38.870 --> 04:46.130
aplicación tenemos robots Jane Doe y Jane Doe. Perfecto
 
04:46.160 --> 04:52.850
Bien. Tenemos el componente de la tarjeta y debe preguntarse por qué estamos usando React aquí si

04:52.850 --> 04:54.630
no estamos realmente usándolo

04:54.860 --> 04:56.510
Veamos qué sucede si lo elimino

04:58.130 --> 05:05.370
Recibo un montón de errores que dicen 'Reaccionar debe estar dentro del alcance cuando se usa JSX'. Recuerda

05:05.390 --> 05:07.810
JSX es esto

05:07.910 --> 05:16.680
No estamos escribiendo HTML, estamos escribiendo JSX y necesitamos importar React para que nuestro programa entienda

05:16.740 --> 05:20.070
JSX. Esta sintaxis similar a HTML

05:20.300 --> 05:26.470
OK ahora necesitamos una imagen y para este ejercicio tengo algo llamado 'RoboHash' para ti

05:26.820 --> 05:29.100
Es una API realmente genial

05:29.100 --> 05:33.240
Y para aquellos que no saben qué son las API, no se preocupen, tengo una sección que viene con todo eso

05:33.240 --> 05:35.350
información donde aprenderás sobre esto

05:35.550 --> 05:45.180
Pero lo bueno de RoboHash es que puedo decir cualquier cosa aquí y devolverá un

05:45.180 --> 05:47.420
robot para mi

05:47.460 --> 05:49.530
Todo lo que necesitamos es solo esto

05:49.740 --> 05:59.130
URL, y puedo decir por ahora, 'prueba'

05:59.370 --> 06:05.840
Si guardo esto y vuelvo a mi ejemplo

06:06.020 --> 06:06.610
Ahi vas

06:06.620 --> 06:08.150
Tenemos nuestro robot aleatorio

06:08.450 --> 06:17.760
Si cambié esto para digamos 'test test', lo guardo, bueno ahora tengo otro robot

06:17.780 --> 06:18.820
¿Cuan genial es eso?

06:20.500 --> 06:27.610
Muy bien, um, quiero asegurarme de que el tamaño sea algo pequeño para que pueda hacer un signo de interrogación aquí y

06:27.610 --> 06:29.120
solo dale ancho y alto

06:29.200 --> 06:32.830
Así que solo voy a hacer 200 por 200

06:32.890 --> 06:36.150
Y de nuevo, esto es algo que haces con esto

06:36.310 --> 06:40.950
URL que te dan en la información aquí - No te haré pasar por ella

06:44.940 --> 06:47.520
Yo lo guarde. Todo debería verse bien

06:49.020 --> 07:00.330
Ahora digamos que quería agregar un título y haré algo como 'div' o 'H1', 'RoboFriends' aquí

07:06.950 --> 07:08.240
¿Ves que recibo un error aquí?

07:08.390 --> 07:17.430
Es porque, recuerde que debemos devolver una cosa. Y no podemos tener múltiples elementos devueltos, ¿verdad?

07:17.610 --> 07:21.540
Si queremos devolver algo, asegúrese de que sea una cosa o una matriz

07:21.540 --> 07:25.520
pero por ahora nos preocuparemos por el título más tarde

07:25.530 --> 07:29.640
Queremos asegurarnos de que solo estamos devolviendo un elemento

07:29.640 --> 07:35.680
entonces en este caso ese elemento 'div' que tiene un montón de cosas dentro del cual está el componente 'tarjeta'

07:35.690 --> 07:38.930
Bien, ahorremos

07:38.960 --> 07:39.230
Bien

07:39.260 --> 07:41.720
Tenemos nuestro componente de tarjeta

07:41.720 --> 07:45.760
Se ve bien, pero ¿y si quisiera tener varias tarjetas ahora?

07:45.760 --> 07:50.350
De acuerdo con lo que sabemos, porque tenemos el componente de la tarjeta

07:50.360 --> 08:00.810
Si voy a 'index.js' ... puedo decir que he puesto esto en nuestra nueva línea para que puedas ver, puedo simplemente envolver

08:00.810 --> 08:09.080
esto en un 'div'. De nuevo porque queremos devolver solo un elemento, y podría decir 'tarjeta'

08:12.090 --> 08:16.040
'Tarjeta' y cierre la etiqueta 'div'

08:18.650 --> 08:22.660
Guarda y mira eso. Tenemos varias cartas ahora

08:22.650 --> 08:26.350
Cada uno es su propio componente

08:26.540 --> 08:32.420
OK, agreguemos un poco de estilo solo para que se vea mejor. Nuevamente porque tenemos taquiones

08:32.750 --> 08:39.290
podemos usar una sintaxis realmente agradable. Si vamos al componente 'cards' dentro del div, puedo decir 'class'

08:39.440 --> 08:40.310
nombre de nuevo

08:40.340 --> 08:45.180
recuerda que no podemos usar la clase. 'BG', verde claro

08:45.200 --> 08:50.780
entonces eso es 'fondo', 'verde claro' y esto es solo clases de taquiones que ya están predefinidas para

08:50.780 --> 08:51.840
nos. De nuevo,

08:52.060 --> 08:54.870
Sección CSS - esto no es eso

08:54.950 --> 09:00.260
así que no vamos a centrarnos demasiado en CSS. Te daré los estilos que necesitas. Tenemos el

09:00.260 --> 09:07.570
div, the border, tenemos relleno de tres, muchos márgenes dos también

09:07.580 --> 09:10.060
Y luego "crecerá", que es la animación

09:10.070 --> 09:16.510
Entonces si guardo esto Mira eso. Eso es ... eso es muy bonito

09:19.210 --> 09:21.670
¿Sabes que? Agreguemos algunos más. Bien hecho

09:21.820 --> 09:29.560
'Bw2' y 'shadow 5' para agregarles un poco de sombras

09:30.010 --> 09:30.600
Ahi vas

09:30.630 --> 09:32.740
Se ven más 3D ahora

09:32.740 --> 09:33.900
Eso se ve muy bien

09:35.200 --> 09:35.530
Ahi vas

09:35.530 --> 09:37.400
Tenemos nuestras cartas.

09:37.420 --> 09:43.840
De nuevo, no queremos esta tarjeta estática donde dice Jane Doe Jane Doe Jane Doe queremos que sea dinámica

09:43.840 --> 09:44.100
¿Derecha?

09:44.100 --> 09:53.040
Entonces parece que necesitamos, lo que llamamos, 'accesorios' - propiedades. Bueno y de hecho tengo para ti un objeto de robots

09:53.040 --> 09:53.920
que he creado

09:54.030 --> 10:01.140
así que solo voy a agregar un nuevo archivo aquí que diga 'robots.js' y dentro de aquí solo voy a

10:01.140 --> 10:08.910
copiar y pegar esto. Como pueden ver, es solo un objeto constante, son robots, es una matriz de objetos

10:08.910 --> 10:16.420
y tiene ID, nombre, nombre de usuario, correo electrónico, y estos son solo al azar que he hecho

10:16.530 --> 10:21.440
Si desea este archivo, puede tomar los archivos del final de esta sección

10:21.610 --> 10:26.300
Pero por ahora de esta manera tengo algo que puedo usar y puedes ver que lo estoy exportando

10:26.410 --> 10:36.140
Puedo decir robots de importación de 'punto', porque estamos en el mismo directorio

10:36.500 --> 10:39.000
robots

10:39.060 --> 10:48.760
Ahora si guardo esto obtenemos 'robots como se define por nunca utilizado', pero porque esto es usando 'exportar' en lugar de

10:48.790 --> 10:52.630
'Export default' este archivo podría tener múltiples exportaciones

10:52.690 --> 10:54.620
Da la casualidad de que solo tengo uno

10:54.880 --> 11:01.960
La regla es, para estos, porque hay un valor predeterminado, bueno, puedes hacer 'tarjeta'. Para los que no son

11:01.960 --> 11:02.650
defecto

11:02.740 --> 11:05.530
tienes que desestructurarlo

11:05.680 --> 11:07.020
Eso es así

11:07.030 --> 11:14.930
Entonces, si tengo otra variable digamos que dice 'gatos', tendré que hacer 'gatos' para agarrarla

11:16.220 --> 11:21.930
Entonces tenemos robots y ahora puedo darle algunas propiedades

11:21.940 --> 11:24.340
Puedo decir que 'id' es igual

11:24.370 --> 11:33.130
Y nuevamente tenemos estos corchetes para que sea una expresión javascript y diremos 'robots' ... 'robots'

11:34.570 --> 11:44.070
primera matriz ... dot 'id' tiene la ID, entonces tenemos nombre igual a robots

11:44.150 --> 11:58.340
de nuevo, el primer nombre de punto del usuario, cierra el corchete, y luego también tenemos el correo electrónico igual a los robots primero

11:58.340 --> 12:03.400
en la matriz, correo electrónico

12:03.440 --> 12:10.140
Holy Moly eso es mucha escritura. Y voy a hacer esto más pequeño para que puedas ver. voy a

12:10.140 --> 12:15.580
copiar y pegar para los demás, excepto para ...

12:15.660 --> 12:23.150
cambiar esto al segundo usuario y luego el tercer uso-

12:23.220 --> 12:31.560
Ups ... el segundo usuario

12:31.800 --> 12:39.750
Ahora si guardo esto, se compiló con éxito pero nada ha cambiado porque tenemos que ir a las cartas

12:39.810 --> 12:47.070
Voy a cerrar 'robots.js' por el momento. Porque las tarjetas necesitan ahora aceptar parámetros y cuáles son

12:47.070 --> 12:47.810
¿Los parametros?

12:47.820 --> 13:05.620
Bueno, son propiedades. Y estos accesorios son ahora props dot name, y props dot email

13:05.780 --> 13:08.650
Lo guardo, vuelvo

13:08.840 --> 13:13.340
Hmm. No funciona. Bueno, porque esta es una expresión javascript

13:13.400 --> 13:13.950
¿Derecha?

13:13.970 --> 13:18.050
Así que necesito envolverlo entre llaves

13:18.820 --> 13:22.870
Justo como funciona en JSX. Salvar

13:23.020 --> 13:23.680
Mira eso

13:23.750 --> 13:29.840
Tenemos nombres dinámicos que estamos pasando como propiedades a cada uno

13:30.000 --> 13:31.950
Agreguemos 'centro de texto' aquí

13:33.800 --> 13:34.630
Y ahí tienes

13:34.670 --> 13:35.890
Ahora tenemos todo centrado

13:35.960 --> 13:36.800
Eso es mucho mejor

13:38.260 --> 13:38.490
DE ACUERDO

13:38.500 --> 13:42.210
Pero también aprobamos ID. Podemos usar ID para hacer algo genial

13:42.250 --> 13:50.500
Si recuerdas en la sección de ESX tenemos cadenas de plantillas y porque esta es una cadena de plantillas que

13:50.500 --> 13:55.020
tiene que envolverlo en un corchete por lo que es una expresión javascript

13:55.360 --> 14:02.780
Y ahora dentro de RoboHash, en lugar de usar la prueba aquí, podemos aleatorizar qué robots obtenemos

14:02.920 --> 14:05.310
usando la sintaxis como recuerdas

14:05.500 --> 14:08.790
y aquí solo podemos decir Props dot ID

14:08.920 --> 14:16.000
Así que ahora esto dirá RoboHash.org, ID de lo que sea para el robot con el sitio

14:16.000 --> 14:20.200
Así que nos aseguramos de que nuevamente los ID sean siempre dinámicos y cambiantes

14:20.200 --> 14:29.010
Si guardo esto y regreso. Mira eso. Ves que hay un poco de retraso otra vez porque estamos hablando

14:29.010 --> 14:31.440
a la API y la API está regresando

14:31.440 --> 14:33.800
responde por nosotros, pero ¿qué tan bueno es eso?

14:33.810 --> 14:39.350
Acabamos de crear nuestras propias tarjetas dinámicas

14:39.380 --> 14:46.120
Una última cosa. Aunque esto funciona, algo más agradable que puedes hacer es tener algo llamado desestructuración

14:46.370 --> 14:48.500
Podemos hacer algo como 'const'

14:50.940 --> 14:57.730
nombre .. correo electrónico .. es igual a 'accesorios', otra vez

14:57.820 --> 15:05.470
como recordará de E6, y ahora también puedo usar 'ID' externo

15:11.280 --> 15:12.430
y todavía funciona

15:14.240 --> 15:21.160
Otra cosa interesante que puedes hacer y que es incluso más limpia es que, dentro de los parámetros, puedes desestructurar

15:21.620 --> 15:23.840
Nuevamente puedes agregar esto aquí ahora

15:28.740 --> 15:34.790
Y ahora si lo guardo todavía debería funcionar y lo hace

15:34.990 --> 15:42.070
Esto puede ser confuso si eres nuevo en la desestructuración, pero como viste paso a paso, solo recibimos

15:42.070 --> 15:46.260
accesorios y estamos desestructurando los accesorios justo dentro de los corchetes aquí

15:47.460 --> 15:50.440
Esto es mucho más limpio

15:50.760 --> 15:51.450
Bien

15:51.450 --> 15:54.210
Eso fue muy divertido de una manera realmente muy rápida

15:54.210 --> 15:57.960
acabamos de crear nuestras propias cartas. En la siguiente sección

15:57.990 --> 16:01.120
vamos a ampliar esto y hacerlo aún mejor

16:01.200 --> 16:02.820
Te veré en eso. Adiós