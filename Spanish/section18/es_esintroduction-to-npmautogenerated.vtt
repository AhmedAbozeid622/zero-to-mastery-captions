WEBVTT

00:02.210 --> 00:10.700
NPM fue creado para que los desarrolladores puedan compartir el código JavaScript que han escrito. De esta manera, cualquier desarrollador de todo el

00:10.790 --> 00:16.660
mundo puede obtener el código de otra persona que puede resolver su problema.

00:17.780 --> 00:23.780
Esto crea una gran base de conocimiento de scripts que las personas pueden actualizar o mejorar constantemente y

00:23.780 --> 00:26.330
construir sobre ellos. De hecho, es

00:26.330 --> 00:32.140
muy raro que una aplicación o un sitio web en estos días se construyan exclusivamente desde cero.

00:32.990 --> 00:39.140
Al usar la inteligencia colectiva, podemos obtener fragmentos de código que son realmente buenos y construir sobre

00:39.140 --> 00:40.950
ellos para crear nuestro producto.

00:41.710 --> 00:48.070
Por ejemplo, usando JavaScript, puede escribir aplicaciones de realidad virtual, pero no tiene que

00:48.070 --> 00:50.120
descubrir todo usted mismo.

00:50.140 --> 00:56.980
Alguien por ahí ya trabajó para poder usar JavaScript VR Así que usa el código de esa persona para

00:56.980 --> 00:58.200
comenzar su proyecto.

00:58.270 --> 01:01.190
Hablemos sobre cómo funciona NPM.

01:02.650 --> 01:05.490
NPM se ve así.

01:05.560 --> 01:13.180
Un sitio web con una barra de búsqueda se parece a Google, pero aquí puede buscar lo que

01:15.210 --> 01:23.180
llamamos Paquetes y estos paquetes se encuentran en el Registro NPM y este Registro realiza un seguimiento de los archivos

01:23.180 --> 01:25.130
que se han enviado.

01:25.180 --> 01:33.100
Cualquiera puede enviar estos archivos que se llaman paquetes o módulos y contienen dos cosas; Un archivo JavaScript y

01:33.100 --> 01:35.640
un paquete. archivo json.

01:35.680 --> 01:43.010
y el paquete El archivo json que nunca has visto antes es un metarchivo

01:43.280 --> 01:45.020
que describe este paquete.

01:45.230 --> 01:54.540
Entonces puede ver aquí que este registro NPM es solo un registro de todos estos archivos de JavaScript que otras personas

01:54.570 --> 01:55.770
han escrito.

01:56.850 --> 02:03.090
Y la idea es tener pequeños archivos JavaScript que hagan una cosa realmente bien para que otras personas puedan

02:03.270 --> 02:03.950
usarlo.

02:05.140 --> 02:16.820
Luego, redacta o combina diferentes piezas de código y diferentes paquetes en su proyecto para agregar funcionalidad y no tener que volver a escribir

02:17.660 --> 02:22.400
algo que ya ha sido escrito por otra persona.

02:23.110 --> 02:29.980
Entonces, como puede ver aquí, tengo una persona que acaba de escribir un archivo JavaScript que es realmente

02:29.980 --> 02:30.970
muy útil.

02:30.970 --> 02:39.100
Bueno, piensan que otras personas podrían usarlo, por lo que lo llevan al Registro de NPM y, al usar

02:39.100 --> 02:46.670
la barra de búsqueda de aquí, alguien puede encontrar su paquete, tal vez estén buscando un archivo de

02:46.720 --> 02:52.460
script que cree una lista de matrices para personas interesadas en gatos.

02:52.570 --> 03:02.100
Bueno, entonces pueden encontrar este archivo y descargarlo del Registro NPM en su computadora.

03:02.170 --> 03:05.140
Entonces hablemos de los beneficios de esto.

03:06.470 --> 03:11.360
Bueno, obtienes experiencia de otros, tal vez no lo sabes todo, tal vez otros

03:11.370 --> 03:13.560
son mejores que tú en

03:13.630 --> 03:18.280
esta determinada cosa, así que usas ese conocimiento colectivo para usar su código.

03:19.180 --> 03:21.580
Pero también hay un inconveniente en esto.

03:21.780 --> 03:24.770
No todos los paquetes son buenos códigos.

03:24.840 --> 03:34.080
Cualquiera puede poner su archivo en NPM, y también está agregando más bytes a su proyecto, lo que hace que el tamaño de

03:34.080 --> 03:36.210
su proyecto sea aún mayor.

03:36.210 --> 03:43.940
Si tiene todos estos archivos en su proyecto, bueno, son muchos archivos y cada uno tendrá

03:43.940 --> 03:47.820
que enviarse desde el servidor al navegador.

03:48.050 --> 03:54.110
Y como saben en las secciones anteriores, queremos minimizar el tamaño de nuestro proyecto, por lo que

03:54.250 --> 04:01.540
creamos aplicaciones web rápidas y existe un arte para encontrar buenos paquetes de NPM y se acostumbrará después de un poco

04:01.540 --> 04:02.300
de experiencia.

04:04.270 --> 04:08.380
Entonces no te preocupes. Ahora también ves aquí que tengo algo llamado hilo.

04:08.690 --> 04:15.320
yarn todavía usa el Registro NPM, pero puede verlo de vez en cuando al igual que NPM.

04:15.370 --> 04:19.010
Es una herramienta para tomar cosas del Registro NPM.

04:19.030 --> 04:26.560
No hablaremos de esto en este curso, pero tenga en cuenta que tanto el hilo como el NPM son muy similares.

04:26.560 --> 04:32.800
Si aprende uno, entonces conoce al otro, así que no tenga miedo si escucha hablar de un proyecto

04:32.800 --> 04:38.470
que usa hilo en lugar de NPM. Ahora puedes navegar por NPM y encontrar cosas.

04:38.790 --> 04:42.840
Pero generalmente hay tres tipos de paquetes.

04:43.060 --> 04:46.640
Uno son los paquetes que puede usar en el navegador.

04:46.640 --> 04:52.390
Entonces, en el Front End, para que pueda descargar JQuery de NPM.

04:52.850 --> 04:58.010
Puede descargar todo tipo de scripts que lo ayuden con el flujo de trabajo front-end.

04:58.030 --> 05:04.330
El segundo tipo son los que le dan nuevos comandos que puede usar en la línea de comandos y le mostraré

05:04.330 --> 05:06.760
un ejemplo que más adelante en esta sección.

05:06.790 --> 05:15.100
Y finalmente, el tercer tipo de paquete NPM es una vez que puede usar en Node. js en el back end.

05:15.100 --> 05:21.640
Y eso puede sonar aterrador para ti, pero no te preocupes cuando lleguemos al Nodo. js, te mostraré algunos de los paquetes de Node

05:21.640 --> 05:25.240
que puedes usar, pero es más o menos lo mismo que JavaScript.

05:25.480 --> 05:29.610
De hecho, NPM significa Node Package Manager.

05:29.620 --> 05:35.200
Inicialmente se creó para el nodo, pero era tan bueno y tan popular que ahora también puede usarlo para

05:35.200 --> 05:36.220
el Front End.

05:36.930 --> 05:38.820
Pero es todo lo mismo.

05:38.820 --> 05:40.430
Todo funciona igual.

05:40.530 --> 05:43.330
Como dije antes, son solo scripts que

05:43.350 --> 05:49.710
puedes usar que otras personas han escrito y los vamos a usar mucho en este curso.

05:49.710 --> 05:53.730
Ahora puede que se pregunte por qué estamos aprendiendo esto.

05:53.790 --> 05:57.600
y este curso? Quiero decir, ¿es realmente tan importante?

05:57.960 --> 06:00.710
Sí, en realidad hay tres cosas que debes hacer.

06:00.810 --> 06:06.570
Ahora, al comenzar un proyecto, lo verá en cada proyecto.

06:06.570 --> 06:09.690
Una es que, bueno, tienen un archivo HTML,

06:09.820 --> 06:12.610
un archivo CSS o un archivo JavaScript.

06:12.960 --> 06:18.660
Pueden tener, pueden tener múltiples de estos, pero todos los proyectos tienen aquellos especialmente basados

06:18.660 --> 06:19.820
en la web.

06:19.830 --> 06:27.060
También debe tener su proyecto en github y usar el control de código fuente como Git. Nadie almacena su propio proyecto en su

06:27.060 --> 06:28.260
computadora.

06:28.260 --> 06:31.820
Siempre lo tienen con control de fuente.

06:31.950 --> 06:39.090
Y finalmente administra las dependencias, que son paquetes que otras personas han escrito. Con NPM usando el

06:39.300 --> 06:41.480
paquete. archivo json.

06:41.490 --> 06:48.300
Entonces, en esta sección vamos a estar trabajando en esto y terminando nuestra configuración de cómo se ve

06:48.300 --> 06:52.520
un proyecto típico y sabemos cómo hacer los dos primeros, ¿verdad?

06:52.770 --> 06:58.650
Ahora, en los próximos dos videos, le mostraré cómo comenzar a usar NPM para descargar archivos

06:58.650 --> 07:01.900
y usar el paquete. json para administrar esos archivos.

07:02.250 --> 07:07.060
Es una parte crítica del flujo de trabajo de un desarrollador. Así que nos vemos en el próximo. adiós.
