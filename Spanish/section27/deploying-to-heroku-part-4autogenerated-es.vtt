WEBVTT

00:00.450 --> 00:07.400
Dar una buena acogida. En este video finalmente vamos a poner nuestra aplicación de front-end en un servidor para que

00:07.430 --> 00:15.780
ahora todo está fuera de nuestra computadora en línea y podemos compartir nuestro proyecto con el mundo para comenzar.

00:15.780 --> 00:25.420
Podemos volver a Heroku y en nuestro tablero simplemente podemos ver que tenemos nuestro servidor, pero queremos

00:25.420 --> 00:36.220
para crear una nueva aplicación y esta nueva aplicación podemos llamarlo cerebro inteligente. Elegiremos la región en nosotros en la que haremos clic

00:36.250 --> 00:45.370
Crea una aplicación y nos da comandos muy buenos como configurar todo lo que podemos hacer Heroku

00:45.460 --> 00:47.530
iniciar sesión.

00:47.630 --> 00:51.250
Así que hagámoslo desde nuestro cerebro inteligente.

00:52.510 --> 00:57.140
Voy a decir Heroku de inicio de sesión

01:04.060 --> 01:06.680
iniciar sesión con mi correo electrónico y mi contraseña

01:09.510 --> 01:16.650
y volviendo al archivo léame vemos que nos aseguramos de que nuestro git esté configurado, de lo que se trata y podemos agregar

01:16.650 --> 01:25.320
nuestro control remoto a Heroku gid remoto inteligente cerebro correcto.

01:25.420 --> 01:31.630
Si conseguimos un control remoto V, estos son los mismos pasos que ejecutamos con nuestro servidor de API también.

01:31.690 --> 01:35.310
Vemos que tenemos a Heroku a continuación.

01:35.350 --> 01:40.720
Queremos hacer git add commit y luego empujar Hiroku Master.

01:40.740 --> 01:41.880
Todo bien.

01:41.970 --> 01:47.580
Y un recordatorio aquí de que, aunque no hemos cambiado nada en la interfaz, tenemos que ejecutar

01:47.580 --> 01:51.870
y git add y git commit.

01:52.050 --> 01:55.140
De lo contrario, los cambios no aparecerán en Hiroku.

01:55.140 --> 02:01.590
Así que digamos desplegar por ahora y luego podemos simplemente empujar a Heroku maestro.

02:05.850 --> 02:07.810
Parece un poco demasiado fácil.

02:07.920 --> 02:14.890
Bueno, vamos a dejar que esto se ejecute y veamos una vez que se implemente si todo está funcionando. Está bien, nuestro despliegue está hecho.

02:14.900 --> 02:17.130
Y mira que tenemos un nuevo enlace.

02:17.270 --> 02:20.050
Así que vamos a ejecutar Heroku abierto

02:23.840 --> 02:31.570
Muy bien, mira que tenemos un nuevo enlace en nuestra interfaz pero veamos si funciona si inicio sesión con

02:31.580 --> 02:35.970
Teddy en Gmail punto com hacer uno dos tres

02:38.680 --> 02:42.760
registrarse.

02:42.850 --> 02:43.270
Todo bien.

02:43.270 --> 02:46.780
Y mira eso. Teddy está cargado.

02:46.810 --> 02:52.050
Él ya hizo un conteo antes con la cara. Hagamos otro solo para asegurarnos de que funciona.

02:54.650 --> 02:57.150
Haga clic en detectar.

02:57.200 --> 03:04.450
No, no quiero que guarde la contraseña de Teddy, pero mire que todo está funcionando.

03:04.450 --> 03:06.290
Parecía casi demasiado fácil, ¿verdad?

03:06.300 --> 03:07.210
Muy guay.

03:07.270 --> 03:17.790
Repasemos una vez más lo que acabamos de hacer. Creamos tres servidores separados o tres computadoras separadas

03:18.360 --> 03:26.980
donde cada uno de estos rectángulos individuales se están ejecutando. Tenemos un postgreSQL, un servidor de nodos y un frente

03:26.980 --> 03:32.200
fin y todos ellos funcionan exactamente como estaban en nuestra computadora.

03:32.200 --> 03:39.280
Pero esta vez en producción. Vive, en el mundo. Y todo lo que tuvimos que hacer fue cambiar algunos números para

03:39.280 --> 03:44.770
asegúrese de que estamos apuntando estas flechas para que la interfaz sepa que es aquí donde nuestro servidor

03:44.770 --> 03:52.570
es y el servidor sabe que aquí es donde nuestras bases de datos y estas son solo pequeñas configuraciones que es

03:52.570 --> 03:54.660
realmente depende de cada plataforma

03:54.700 --> 03:59.100
usted trabaja con, pero los conceptos subyacentes son los mismos.

03:59.100 --> 04:02.250
Solo señala la dirección a la ubicación de estas cosas.

04:02.550 --> 04:03.880
Pero oh chico.

04:04.650 --> 04:08.880
Bueno, no es tan loco cómo tenemos todas estas cosas a trabajar.

04:08.880 --> 04:16.370
Recuerdo mi primera vez en mi carrera cuando logré conectar los puntos y construir realmente cada uno de estos

04:16.740 --> 04:18.200
mí mismo.

04:18.240 --> 04:19.430
Fue una revelación.

04:19.440 --> 04:26.100
Abrió un mundo completamente nuevo y me hizo entender realmente cómo todo está conectado y moviéndose

04:26.100 --> 04:27.380
en adelante desde ese punto

04:27.480 --> 04:38.100
Entendí la mayoría de las cosas y cada herramienta o nueva tecnología es solo una adición a esta idea preexistente.

04:38.340 --> 04:45.990
Y siempre que comprenda esta arquitectura subyacente, este concepto subyacente de diferentes servidores

04:45.990 --> 04:53.640
conectarse el uno al otro el resto son solo extensiones de esto.

04:53.650 --> 04:56.170
Entonces, ¿podríamos mejorar esta aplicación?

04:56.200 --> 04:57.130
Absolutamente.

04:57.190 --> 04:59.800
Puedes hacer muchas cosas con esta aplicación.

04:59.950 --> 05:07.570
Es posible que deseemos ser un poco más seguros y tal vez ni siquiera tener nuestra clave de API en nuestro código para

05:07.570 --> 05:09.760
nuestro servidor.

05:09.850 --> 05:12.910
Podemos crear algo así como variables ambientales para esto.

05:12.910 --> 05:23.590
Por ejemplo en Heroku si vamos a nuestra aplicación de cerebro inteligente o vamos a nuestro back-end a nuestro océano radiante ahora

05:23.590 --> 05:31.460
aquí si vamos a la configuración e ir a revelar VAR de configuración tenemos nuestras variables ambientales aquí

05:32.030 --> 05:33.120
establecido para nosotros

05:33.170 --> 05:35.820
Recuerdas postgres cómo tratamos de conectarnos a él.

05:35.840 --> 05:40.180
Y tuvimos un proceso dot dot dot dot DATABASE_URL.

05:40.190 --> 05:46.770
Bueno, podemos agregar nuestro propio si quisiéramos, podemos decir API clarifai

05:51.420 --> 06:05.250
agregue la clave de API que tenemos en nuestro backend aquí haga clic en ADD y ahora tenemos esto disponible para nosotros

06:05.940 --> 06:18.900
como un proceso punto env dot API clarifai que es yo creo lo que yo llamo el y esta es una capa adicional de

06:18.900 --> 06:26.900
seguridad no desea que haya nada confidencial como direcciones o contraseñas o claves API en su base de código.

06:26.940 --> 06:28.650
Entonces alguien puede mirarlo.

06:28.800 --> 06:34.800
Esto es algo a lo que te acostumbrarás cada vez más y con suerte con lo que sabes sobre el medioambiente

06:34.800 --> 06:35.820
variables.

06:35.820 --> 06:36.920
Esto tiene sentido.

06:38.000 --> 06:47.120
Pero por ahora, debido a que esta es una aplicación simple, no es necesario que agreguemos nada de esto, revertiremos los cambios.

06:50.740 --> 06:59.820
Y simplemente enorgullecerse de nosotros mismos por crear una aplicación increíble y desplegarla en la vida real.

07:01.790 --> 07:08.850
Ahora ve a compartir este enlace con todos tus amigos y familiares y cuéntales lo increíble que eres. Te veré

07:08.870 --> 07:10.380
en el siguiente.

07:10.440 --> 07:10.860
Adiós.
