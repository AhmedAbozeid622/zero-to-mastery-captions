WEBVTT

00:00.700 --> 00:09.660
Usemos KNEX para terminar algunas de nuestras otras rutas. Si vamos a la ID de barra diagonal.

00:09.790 --> 00:11.500
Realmente todavía no usamos esto en nuestra aplicación.

00:11.500 --> 00:14.440
Es algo para el desarrollo futuro.

00:14.440 --> 00:20.260
Este es un buen ejemplo porque a veces los ingenieros de back-end desarrollan puntos finales que

00:20.260 --> 00:25.750
podrían no usarse para el front-end, pero podrían necesitarse en instalaciones futuras como esta, donde

00:25.750 --> 00:33.250
tal vez tengamos una página de perfil para cada uno de nuestros usuarios y puedan editar esto y tal vez puedan

00:33.250 --> 00:36.240
tener una publicación, una eliminación, una colocación.

00:36.270 --> 00:42.240
Así que trabajemos en esto con el ID de punto de perfil, que quiero que agarre al usuario.

00:42.240 --> 00:45.580
Esa es una operación muy simple con nuestra base de datos correcta.

00:45.600 --> 00:53.040
Simplemente podemos eliminar esto ahora y decir que el punto DB selecciona todo porque queremos todo

00:55.700 --> 01:05.830
de la tabla de usuarios de la tabla de usuarios. Parece un poco demasiado fácil, ¿verdad?

01:05.840 --> 01:07.910
Veamos si eso funciona, entonces haré un punto.

01:10.040 --> 01:11.420
Devolveré al usuario.

01:13.260 --> 01:23.510
Y solo vuelva a iniciar sesión en la consola solo para probar todo, consolaremos al usuario de registro.

01:23.550 --> 01:24.960
Vayamos al perfil.

01:24.960 --> 01:26.050
Slash ID.

01:26.220 --> 01:36.760
Y recuerde que si volvemos a nuestra base de datos tenemos ID 1, 2, 3, 6, así que hagamos ID 1. Usando nuestro cartero tomaremos el

01:37.880 --> 01:40.890
perfil. Veremos si tenemos uno de estos aquí.

01:40.890 --> 01:41.340
Ahí tienes.

01:41.340 --> 01:45.670
Hay una solicitud de obtención, y haremos el perfil 1, enviar.

01:45.920 --> 01:54.630
Y si volvemos a la consola, está bien, estamos recibiendo a todos nuestros usuarios. Pero recuerde que con la ID de perfil queremos

01:54.630 --> 02:01.220
asegurarnos de que es la ID y no todos los usuarios a los que estamos agarrando.

02:01.450 --> 02:11.200
Así que simplemente podemos decir punto dónde y dentro de la cláusula WHERE si volvemos a KNEX y quiero demostrarles aquí que esto

02:11.200 --> 02:14.170
es lo que hace un desarrollador.

02:14.170 --> 02:20.120
No conocen todas las especificaciones de una biblioteca o un paquete.

02:20.140 --> 02:26.080
Simplemente te vuelves muy bueno leyendo la documentación y viendo por qué la necesitas, como aquí,

02:26.080 --> 02:32.940
y pasamos un objeto de lo que queremos verificar. Entonces, nombre Apellido de prueba Usuario.

02:32.980 --> 02:46.650
En nuestro caso, queremos un objeto donde ID es la ID que recibimos en los parámetros. Si guardamos y ejecutamos esto nuevamente a través de postgres,

02:46.650 --> 02:52.120
regrese a nuestro ejemplo y mire eso.

02:52.220 --> 03:04.840
Tenemos a Ann. Y queremos agarrar la matriz del usuario, para que podamos hacer, ¡vaya! Y podemos hacer cero.

03:04.860 --> 03:05.280
Asombroso.

03:06.550 --> 03:08.390
Solo para mantenerlo corto

03:08.400 --> 03:16.000
nuevamente, con ES6 podemos hacer esto porque la identificación, la propiedad y el valor son los mismos.

03:16.060 --> 03:27.040
Voy a guardar, y ahora, en lugar de iniciar sesión en la consola, haremos una respuesta dot Json user, ese será el usuario

03:27.040 --> 03:28.040
que obtengamos.

03:28.330 --> 03:30.560
Y ya no necesitamos encontrar eso, ¿verdad?

03:30.700 --> 03:32.160
Vamos a limpiar el código ahora.

03:32.360 --> 03:40.080
Y si esto no se encuentra bien, en ese caso obtendremos una matriz vacía.

03:41.230 --> 03:46.960
Pero primero veamos qué obtenemos con nuestra respuesta y luego tocaremos el caso de error. Guardaremos volver al

03:47.920 --> 03:53.390
cartero, enviaremos, y recibimos un error.

03:53.410 --> 03:57.480
Encontrado no está definido y deberíamos comentarlo.

03:57.670 --> 04:01.380
Lo intentaremos nuevamente, haga clic en enviar.

04:02.370 --> 04:04.220
Muy bien, tenemos a Ann.

04:04.530 --> 04:05.540
Esto es genial.

04:06.750 --> 04:08.250
Y si

04:11.430 --> 04:21.990
hacemos 2 obtenemos a Anne con una e. Si hacemos seis tenemos a Amy y si hago tres consigo a John. ¿Qué pasa si hago un número que

04:21.990 --> 04:23.010
no existe?

04:25.000 --> 04:27.360
Obtengo 200 OK sin respuesta.

04:28.600 --> 04:36.770
Porque bueno, no tenemos ese usuario. Pero solo consolamos el registro y veamos si recuperamos un usuario de esto.

04:36.890 --> 04:43.450
Si guardo y envío, obtengo una matriz vacía.

04:43.750 --> 04:49.350
Entonces todavía está devolviendo algo, solo me dice que no hay usuario.

04:49.540 --> 04:54.770
Si hago un caché de puntos aquí, déjenme arreglar la alineación aquí.

04:58.250 --> 05:11.880
Y hago el error con Json o respondo ese estado 400 y simplemente no lo encontraremos si guardo esto y vuelvo al cartero, haga clic

05:12.780 --> 05:16.640
en enviar nuevamente con la identificación incorrecta.

05:16.770 --> 05:32.270
Todavía obtengo 200 OK, no el error que detectamos porque en JavaScript si abro el Chrome nuevamente. Truco de javascript.

05:32.280 --> 05:35.860
Si hago una matriz booleana, una matriz vacía.

05:36.120 --> 05:39.030
Es técnicamente cierto.

05:39.070 --> 05:51.380
Entonces, en la forma en que queremos verificar la matriz vacía, simplemente decimos que si la longitud del punto del usuario

05:51.380 --> 06:01.420
existe en ese caso, será mayor que 1 o igual a 1 responderá con el usuario.

06:01.540 --> 06:05.150
De lo contrario, responderemos con

06:09.840 --> 06:14.130
nuestro estado no encontrado y tal vez también

06:17.250 --> 06:26.730
podamos decir aquí error al obtener el usuario. Si ahorramos ahora y volvemos a, eliminemos la consola porque ya no la necesitamos.

06:27.050 --> 06:28.040
Vuelve al cartero.

06:30.920 --> 06:34.090
Haz clic en enviar. Extraviado.

06:34.130 --> 06:35.040
Eso es genial.

06:35.180 --> 06:41.150
Recibimos una solicitud incorrecta de 400 pero si conseguimos a alguien que queremos, ahora está funcionando.

06:42.320 --> 06:45.900
Muy genial. Ahora podemos eliminar este código feo.

06:46.790 --> 06:50.540
Tenemos una sintaxis mucho mejor aquí ahora.

06:50.910 --> 06:53.150
Y también tenemos el registro hecho.

06:53.640 --> 06:55.630
Dejaremos el letrero hasta el final.

06:55.980 --> 06:59.580
Pero trabajemos en el punto final de la imagen en el siguiente.

07:00.780 --> 07:02.160
Ya veré en eso. Adiós.
