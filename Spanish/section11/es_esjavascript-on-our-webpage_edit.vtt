WEBVTT

00:00.840 --> 00:03.000
Y bienvenido de nuevo!

00:03.000 --> 00:10.830
Vamos a tomar un breve descanso de aprender la sintaxis de JavaScript para mostrarle cómo se implementa JavaScript en

00:11.190 --> 00:12.170
el navegador.

00:12.450 --> 00:15.730
Volveremos a esta imagen que hemos

00:15.780 --> 00:22.650
visto muchas veces antes en este curso. Y tenemos una idea bastante buena de lo que hace HTML y CSS.

00:22.650 --> 00:31.740
Si recuerdas, el HTML se envía al navegador, luego ve la etiqueta de 'enlace' y el CSS se envía al

00:31.740 --> 00:32.570
navegador.

00:32.670 --> 00:36.270
¿Pero qué hay de nuestro nuevo amigo JavaScript aquí?

00:36.300 --> 00:37.380
¿Qué pasa con él?

00:38.260 --> 00:43.350
Bueno, en este video vamos a aprender exactamente eso.

00:43.390 --> 00:49.340
Entonces tengo aquí un índice. archivo html Lo voy a abrir con Google Chrome.

00:49.450 --> 00:50.940
Está completamente vacío ahora.

00:51.250 --> 00:57.630
Y también voy a arrastrarlo a mi texto Sublime, para que podamos agregarle algo.

01:00.370 --> 01:06.790
Así que tengo texto Sublime y el navegador, y vamos a usar nuestro pequeño comando corto

01:06.790 --> 01:09.660
para crear un archivo html rápido: 'Javascript'.

01:09.970 --> 01:21.600
Y tengamos un simple 'encabezado' que dice 'Javascript en HTML'. Guarda y actualiza.

01:21.650 --> 01:22.260
¡Perfecto!

01:22.280 --> 01:23.910
Ya hemos dominado esto.

01:23.930 --> 01:25.760
Todos sabemos lo que está pasando.

01:26.180 --> 01:29.830
Entonces, ¿cómo agregamos JavaScript a esto?

01:29.840 --> 01:41.620
Quiero decir: con CSS teníamos la etiqueta 'link', ¿verdad? Y tuvimos este 'href' donde le decimos dónde está. Bueno, si recuerdas, JavaScript

01:41.620 --> 01:49.910
nuevamente, al igual que HTML y CSS, es solo un archivo.

01:50.050 --> 01:54.550
Así que creemos uno primero. En texto sublime voy a crear

01:54.550 --> 01:55.950
un nuevo archivo.

01:56.100 --> 02:00.170
Voy a guardarlo y voy a decir 'guión. js '.

02:00.220 --> 02:01.160
'guión. js '.

02:01.180 --> 02:02.860
¿Ves el 'punto js' al final?

02:02.860 --> 02:04.550
Eso significa JavaScript.

02:04.660 --> 02:10.050
Tenga en cuenta lo que sucede cuando hago clic en 'guardar'. En la parte inferior, Sublime

02:10.090 --> 02:13.780
Text ahora convirtió la sintaxis a JavaScript.

02:13.850 --> 02:21.440
Así que ahora puedo escribir algo como '4 + 3' y obtengo los colores geniales de JavaScript

02:21.890 --> 02:35.850
como, y puedo escribir 'if (4 + 3 === 7)', puedo 'alertar ("¡Eres inteligente! ").

02:36.500 --> 02:38.800
Entonces puedes ver que hace la sintaxis para mí.

02:39.870 --> 02:40.450
OKAY.

02:40.830 --> 02:42.220
Perfecto.

02:42.330 --> 02:44.650
Entonces solo guardo eso.

02:44.760 --> 02:47.840
Veamos si podemos agregar esto a ... ¡Uy!

02:47.880 --> 02:49.390
Olvidé el punto y coma aquí.

02:49.410 --> 02:51.080
Siempre lo olvido también.

02:51.210 --> 02:53.210
Agreguemos esto a nuestro HTML.

02:53.430 --> 02:58.720
Si funciona, recibiremos una 'alerta' que dice "¡Eres inteligente! " ¿Entonces cómo podemos hacer

02:58.920 --> 03:00.190
esto?

03:01.240 --> 03:06.780
Bueno, hay una etiqueta HTML llamada etiqueta 'script'.

03:07.150 --> 03:15.510
Entonces, etiqueta 'link' - para hoja de estilo, etiqueta 'script' para - JavaScript. Y todo lo que hacemos es esto: tenemos

03:15.680 --> 03:25.250
el 'type = "text / javascript"'. Puede ver aquí cómo con CSS tenemos "text / css". Bueno, aquí

03:25.250 --> 03:36.380
le decimos que esto es JavaScript. Y aquí JavaScript se puede escribir aquí mismo.

03:37.280 --> 03:45.150
Voy 'alert ("hola")' y tal vez recuerdes esto porque es algo así como la etiqueta 'estilo' para CSS.

03:45.310 --> 03:46.400
Veamos qué pasa.

03:47.380 --> 03:49.930
Voy a refrescarme y me

03:50.060 --> 03:50.790
saludará.

03:51.140 --> 03:51.950
¡Mira eso!

03:51.950 --> 04:01.520
Acabamos de agregar JavaScript a HTML. Pero realmente quiero usar este archivo. Como sabemos con CSS, no necesariamente queremos que

04:01.520 --> 04:06.890
nuestro JavaScript viva en HTML, queremos separar las preocupaciones, queremos el JavaScript en

04:06.890 --> 04:08.620
el archivo JavaScript.

04:09.180 --> 04:14.480
Bueno, la forma en que lo hacemos es a través de un archivo fuente.

04:15.040 --> 04:20.830
Entonces, todo lo que hacemos es - 'src'. Quizás recuerdes esto de las imágenes.

04:20.860 --> 04:27.690
Entonces, en lugar de 'href' y 'link' tenemos 'src' y decimos 'script. js '.

04:28.660 --> 04:34.300
Ahorro y refresco. Y entiendo "¡Eres inteligente! ".

04:34.310 --> 04:41.980
Ahora de nuevo podemos decir 'script. js 'porque, bueno, está en la misma carpeta, está en la carpeta del escritorio.

04:42.050 --> 04:49.130
Si no fuera así, digamos que este HTML no estaba en la carpeta del escritorio, tendríamos que hacer algo como 'escritorio /

04:49.160 --> 04:51.350
script. js ... '. OKAY.

04:59.150 --> 05:05.310
Eso es muy interesante. ¿Qué pasa si tengo varios archivos JavaScript? Podríamos

05:05.330 --> 05:09.440
haberlo visto en ... recuerda Bootstrap y Bootstrap tenemos como tres etiquetas de 'script'.

05:09.810 --> 05:10.600
Pues sí.

05:10.700 --> 05:18.020
Puede, al igual que con 'link', puede tener varias etiquetas 'script' y puede decir

05:18.050 --> 05:24.490
'script2', 'script3' y nuevamente, cada una se ejecuta de una en una.

05:25.660 --> 05:26.320
OKAY.

05:26.730 --> 05:36.540
Ahora, una pregunta que puede tener es: '¿Por qué acabo de poner la etiqueta' script 'en la parte inferior aquí, en la parte inferior

05:36.540 --> 05:38.200
del cuerpo? '¿Por qué

05:38.260 --> 05:39.190
no lo hicimos?

05:39.220 --> 05:41.200
Y déjenme eliminar esto por ahora ...

05:41.200 --> 05:47.550
¿Por qué no lo ponemos en la parte superior, como lo hacemos con el archivo CSS?

05:47.680 --> 05:49.140
Bueno, déjame mostrarte algo.

05:49.240 --> 05:50.560
Pongámoslo aquí.

05:50.560 --> 05:51.690
Veamos qué pasa.

05:52.000 --> 05:59.350
Me voy a refrescar. OKAY. Entiendo "¡Eres inteligente! "No sé si viste

05:59.390 --> 06:00.350
eso.

06:00.350 --> 06:02.030
¿Viste el JavaScript desaparecer?

06:02.180 --> 06:03.300
Cambiemos esto rápidamente.

06:03.320 --> 06:10.750
Digamos que nuestro sitio web ahora es nuevo y actual y voy a decir 'Esperando Javascript'.

06:11.010 --> 06:15.080
Me voy a salvar. Observe lo que le sucede al encabezado.

06:15.380 --> 06:18.970
Yo refresco No ha cambiado aún.

06:19.190 --> 06:22.500
Tengo que hacer clic en "¡Eres inteligente! "Ves, se

06:22.550 --> 06:24.600
ha ido por completo.

06:24.610 --> 06:34.640
Haga clic en 'Aceptar' y solo entonces aparecerá, porque el navegador lee el archivo, va y obtiene el archivo CSS y luego ve la etiqueta 'script' y dice "¡Oh, voy

06:34.640 --> 06:39.070
a leer lo que está aquí! "Y aquí hay

06:39.140 --> 06:42.770
una 'alerta' y qué 'alerta' hace ...

06:42.830 --> 06:50.090
Espera a que hagamos clic en 'Aceptar', por lo que el navegador no puede mostrar (mientras) espera JavaScript.

06:50.090 --> 06:56.750
Por lo tanto, verá personas de sitios web más antiguos que colocan las etiquetas de 'script' aquí, pero eso en realidad retrasa

06:56.750 --> 06:58.470
lo que ve el usuario.

06:58.820 --> 07:11.270
En cambio, si lo ponemos aquí y cambiamos el texto nuevamente a 'No esperando' y lo guardamos. Mira qué pasa.

07:13.260 --> 07:20.440
"No estoy esperando Javascript", eso cambió. Por lo tanto, idealmente queremos poner nuestras etiquetas 'script' en la parte inferior

07:20.440 --> 07:21.200
del cuerpo.

07:21.400 --> 07:31.270
Lo que eso significa es que el sitio web se muestra, se procesa y luego todavía tenemos que esperar a que se cargue el JavaScript,

07:31.270 --> 07:34.000
digamos que tuvimos una animación genial.

07:34.000 --> 07:36.070
Tendré que esperar hasta que eso cargue.

07:36.220 --> 07:43.090
Pero para un usuario, parece que el sitio web se carga mucho más rápido porque no puede hacer clic en un menú desplegable,

07:43.090 --> 07:48.790
o ver la animación de inmediato y notar que hay un retraso, pero verán un retraso si no ven

07:48.790 --> 07:50.310
nada en la pagina.

07:50.350 --> 07:54.030
Entonces, las etiquetas 'script' en la parte inferior.

07:54.110 --> 07:55.220
Una última cosa.

07:56.370 --> 08:00.600
¿Cómo conseguimos que esa consola imprima cosas?

08:01.440 --> 08:05.760
Sería bueno si, en lugar de estar alerta todo el tiempo, pueda obtener algo en la consola.

08:05.910 --> 08:14.060
Bueno, en JavaScript puedes hacer algo, llamado 'consola. Iniciar sesión'.

08:14.140 --> 08:18.710
Y aquí puedo decir "Helooooo".

08:18.820 --> 08:20.640
Entonces esta sintaxis es un poco rara.

08:20.650 --> 08:29.580
Explicaré más adelante qué está pasando aquí, pero 'consola. log 'es una pequeña sintaxis especial que podemos usar.

08:29.590 --> 08:39.420
Y ahora si actualizo la página, me registro aquí. Entonces puedo escribir todo lo que quiera aquí.

08:39.430 --> 08:46.130
Algo así como 'alerta' pero sin que esa molesta ventana emergente se repita una y otra vez.

08:46.310 --> 08:47.430
Y me sale "Hellooooo".

08:47.480 --> 08:51.800
Y usaremos 'consola. log 'mucho en los próximos dos videos.

08:51.820 --> 08:59.170
Puede ver aquí que es una buena manera de imprimir algo en la consola, antes de aprender a

08:59.530 --> 09:01.210
cambiar nuestro HTML.

09:02.420 --> 09:03.380
Entonces veré en el próximo. Adiós
