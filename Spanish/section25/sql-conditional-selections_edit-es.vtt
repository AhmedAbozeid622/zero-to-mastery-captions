WEBVTT

00:00.340 --> 00:02.580
¡Dar una buena acogida! Mientras estabas fuera

00:02.640 --> 00:06.080
Amy acaba de unirse a nuestra base de usuarios con un puntaje de 88.

00:06.300 --> 00:07.600
Perfecto.

00:07.650 --> 00:10.800
Ahora aprendamos algunos otros comandos SQL que son útiles.

00:10.800 --> 00:18.350
¿Qué ocurre si quiero capturar a todos los usuarios con nombres que comienzan con 'A'? Con SQL,

00:18.410 --> 00:20.140
es súper rápido y súper fácil.

00:21.240 --> 00:36.690
Simplemente podemos decir SELECCIONAR a TODOS los usuarios DONDE nombre y este es uno nuevo que estamos aprendiendo ASÍ. Y, como

00:36.690 --> 00:38.460
nos permite agregar una condición.

00:38.820 --> 00:40.980
En nuestro caso podemos decir 'A'

00:41.310 --> 00:46.080
Y luego, el signo de porcentaje que significa algo después de a.

00:46.310 --> 00:50.880
Si hago clic en punto y coma y entro, mira eso que obtengo

00:50.890 --> 00:56.470
Andrei y Amy. Probemos esto en nuestra GUI también.

00:57.500 --> 00:58.900
y le mostraremos lo que podemos hacer.

00:59.110 --> 01:01.720
Si voy aquí, solo copie y pegue esto.

01:08.820 --> 01:18.260
Y si cambio esto a minúsculas y ejecuto una consulta, bueno, no consigo nada porque tiene que ser mayúscula

01:18.260 --> 01:18.490
derecho.

01:18.490 --> 01:21.600
Estamos buscando 'A'.

01:21.620 --> 01:23.140
Ahí tienes.

01:23.350 --> 01:30.730
Aunque con SQL, nuestros comandos pueden ser en minúsculas o mayúsculas cuando hacemos búsquedas queremos asegurarnos

01:30.730 --> 01:38.050
que el caso importa y por eso sobre todo cuando almacenamos información en bases de datos que queremos hacer

01:38.050 --> 01:39.820
Seguro que hay algo de coherencia.

01:39.820 --> 01:47.520
Entonces, cuando guardamos esta información, como insertar. Quizás en el servidor escribimos en minúsculas todo para que

01:47.520 --> 01:49.610
no tenemos este problema

01:49.650 --> 01:52.410
¿Qué pasaría si quisiera hacer todos los nombres que terminan en 'y'?

01:52.680 --> 01:58.110
Si hago un porcentaje y ejecuto una consulta, recibo a Sally y Amy. Asombroso.

02:00.940 --> 02:03.160
De acuerdo, ¿y si quiero hacer algo diferente?

02:03.730 --> 02:07.510
Digamos que quiero ordenar todo en orden.

02:07.930 --> 02:10.660
Tal vez desde el puntaje más alto al puntaje más bajo.

02:10.870 --> 02:19.750
Bueno, podemos seleccionar todos de los usuarios y podemos ordenar por la columna que queremos ordenar.

02:19.850 --> 02:22.340
En nuestro caso, será el puntaje.

02:22.510 --> 02:28.620
Y si queremos hacer un ascenso o descenso, primero debemos descender.

02:28.720 --> 02:30.370
Y deletreé que descendía mal.

02:30.370 --> 02:32.380
Es DESC.

02:32.740 --> 02:35.000
Presiona enter y mira eso.

02:35.170 --> 02:47.090
Tengo a Sally y John como el puntaje más alto. Si hago ASC ascendente, obtengo un puntaje bajo Andrei, hmm.

02:47.280 --> 02:50.390
No estoy muy bien en este juego.

02:50.440 --> 02:52.030
Muy genial.

02:52.030 --> 02:53.770
¿Estás comenzando a ver el poder de SQL?

02:53.770 --> 03:00.370
Recuerda todos los bucles que hubiéramos tenido que hacer si tuviéramos nombres de usuario. SQL es realmente

03:00.370 --> 03:03.140
muy bueno en agarrar esta información.

03:03.160 --> 03:09.820
Viste lo rápido que es esto, incluso si esto fuera cientos de líneas, sería realmente bueno para obtener información,

03:10.120 --> 03:13.340
actualizar información, tal vez ordenarla.

03:13.360 --> 03:15.400
Es extremadamente poderoso.

03:15.400 --> 03:22.060
Casi desde la década de 1960 ha sido el lenguaje elegido para las bases de datos porque es tan

03:22.060 --> 03:22.560
bueno.

03:24.940 --> 03:25.570
Todo bien.

03:25.570 --> 03:26.330
Increíble.

03:26.650 --> 03:29.950
Estamos empezando a aprender más y más, unos cuantos más por delante.

03:29.950 --> 03:31.030
Te veré en el próximo.

03:31.330 --> 03:31.990
Adiós.
