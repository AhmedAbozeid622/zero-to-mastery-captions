WEBVTT

00:02.210 --> 00:10.700
NPM se creó para que los desarrolladores puedan compartir código JavaScript que hayan escrito. De esta manera

00:10.790 --> 00:16.660
cualquier desarrollador de todo el mundo puede tomar el código de otra persona que pueda resolver su problema.

00:17.780 --> 00:23.780
Esto crea una gran base de conocimiento de scripts que las personas pueden actualizar constantemente o mejorar y construir

00:23.780 --> 00:26.330
encima de. Como una cuestión de hecho,

00:26.330 --> 00:32.140
es muy raro que una aplicación o un sitio web en estos días se construyan desde cero.

00:32.990 --> 00:39.140
Al usar la inteligencia colectiva, podemos tomar piezas de código que son realmente buenas y construir en la parte superior

00:39.140 --> 00:40.950
de eso para crear nuestro producto

00:41.710 --> 00:48.070
Por ejemplo, con JavaScript puedes escribir aplicaciones de realidad virtual pero no tienes que figurar

00:48.070 --> 00:50.120
saca todo tu mismo

00:50.140 --> 00:56.980
Alguien por ahí ya trabajó en poder usar JavaScript VR. Así que usas el código de esa persona para

00:56.980 --> 00:58.200
comienza tu proyecto

00:58.270 --> 01:01.190
Vamos a hablar sobre cómo funciona NPM.

01:02.650 --> 01:05.490
NPM se ve así.

01:05.560 --> 01:13.180
Un sitio web con una barra de búsqueda se parece a Google, pero aquí puede buscar lo que llamamos Paquetes

01:15.210 --> 01:23.180
y estos paquetes están ubicados en el Registro NPM y este Registro realiza un seguimiento de los archivos que tienen

01:23.180 --> 01:25.130
sido enviado.

01:25.180 --> 01:33.100
Cualquiera puede enviar estos archivos que se llaman paquetes o módulos y contienen dos cosas;

01:33.100 --> 01:35.640
Un archivo JavaScript y un archivo package.json.

01:35.680 --> 01:43.010
y el archivo package.json que nunca has visto antes es un metarchivo que describe

01:43.280 --> 01:45.020
este paquete.

01:45.230 --> 01:54.540
Entonces, pueden ver aquí que este registro de NPM es solo un registro de todos estos archivos de JavaScript que

01:54.570 --> 01:55.770
otras personas han escrito.

01:56.850 --> 02:03.090
Y la idea es tener pequeños archivos JavaScript que hagan una cosa realmente bien para que otras personas

02:03.270 --> 02:03.950
puede usarlo

02:05.140 --> 02:16.820
Luego compones o combinas diferentes piezas de código y diferentes paquetes en tu proyecto para agregar funcionalidad

02:17.660 --> 02:22.400
y no tener que reescribir algo que ya ha sido escrito por otra persona.

02:23.110 --> 02:29.980
Entonces, como pueden ver aquí, digamos una persona que acaba de escribir un archivo JavaScript que es realmente

02:29.980 --> 02:30.970
realmente util.

02:30.970 --> 02:39.100
Bueno, ellos piensan que otras personas podrían usarlo así que lo empujan al Registro de NPM y

02:39.100 --> 02:46.670
Al usar la barra de búsqueda aquí, alguien puede encontrar su paquete, quizás estén buscando tener un archivo de script

02:46.720 --> 02:52.460
eso crea una lista de matrices para las personas interesadas en los gatos.

02:52.570 --> 03:02.100
Bueno, entonces pueden encontrar este archivo y descargarlo del Registro de NPM en su computadora.

03:02.170 --> 03:05.140
Entonces, hablemos de los beneficios de esto.

03:06.470 --> 03:11.360
Bueno, obtienes experiencia de otros, tal vez no sabes todo,

03:11.370 --> 03:13.560
tal vez otros son mejores que tú en

03:13.630 --> 03:18.280
esta cierta cosa bien usas ese conocimiento colectivo para usar su código.

03:19.180 --> 03:21.580
Pero también hay un inconveniente en esto.

03:21.780 --> 03:24.770
No todos los paquetes son buenos.

03:24.840 --> 03:34.080
Cualquiera puede poner su archivo en NPM, y también está agregando más bytes a su proyecto que hace que su

03:34.080 --> 03:36.210
tamaño del proyecto aún más grande.

03:36.210 --> 03:43.940
Si tienes todos estos archivos en tu proyecto, bueno, eso es un montón de archivos y cada uno va a

03:43.940 --> 03:47.820
tiene que ser enviado desde el servidor al navegador.

03:48.050 --> 03:54.110
Y como saben de secciones anteriores, queremos minimizar el tamaño de nuestro proyecto, así que creamos rápido

03:54.250 --> 04:01.540
aplicaciones web y hay un arte para encontrar buenos paquetes de NPM y te acostumbrarás después de un poco de

04:01.540 --> 04:02.300
experiencia.

04:02.320 --> 04:04.000
Entonces no te preocupes
 
04:04.270 --> 04:08.380
Ahora también ves aquí que tengo algo llamado hilo.

04:08.690 --> 04:15.320
hilo todavía usa el Registro de NPM, pero es posible que lo vea de vez en cuando, al igual que NPM.

04:15.370 --> 04:19.010
Es una herramienta para tomar cosas del Registro de NPM.

04:19.030 --> 04:26.560
No hablaremos sobre esto en este curso, pero solo tenga en cuenta que tanto el hilo como el NPM son muy similares.

04:26.560 --> 04:32.800
Si aprendes uno, entonces conoces al otro, así que no temas si conoces un proyecto que utiliza hilo

04:32.800 --> 04:38.470
en lugar de NPM Ahora puedes navegar por NPM y encontrar cosas.

04:38.790 --> 04:42.840
Pero generalmente hay tres tipos de paquetes.

04:43.060 --> 04:46.640
Uno es paquetes que puede usar en el navegador.

04:46.640 --> 04:52.390
Entonces en el Front End, entonces puedes descargar JQuery de NPM.

04:52.850 --> 04:58.010
Puede descargar todo tipo de secuencias de comandos que lo ayuden con el flujo de trabajo de front-end.

04:58.030 --> 05:04.330
El segundo tipo son los que te dan nuevos comandos que puedes usar en la línea de comando y te mostraré

05:04.330 --> 05:06.760
un ejemplo que más adelante en esta sección.

05:06.790 --> 05:15.100
Y finalmente, el tercer tipo de paquete de NPM es una vez que puedes usar en Node.js en Back End.

05:15.100 --> 05:21.640
Y eso puede sonarle aterrador, pero no se preocupe, cuando lleguemos a la sección Node.js, le mostraré algunos de los paquetes de Nodo.

05:21.640 --> 05:25.240
que puedes usar, pero es más o menos lo mismo que JavaScript.

05:25.480 --> 05:29.610
Como cuestión de hecho, NPM significa Node Package Manager.

05:29.620 --> 05:35.200
Inicialmente fue construido para nodo pero era tan bueno y tan popular que ahora puedes usarlo para el Front End

05:35.200 --> 05:36.220
también.

05:36.930 --> 05:38.820
Pero es todo lo mismo.

05:38.820 --> 05:40.430
Todo funciona igual.

05:40.530 --> 05:43.330
Como dije antes, solo son guiones que son

05:43.350 --> 05:49.710
puedes usar lo que otras personas han escrito y los vamos a usar mucho en este curso.

05:49.710 --> 05:53.730
Ahora usted se estará preguntando, ¿por qué estamos aprendiendo esto?

05:53.790 --> 05:57.600
y este curso? Quiero decir, ¿es realmente tan importante?

05:57.960 --> 06:00.710
Sí, en realidad hay tres deben hacer cosas.

06:00.810 --> 06:06.570
Ahora cuando comiences un proyecto en 2018, lo verás en cada proyecto.

06:06.570 --> 06:09.690
Una es que bueno, tienen un archivo HTML

06:09.820 --> 06:12.610
Archivo CSS o archivo JavaScript

06:12.960 --> 06:18.660
Pueden tener -pueden tener varios de estos, pero todos los proyectos tienen especialmente aquellos que son

06:18.660 --> 06:19.820
basado en web.

06:19.830 --> 06:27.060
También debe tener su proyecto en github y usar control de fuente como Git. Nadie almacena su propio

06:27.060 --> 06:28.260
proyecto en su computadora.

06:28.260 --> 06:31.820
Siempre lo tienen con control de fuente.

06:31.950 --> 06:39.090
Y finalmente administra dependencias que son paquetes que otras personas han escrito. Con NPM usando

06:39.300 --> 06:41.480
archivo package.json.

06:41.490 --> 06:48.300
Entonces en esta sección vamos a trabajar en esto y terminar nuestra configuración de cómo un proyecto típico

06:48.300 --> 06:52.520
parece en 2018 y sabemos cómo hacer los dos primeros, ¿verdad?

06:52.770 --> 06:58.650
Ahora en los próximos dos videos voy a mostrarte cómo comenzar a utilizar NPM para descargar archivos y usar

06:58.650 --> 07:01.900
package.json para administrar esos archivos.

07:02.250 --> 07:07.060
Es una parte crítica de un flujo de trabajo de desarrollador. Así que te veré en el próximo. adiós.
