WEBVTT

00:01.450 --> 00:08.180
En este video vamos a hablar sobre git y github y el control de fuente.

00:08.220 --> 00:14.580
Ahora quizás recuerde github de nuestra sección anterior donde solíamos poner el sitio web en línea, pero

00:14.580 --> 00:18.040
le mostraré que es mucho más que eso.

00:18.060 --> 00:24.750
Más importante aún, la mayoría de las empresas profesionales usan github y es una habilidad que todos los

00:24.750 --> 00:27.180
desarrolladores esperan que sea conocida ahora.

00:27.300 --> 00:29.880
Entonces esta es una sección importante.

00:30.030 --> 00:36.000
Una de las primeras cosas que la mayoría de los desarrolladores tienen que hacer en su primer día en el trabajo

00:36.000 --> 00:40.100
es cumplir con algo llamado solicitud de extracción que utiliza git y github.

00:40.320 --> 00:42.600
Lo veremos en esta sección.

00:42.600 --> 00:47.320
No se preocupe, aprenderá todo esto y tendrá sentido.

00:47.670 --> 00:49.510
Comencemos primero con el control de fuente.

00:49.680 --> 00:53.230
Hasta ahora solo hemos trabajado en archivos pequeños.

00:53.340 --> 00:55.930
No hay miembros del equipo solo nosotros mismos.

00:56.340 --> 00:58.380
Solo un par de archivos.

00:58.740 --> 01:02.630
Pero en la vida real probablemente no seas el único desarrollador de un equipo.

01:03.450 --> 01:04.950
Lo más probable es que los proyectos sean enormes.

01:04.950 --> 01:07.010
Hay muchos muchos archivos.

01:07.110 --> 01:12.720
El control de fuente nos permite asegurarnos de que varias personas puedan trabajar en el mismo archivo desde

01:12.720 --> 01:13.570
diferentes ubicaciones.

01:14.400 --> 01:21.750
Piense en ello como Google Docs que permite a las personas colaborar en un documento pero suficiente conversación.

01:21.750 --> 01:23.500
Vamos a echarle un vistazo.

01:23.520 --> 01:33.440
Aquí he configurado dos carpetas, una para mí, Andrei, que acaba de comenzar un nuevo trabajo en la compañía X, y tengo a Marcy

01:33.470 --> 01:40.830
aquí, que ha estado trabajando en la compañía por un tiempo y tiene archivos de proyectos aquí.

01:40.830 --> 01:46.610
Actualmente estoy usando los archivos de nuestro video generador de fondo ahora sin git o github.

01:46.610 --> 01:53.900
Lo que puedo hacer es copiar y pegar estos archivos para que tenga lo que tenga Marcy y podamos comenzar a trabajar en

01:53.900 --> 01:54.890
estos archivos.

01:54.950 --> 02:02.510
Puedo tener mi entorno de desarrollador aquí con mi terminal y mi texto sublime y puedo trabajar en cualquier cambio

02:02.510 --> 02:09.610
que deba hacerse en la aplicación y Marcy aquí también tiene su propia versión donde puede trabajar en

02:09.610 --> 02:13.480
ella y ambos estamos trabajando en el mismo proyecto

02:13.480 --> 02:20.200
Pero digamos que tanto Marcy como yo estamos trabajando en este proyecto y ella decide

02:20.200 --> 02:28.510
cambiar el nombre del proyecto de Fondo degradado a Fondo super y al mismo tiempo en mi proyecto decido

02:28.510 --> 02:31.130
llamar a este fondo Cool.

02:31.490 --> 02:39.820
Bueno, ahora tendrás que organizar una reunión entre Marcy y yo y decidir cómo debemos cambiar

02:39.820 --> 02:41.230
el código.

02:41.230 --> 02:46.520
Y este es un pequeño ejemplo, pero se puede imaginar que a medida que diferentes programadores trabajen juntos, siempre

02:46.540 --> 02:51.670
habrá un problema de una persona que cambia una cosa y otra persona que cambia otra cosa.

02:51.670 --> 02:58.360
Aquí es donde entró Source Control y Source Control es una forma de controlar esto donde tenemos

02:58.930 --> 03:02.260
un lugar en lugar de nuestras propias computadoras.

03:02.380 --> 03:08.740
En este caso, solo está representado por la carpeta que tengo aquí. En lugar de que cada uno de nosotros tenga

03:09.070 --> 03:12.640
una copia del proyecto, con el control de origen tenemos una

03:12.640 --> 03:14.660
copia del archivo del proyecto.

03:14.740 --> 03:20.950
Hay una ubicación centralizada en algún lugar que tal vez sea propiedad de la compañía o en algún

03:21.190 --> 03:28.300
lugar de Internet que tenga la versión definitiva con la que hablamos para asegurarnos de que cada uno tenga la

03:29.120 --> 03:35.110
misma versión Obtener github es una forma de hacer esto para poder usar la fuente controlar.

03:35.170 --> 03:39.030
Y de hecho, es la forma de facto de hacer esto.

03:39.070 --> 03:46.080
Como dije antes, esta es probablemente la herramienta que usará todos los días en su lugar de trabajo.

03:46.250 --> 03:54.200
Entonces, si voy al sitio web de Github aquí, lo que nos permite hacer es un lugar, un lugar central

03:54.230 --> 03:58.240
con el que tanto Andrei como Marcy pueden hablar.

03:58.280 --> 04:07.110
Entonces, aunque trabajemos en los mismos archivos del mismo proyecto, puedo preguntarle a esta ubicación central como

04:07.110 --> 04:07.680
github.

04:07.800 --> 04:11.020
Oye, ¿Marcy ha hecho algún cambio?

04:11.460 --> 04:14.410
Y Marcy puede preguntar: ¿Andrei ha hecho algún cambio?

04:16.410 --> 04:22.050
Y de vez en cuando obtendrás algo como esto, donde tenemos un fondo genial y un

04:22.320 --> 04:25.880
fondo súper donde tenemos algo llamado conflicto de fusión.

04:26.460 --> 04:33.320
Lo que Github nos permite hacer es decir, oye, noto que hay un conflicto de fusión.

04:33.360 --> 04:35.940
Veo que ustedes dos han cambiado sus antecedentes.

04:35.940 --> 04:41.090
No sé quién tiene razón, pero aquí está la información. Andrei y Marcy, ¿pueden

04:41.340 --> 04:43.920
hablar entre ustedes y resolverlo?

04:45.220 --> 04:46.180
Eso es más o menos trabajo.

04:46.180 --> 04:48.950
Así que veamos cómo se ve esto.

04:50.080 --> 04:53.390
Lo primero que queremos hacer es configurar una cuenta de github.

04:53.680 --> 04:59.400
Si no lo ha hecho en los ejercicios anteriores, debería comenzar una cuenta de github.

04:59.410 --> 05:00.600
Es gratis.

05:00.670 --> 05:06.870
Y como dije antes, si eres un desarrollador, solo necesitas tenerlo donde todos pongan sus proyectos.

05:06.880 --> 05:12.640
Es donde trabajas, pasarás mucho tiempo en este sitio web.

05:12.710 --> 05:15.690
Quizás recuerdes que cuando tuvimos el proyecto github, también

05:15.860 --> 05:18.590
te dije que obtuvieras github para escritorio.

05:21.390 --> 05:24.620
Aunque usamos eso para simplificar las cosas durante ese video.

05:24.630 --> 05:27.560
En realidad, esta no es la forma recomendada de hacerlo.

05:27.570 --> 05:34.680
Le permite ver e interactuar visualmente con github, pero los empleadores lo desprecian y la mayoría de la

05:34.680 --> 05:39.420
gente usa el terminal o el símbolo del sistema para hacerlo.

05:39.420 --> 05:44.790
Así que no te enseñaré de esta manera solo porque creo que es una mala práctica y es

05:44.880 --> 05:46.450
importante acostumbrarse a la terminal.

05:46.470 --> 05:51.360
Voy a cerrar eso y vamos a comenzar. Lo primero que haremos

05:51.360 --> 05:57.850
es hacer clic en iniciar un proyecto. Y aquí lo llamaremos como queramos,

05:58.070 --> 06:01.260
lo llamaremos generador de fondo.

06:01.600 --> 06:08.020
Y también desea dejarlo como público y queremos hacer clic en inicializar esto con un archivo Léame y

06:08.020 --> 06:09.910
haremos clic en Crear repositorio.

06:10.030 --> 06:10.920
Y que hace eso.

06:10.930 --> 06:13.730
Bueno, hemos creado un nuevo proyecto en github.

06:14.230 --> 06:18.950
Y aquí el archivo Léame, que es solo un archivo que describe su proyecto.

06:18.970 --> 06:24.910
Puede ver que está aquí, podemos escribir en el archivo Léame lo que queramos y describirá nuestro proyecto.

06:25.270 --> 06:32.350
Pero volvamos. Si Marcy digamos que Marcy ha estado trabajando en esta empresa durante mucho tiempo.

06:32.380 --> 06:34.410
De hecho, voy a eliminar mis archivos aquí.

06:36.860 --> 06:42.770
Marcy ha estado trabajando en esta compañía durante mucho tiempo, y el empleador finalmente decidió oye, tenemos que

06:42.770 --> 06:46.290
usar github, vamos a contratar a este nuevo tipo Andrei.

06:46.490 --> 06:51.270
Queremos asegurarnos de que ambos puedan trabajar juntos en el proyecto sin ningún problema.

06:51.290 --> 06:53.560
¿Puedes poner el proyecto en github?

06:54.020 --> 07:01.610
Entonces, lo que hará Marcy es que irá a github, creará un generador de fondo y luego hará

07:01.610 --> 07:04.510
clic aquí para clonar o descargar.

07:04.580 --> 07:08.370
Y se asegurará de que diga usar HTTPS.

07:08.660 --> 07:13.510
Y desde aquí, simplemente haga clic en este botón que copia este enlace a su teclado.

07:15.000 --> 07:24.570
Luego Marcy va a su terminal y ahora estamos en Documentos, queremos tener el proyecto en la carpeta

07:24.570 --> 07:25.400
Marcy.

07:25.440 --> 07:28.320
Así que voy a cd en Marcy. Si hago clic

07:28.320 --> 07:29.330
en ls

07:29.340 --> 07:31.630
veo que, sí, tengo mis archivos.

07:31.710 --> 07:42.840
Ahora, el primer comando que vamos a aprender se llama git clone y luego copia y pega lo que copiamos del sitio

07:42.840 --> 07:43.800
web.

07:43.890 --> 07:49.430
Solo estamos diciendo oye clonar este proyecto desde github. com Entonces presiono

07:49.860 --> 07:52.930
enter y ya está.

07:53.040 --> 07:55.320
Todo está descargado.

07:55.380 --> 08:01.740
Si vuelvo a la carpeta ahora veo que tengo generador de fondo. Si hago doble clic en esto, verás

08:01.740 --> 08:05.000
que tengo un. carpeta git aquí que está realmente oculta.

08:05.010 --> 08:09.870
Es posible que ni siquiera lo vea en su computadora portátil si no tiene esta función habilitada en su computadora.

08:09.960 --> 08:15.060
Pero esto . git ahora me permite comunicarme con github.

08:15.120 --> 08:16.290
Entonces, ¿qué podemos hacer ahora?

08:16.350 --> 08:23.970
Marcy puede copiar y pegar estos archivos y ponerlos en el generador de fondo.

08:23.970 --> 08:26.860
Ahora déjame mostrarte el siguiente comando git.

08:27.210 --> 08:27.840
Marcy

08:27.840 --> 08:34.200
en este momento, si vemos, está en su carpeta, pero ahora tenemos que entrar en el generador de fondo porque

08:34.740 --> 08:36.090
si hacemos algún comando

08:36.420 --> 08:39.840
git aquí, bueno, no funcionará porque no es un proyecto git.

08:39.840 --> 08:43.510
Necesitamos realmente entrar al proyecto que se creó en github.

08:43.800 --> 08:45.980
Así que voy a cd en ese directorio.

08:46.170 --> 08:52.650
Observe aquí que tengo mi terminal configurado para que realmente me muestre en qué ubicación de github estoy y explicaré

08:52.650 --> 08:54.600
lo que significa maestro más adelante.

08:54.600 --> 08:58.520
Ahora que estamos aquí podemos ver todos nuestros archivos.

08:58.620 --> 08:59.850
Sí, ya veo eso.

08:59.850 --> 09:02.810
Ahora tengo mi README que creé en github.

09:03.090 --> 09:12.250
Además de los archivos que copié y pegué. Necesitamos sincronizar esto para que si entro en mi generador de fondo,

09:12.250 --> 09:20.890
en lugar de los archivos README, Marcy puede poner sus archivos en github de la forma en que lo hacemos, es nuestro

09:21.610 --> 09:32.320
segundo estado de comando git. Nos dice que tenemos archivos sin seguimiento. Es decir, tenemos índice. html, script. js,

09:32.360 --> 09:40.140
y estilo sin seguimiento. Y dice que use el archivo git add para incluir lo que se confirmará.

09:40.490 --> 09:48.680
Entonces, ahora que vemos nuestro estado de lo que tenemos en nuestra carpeta, podemos decir git add y el nombre

09:48.680 --> 10:01.970
del archivo para que pueda hacer el índice. html, git add script. js y git agregan estilo. css Vamos a

10:02.030 --> 10:06.460
borrar esto para que podamos verlo.

10:06.570 --> 10:11.100
Y ahora puedo volver a hacer git status solo para ver cuál es nuestro estado.

10:11.480 --> 10:16.680
Y ahora que tengo su sucursal está actualizada, los cambios se comprometen.

10:16.700 --> 10:21.380
Ves que ahora con add hemos dicho oye, queremos agregar estos cambios.

10:21.470 --> 10:27.080
Tenemos nuevos archivos que hemos agregado y dice que se comprometan.

10:27.110 --> 10:35.710
Entonces, el segundo paso es hacer algo llamado git commit y git commit dice oye, me comprometo a que estos

10:35.720 --> 10:39.670
son los cambios que quiero hacer en github.

10:39.890 --> 10:45.920
Y le permite pasar un mensaje para que en github muestre el mensaje cuando Andrei regrese y pueda

10:45.920 --> 10:49.760
decir oh Marcy agregó estos archivos y este es el mensaje.

10:49.790 --> 10:52.600
Y hacemos eso haciendo esto.

10:52.880 --> 11:02.750
Y aquí dentro de las comillas dobles que puedo decir, agregando el proyecto inicial, cierre el paréntesis, presione

11:02.750 --> 11:03.760
enter.

11:04.490 --> 11:05.830
Voy a aclarar esto.

11:05.960 --> 11:09.280
Ahora hay un último paso. Hemos agregado

11:09.470 --> 11:16.470
Hicimos git add para agregar nuestros cambios, luego git commit to commit y dijimos que sí estamos bloqueando esos cambios.

11:16.550 --> 11:22.600
Y finalmente, tenemos que dejar que github. com sabe que estos son los cambios.

11:22.610 --> 11:25.190
Así que hacemos git

11:28.440 --> 11:38.900
push y listo, ahora se ha enviado a este repositorio. Entonces, si regreso y actualizo, miren que es lo mismo que hicimos

11:39.260 --> 11:42.850
cuando publicamos nuestro primer sitio web en línea.

11:43.130 --> 11:49.310
Pero en lugar de usar la versión de escritorio de github, usamos la línea de comando y ahora tenemos

11:49.610 --> 11:51.860
nuestro proyecto, que es muy bueno.

11:51.860 --> 11:53.650
Ahora volvamos a nuestro ejemplo.

11:53.720 --> 11:55.890
Entonces Marcy ha estado trabajando en este proyecto.

11:55.910 --> 12:02.950
Hay un repositorio de git y me acabo de unir a la empresa y ahora necesito comenzar a trabajar en esto.

12:03.190 --> 12:09.020
¿Qué debo hacer? Ahora necesito acceder a github y obtener la copia del generador de fondo.

12:09.140 --> 12:11.870
La forma en que lo hago bien va a mi carpeta

12:15.570 --> 12:16.880
y hago lo mismo.

12:16.890 --> 12:30.110
Hago git clone y luego copio y pego el repositorio como antes. git clone y clone el repositorio.

12:30.540 --> 12:31.280
Y ahi tienes.

12:31.560 --> 12:36.860
Si vuelvo a mi carpeta, mira eso, tengo un generador de fondo.

12:37.020 --> 12:43.800
Entonces, ambos estamos trabajando ahora en el generador de fondo, pero no en los archivos del otro, estamos trabajando

12:44.010 --> 12:46.810
con cualquier versión que esté en github.

12:46.920 --> 12:47.210
Todo bien.

12:47.280 --> 12:50.040
Entonces ahora más realista.

12:50.040 --> 12:56.460
Volvemos a trabajar y el primer día de mi trabajo, digo, voy a cambiar el

12:56.700 --> 12:57.240
título

12:57.240 --> 13:02.900
de fondo del Gradiente, en realidad, la etiqueta h1 a Cool generador.

13:03.390 --> 13:10.070
Si guardo esto y hago git status.

13:10.380 --> 13:18.260
Bueno, no estoy en un repositorio git en este momento si recuerdas que tengo que ir al generador de fondo.

13:18.450 --> 13:21.210
Déjame abrir eso un poco para que puedas ver.

13:21.220 --> 13:22.910
Ahí lo tienes De nuevo, estos comandos

13:22.960 --> 13:28.240
git no funcionarán si no estás en una carpeta que sí lo tiene. carpeta git

13:28.450 --> 13:32.310
Déjame hacer eso, cd en el generador de fondo.

13:32.430 --> 13:37.270
Voy a borrar esto y voy a decir git status.

13:37.480 --> 13:38.010
Y mira eso.

13:38.040 --> 13:40.990
Me dice que he modificado el índice. archivo html

13:41.520 --> 13:47.360
Y si recordamos, diré, git add, solo tengo un archivo que puedo

13:47.350 --> 13:48.550
indexar. html

13:48.690 --> 13:53.670
Pero si quisiera, si tuviera varios archivos y quisiera confirmarlos todos

13:53.820 --> 14:00.060
a la vez, puedo hacer el período. Así que haré eso y luego git commit y agregaré un mensaje.

14:00.060 --> 14:05.910
Cambio de titulo. Presiono enter.

14:06.560 --> 14:08.320
Aclaro esto bien.

14:08.350 --> 14:15.850
Y de nuevo, hago git push y parece que todo pasó.

14:15.850 --> 14:18.430
Así que vamos a abrir eso y echarle un vistazo.

14:18.460 --> 14:19.690
Ahora actualizo aquí,

14:22.950 --> 14:31.350
y no hemos visto ningún cambio, pero ahora vemos que tenemos tres confirmaciones. Tenemos la confirmación inicial, el proyecto

14:31.350 --> 14:39.770
de fondo agregado que hizo Marcy y le muestra todos los archivos que hemos agregado.

14:39.990 --> 14:49.560
Y si vuelvo, tengo el cambio de título y ahora veo que sí, Andrei acaba de cambiar el generador

14:49.560 --> 14:54.670
de fondo que está en rojo al generador Cool.

14:54.750 --> 15:00.180
Como puede ver, tenemos un historial de todos los cambios y siempre podemos retroceder si hay algún

15:00.810 --> 15:03.600
error, pero hay un problema en este momento.

15:03.780 --> 15:10.390
Si vuelvo al código y voy a la computadora de Marcy, veo que

15:10.420 --> 15:15.170
bien, ella todavía tiene un generador de fondo aquí.

15:15.190 --> 15:15.960
¿Porqué es eso?

15:16.090 --> 15:21.260
Bueno, porque su computadora no sabe que github ha sido actualizado.

15:21.430 --> 15:28.150
El siguiente comando que le mostraré es el último que le mostraré en este video es git

15:28.320 --> 15:29.000
pull.

15:29.380 --> 15:38.520
Entonces, ¿recuerdas git push? Para empujar los cambios a github. com y git pull para sacar lo que sea lo último.

15:38.530 --> 15:42.680
Así que hago git pull y ahí lo tienes.

15:42.730 --> 15:48.470
Ves aquí que me muestra ese índice. El archivo html fue cambiado.

15:48.490 --> 15:54.290
Ahora ves que mi título ha sido cambiado a Cool generador.

15:54.540 --> 16:00.190
Digamos que Marcy vio mi primer cambio y realmente le gusta cómo agregué un generador genial.

16:00.300 --> 16:03.930
Pero creo que quiere capitalizarlo. Nuevamente, va

16:03.940 --> 16:05.780
a salvar eso.

16:06.100 --> 16:09.090
Ella va a decir estado git.

16:09.150 --> 16:09.450
Todo bien.

16:09.450 --> 16:22.980
Tengo mi indice. archivo html, git add, luego git commit y agregaré el mensaje,

16:25.190 --> 16:29.560
capitalizaré el título y luego git push.

16:29.570 --> 16:35.120
Ahí tienes. De nuevo, vuelvo, me refresco.

16:35.590 --> 16:43.020
Y ahora hay cuatro commits y vemos que capitalizar el título son los nuevos cambios.

16:43.140 --> 16:44.830
El primer día de trabajo está hecho.

16:44.910 --> 16:53.370
Entro al día siguiente en el trabajo y bueno, quiero comenzar con lo que sea que sea el

16:53.370 --> 16:59.700
último proyecto de generador de fondo. Y digamos que Marcy trabajó toda la noche para cambiar ese título para enfriar, capitalizar.

16:59.700 --> 17:02.200
Quiero asegurarme de tener la versión más actualizada.

17:02.220 --> 17:07.700
Entonces, lo que hago es cuando me pongo a trabajar por la mañana, diré, bueno, quiero asegurarme de que

17:07.740 --> 17:12.170
si Marcy hace algún cambio, sé sobre ellos, así que voy a decir git pull.

17:12.270 --> 17:20.010
Y observe aquí cómo van a cambiar los títulos después de hacer la extracción y ahora hago clic en

17:20.040 --> 17:22.210
el texto sublime y listo.

17:22.260 --> 17:25.040
Genial generador.

17:25.070 --> 17:25.480
Todo bien.

17:25.490 --> 17:33.080
En el siguiente video vamos a ampliar esto y mostrarte lo que sucede si Marcy y Andrei

17:33.140 --> 17:35.480
hacen los mismos cambios.

17:35.900 --> 17:37.640
¿Qué hace github?

17:37.700 --> 17:38.980
Te veré en ese.

17:39.050 --> 17:39.320
Adiós
