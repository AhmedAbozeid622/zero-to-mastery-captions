WEBVTT

00:00.700 --> 00:09.660
Usemos KNEX para terminar algunas de nuestras otras rutas. Si vamos a ID de barra de perfil.

00:09.790 --> 00:11.500
Realmente no usamos esto todavía en nuestra aplicación.

00:11.500 --> 00:14.440
Es algo para el desarrollo futuro.

00:14.440 --> 00:20.260
Este es un buen ejemplo porque a veces los ingenieros de backend desarrollan puntos finales que podrían no ser utilizados

00:20.260 --> 00:25.750
para la parte delantera, pero podrían necesitar en futuras instalaciones como esta, donde tal vez podríamos

00:25.750 --> 00:33.250
tener una página de perfil para cada uno de nuestros usuarios y ellos pueden editar esto y tal vez puedan tener una publicación, una

00:33.250 --> 00:36.240
eliminar, poner

00:36.270 --> 00:42.240
Así que trabajemos en esto con la identificación de punto de perfil, que quiere que agarre al usuario.

00:42.240 --> 00:45.580
Es una operación muy simple con nuestra base de datos correcta.

00:45.600 --> 00:53.040
Simplemente podemos eliminar esto ahora y decir DB dot dot select

00:55.700 --> 01:05.120
todo porque queremos todo de la tabla de usuarios de la tabla de usuarios. Parece un poco demasiado fácil

01:05.120 --> 01:05.830
derecho.

01:05.840 --> 01:07.910
Veamos si eso funciona, entonces haré un punto.

01:10.040 --> 01:11.420
Devolveré al usuario.

01:13.260 --> 01:23.510
Y solo el registro de la consola nuevamente solo para probar todo, lo consolaremos al usuario de registro.

01:23.550 --> 01:24.960
Vamos al perfil

01:24.960 --> 01:26.050
Slash ID.

01:26.220 --> 01:36.760
Y recuerde que si volvemos a nuestra base de datos, tenemos ID 1, 2, 3, 6, así que solo hagamos ID 1. Usando nuestro cartero

01:37.880 --> 01:40.890
agarraremos el perfil. Veremos si tenemos uno de estos aquí.

01:40.890 --> 01:41.340
Ahí tienes.

01:41.340 --> 01:45.670
Hay una solicitud de obtención, y haremos el perfil 1, enviar.

01:45.920 --> 01:54.630
Y si volvemos a la consola, bien, estamos recibiendo a todos nuestros usuarios. Pero recuerda con la identificación del perfil que

01:54.630 --> 02:01.220
queremos asegurarnos de que sea la ID y no todos los usuarios a los que estamos agarrando.

02:01.450 --> 02:11.200
Entonces podemos decir punto donde y dentro de la cláusula WHERE si volvemos a KNEX y quiero demostrar

02:11.200 --> 02:14.170
para usted aquí que esto es lo que hace un desarrollador.

02:14.170 --> 02:20.120
No conocen todas las especificaciones de una biblioteca o un paquete.

02:20.140 --> 02:26.080
Simplemente te vuelves muy bueno leyendo la documentación y viendo por qué lo necesitas, como aquí, y

02:26.080 --> 02:32.940
pasar un objeto con el que queremos verificar. Por lo tanto, primer nombre Apellido de la prueba Usuario.

02:32.980 --> 02:46.650
En nuestro caso, queremos un objeto donde ID es la ID que recibimos en los params. Si guardamos y ejecutamos esto

02:46.650 --> 02:52.120
nuevamente a través de postgres, regrese a nuestro ejemplo y mire eso.

02:52.220 --> 03:04.840
Tenemos a Ann. Y queremos captar la matriz del usuario, así que podemos hacer, uy, y simplemente podemos hacer cero.

03:04.860 --> 03:05.280
Asombroso.

03:06.550 --> 03:08.390
Solo para mantener esto corto

03:08.400 --> 03:16.000
De nuevo, con ES6 podemos hacer esto porque tanto el id como la propiedad y el valor son los mismos.

03:16.060 --> 03:27.040
Voy a guardar, y ahora, en lugar del registro de la consola, haremos el usuario de la respuesta dot Json, que será el usuario

03:27.040 --> 03:28.040
eso lo conseguimos

03:28.330 --> 03:30.560
Y no necesitamos eso encontrado más, ¿verdad?

03:30.700 --> 03:32.160
Vamos a limpiar el código ahora.

03:32.360 --> 03:40.080
Y si esto no se encuentra bien, en ese caso obtendremos una matriz vacía.

03:41.230 --> 03:46.960
Pero veamos primero lo que obtenemos con nuestra respuesta y luego tocaremos el caso de error. Vamos a guardar

03:47.920 --> 03:53.390
Regrese al cartero, le enviaremos y obtenemos un error.

03:53.410 --> 03:57.480
Found no está definido y deberíamos comentarlo.

03:57.670 --> 04:01.380
Intentaremos eso de nuevo, haga clic en enviar.

04:02.370 --> 04:04.220
Está bien, tenemos a Ann.

04:04.530 --> 04:05.540
Esto es genial.

04:06.750 --> 04:08.250
Y si hacemos 2

04:11.430 --> 04:21.990
conseguimos a Anne con una e. Si hacemos seis, tenemos a Amy y si hago tres, recibo a John. ¿Qué pasa si hago un número que

04:21.990 --> 04:23.010
no existe

04:25.000 --> 04:27.360
Obtengo 200 OK sin respuesta.

04:28.600 --> 04:36.770
Porque bueno, no tenemos ese usuario. Pero vamos a iniciar sesión en la consola y ver si recuperamos a un usuario de esto.

04:36.890 --> 04:43.450
Si guardo y envío obtengo una matriz vacía.

04:43.750 --> 04:49.350
Así que todavía está devolviendo algo, solo me dice que no hay usuario.

04:49.540 --> 04:54.770
Si hago un caché de puntos aquí, permítanme corregir la alineación aquí.

04:58.250 --> 05:11.880
Y hago el error con Json o respondo ese estado 400 y no lo haremos si guardo esto

05:12.780 --> 05:16.640
y vuelve al cartero, haz clic en enviar de nuevo con la ID incorrecta.

05:16.770 --> 05:28.960
Todavía obtengo 200 OK, no el error que atrapamos porque en javascript si abro el cromo de nuevo. Truco

05:28.980 --> 05:32.270
de javascript Si lo hago

05:32.280 --> 05:35.860
Boolean array una matriz vacía.

05:36.120 --> 05:39.030
Es técnicamente cierto.

05:39.070 --> 05:51.380
Entonces, la forma en que queremos verificar contra la matriz vacía, simplemente decimos si la longitud del punto del usuario existe en ese

05:51.380 --> 06:01.420
caso de que sea mayor que 1 o igual a 1, responderá con el usuario.

06:01.540 --> 06:05.150
De lo contrario, responderemos con

06:09.840 --> 06:14.130
nuestro estado no se encuentra y tal vez también podamos decir aquí

06:17.250 --> 06:26.730
error al obtener usuario. Si guardamos ahora y volvemos a - eliminemos la consola porque ya no la necesitamos.

06:27.050 --> 06:28.040
Regresa al cartero.

06:30.920 --> 06:34.090
Haga clic en enviar. Extraviado.

06:34.130 --> 06:35.040
Eso es genial.

06:35.180 --> 06:41.150
Recibimos una mala solicitud de 400, pero si agarramos a alguien que queremos, ahora está funcionando.

06:42.320 --> 06:45.900
Muy genial. Ahora podemos eliminar este código feo.

06:46.790 --> 06:50.540
Tenemos una sintaxis mucho mejor aquí ahora.

06:50.910 --> 06:53.150
Y también tenemos el registro hecho.

06:53.640 --> 06:55.630
Dejaremos el letrero hasta el final.

06:55.980 --> 06:59.580
Pero trabajemos en el punto final de la imagen en el próximo.

07:00.780 --> 07:02.160
Veré en eso. Adiós.
