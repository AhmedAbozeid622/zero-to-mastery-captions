WEBVTT

00:00.520 --> 00:01.780
Dar una buena acogida.

00:01.780 --> 00:08.160
Lo dejamos en el último video con este registro de la consola de la consulta KNEX que acabamos de hacer.

00:08.200 --> 00:16.000
Ahora esto a la derecha aquí es lo que hace KNEX. Construye nuestra declaración SQL para nosotros.

00:16.300 --> 00:26.230
Entonces, lo que acabamos de consolar, fue la declaración de consulta que postgres o KNEX crearon para postgres.

00:26.340 --> 00:32.100
Puedes ver aquí que el constructor es un objeto que tiene toda la información que necesitamos para hablar

00:32.100 --> 00:34.670
el cerebro inteligente y hacer esta consulta.

00:34.770 --> 00:43.890
Si realmente quiero acceder a algo de los usuarios, tendré que hacer a nuestro amigo .then () porque

00:44.010 --> 00:49.170
esto devuelve una promesa y obtenemos nuestra respuesta.

00:49.170 --> 00:55.950
En nuestro caso, serán los datos, esta información. De nuevo, no tenemos que hacer Json porque no lo estamos enviando a través de HTTP.

00:55.950 --> 01:03.040
recuperamos los datos y si solo consolamos. registramos esta información, veamos qué obtenemos.

01:03.140 --> 01:09.420
Guarde y baje y es una matriz vacía.

01:09.460 --> 01:10.510
Esa es una buena señal.

01:10.510 --> 01:13.480
Todavía no tenemos usuarios, pero recibimos una respuesta.

01:14.320 --> 01:15.270
Así que hagámoslo.

01:15.490 --> 01:21.960
Vamos a crear una declaración para insertar usuarios cuando se registren.

01:22.090 --> 01:28.390
Voy a cambiar esto en la variable DB para que no se confunda.

01:28.630 --> 01:31.740
Y lo mantendremos como base de datos.

01:31.740 --> 01:37.710
Bien, vayamos al punto final del registro y voy a minimizar esta base de datos porque vamos a

01:37.710 --> 01:40.440
dejar de usarlo y eliminarlo después.

01:42.680 --> 01:49.490
Y si vamos a registrarnos vemos que ahora en lugar de hacer la base de datos .users.push en la variable

01:49.730 --> 01:59.490
simplemente podemos usar KNEX, podemos eliminar esto y hacer DB dot - Bueno, tendremos que insertar,

01:59.490 --> 01:59.920
derecho.

02:00.120 --> 02:06.780
Miremos los documentos KNEX y veamos y vemos métodos claros - insertar.

02:06.790 --> 02:08.670
Muy bien mira esta gran documentación.

02:08.670 --> 02:13.410
Podemos descubrir exactamente lo que necesitamos. Para insertar algo, tenemos el método de inserción con

02:13.410 --> 02:17.580
los datos y lo que queremos, o lo que se va a devolver.

02:17.580 --> 02:28.610
No podemos simplemente copiar y pegar esto, así que podemos hacer DB en los usuarios que queremos insertar y simplemente lee muy bien.

02:28.610 --> 02:29.730
Me encanta KNEX.

02:30.030 --> 02:38.570
Queremos insertar un objeto y este objeto contendrá todo lo que tenemos en la información de los usuarios.

02:38.610 --> 02:47.400
Entonces, queremos insertar un correo electrónico, en cuyo caso habrá un correo electrónico. Tenemos el nombre, que nuevamente tiene el nombre

02:47.430 --> 02:50.010
que vemos desde el cuerpo

02:50.010 --> 02:57.600
También tenemos la contraseña, pero recuerde que en nuestra tabla no tenemos la contraseña debajo de los usuarios, así que lo haremos

02:57.600 --> 02:58.740
deja eso en blanco.

02:58.740 --> 03:06.960
Y si volvemos a nuestro ejemplo de la tabla aquí y volvemos a conectar aquí vemos que la identificación del usuario es automáticamente

03:06.960 --> 03:12.710
el nombre, el correo electrónico y las entradas generadas por defecto están en cero, así que no tenemos que ingresar nada.

03:13.080 --> 03:17.780
Y se unió a la fecha en que se unieron.

03:17.800 --> 03:32.320
Vamos a hacer una nueva fecha y, una vez que la inserte, hagamos un .then (console.log) para ver qué

03:32.320 --> 03:34.290
volvemos

03:34.330 --> 03:41.390
Voy a salvar. No obtenemos ningún error que sea bueno y podemos volver a nuestra aplicación. En realidad, solo

03:41.390 --> 03:48.350
porque es más rápido, en lugar de registrarnos aquí, vamos a abrir Cartero y

03:48.350 --> 03:52.870
el cartero ya tiene todos nuestros comandos anteriores aquí, lo cual me encanta.

03:52.940 --> 04:03.610
Hagamos clic en el registro y apuntemos con el cuerpo de Ann Apples y hagamos clic en enviar.

04:03.630 --> 04:08.790
De acuerdo, recibimos una respuesta, pero recuerda que nunca cambiamos una respuesta, pero si volvemos al servidor

04:10.220 --> 04:12.550
obtenemos inserción de resultados.

04:12.650 --> 04:13.460
Todo bien.

04:13.460 --> 04:14.660
Parece que funcionó.

04:14.870 --> 04:25.260
Si volvemos a la base de datos y seleccionamos estrellas de los usuarios, qué bueno es eso.

04:25.490 --> 04:34.250
Tenemos a Ann a la que se ingresó como nuestro primer usuario, con entradas predeterminadas de 0. Increíble.

04:34.340 --> 04:35.980
Es como magia.

04:35.990 --> 04:42.430
Qué tan simple fue usar KNEX y postgres y crear nuestra primera base de datos.

04:42.460 --> 04:43.170
Todo bien.

04:43.250 --> 04:47.870
En el próximo video vamos a trabajar en esta respuesta.

04:47.870 --> 04:48.740
Te veré en eso.

04:49.270 --> 04:49.650
A-Dios.
