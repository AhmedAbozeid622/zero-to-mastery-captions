WEBVTT

00:00.450 --> 00:07.400
Dar una buena acogida. En este video finalmente vamos a poner nuestra aplicación

00:07.430 --> 00:15.780
front-end en un servidor para que todo esté fuera de nuestra computadora en línea y podamos compartir nuestro proyecto con el mundo para comenzar.

00:15.780 --> 00:25.420
Podemos volver a Heroku y en nuestro panel de control simplemente podemos ver que tenemos nuestro servidor, pero queremos crear

00:25.420 --> 00:36.220
una nueva aplicación y esta nueva aplicación podemos llamarlo cerebro inteligente. Elegiremos la región en nosotros, haremos clic en Crear aplicación

00:36.250 --> 00:45.370
y nos da comandos realmente agradables sobre cómo configurar todo lo que podemos hacer para iniciar

00:45.460 --> 00:47.530
sesión en Heroku.

00:47.630 --> 00:51.250
Así que hagámoslo desde nuestro frente inteligente del cerebro

00:52.510 --> 00:57.140
Voy a decir que Heroku inicia sesión con mi

01:04.060 --> 01:06.680
correo electrónico y mi

01:09.510 --> 01:16.650
contraseña y volviendo al archivo Léame, vemos que nos aseguramos de que nuestro git

01:16.650 --> 01:25.320
esté configurado y que podemos agregar nuestro control remoto al cerebro inteligente remoto de Heroku gid. .

01:25.420 --> 01:31.630
Si obtenemos el tablero remoto V y estos son los mismos pasos que ejecutamos también con nuestro servidor API.

01:31.690 --> 01:35.310
Vemos que tenemos a Heroku a continuación.

01:35.350 --> 01:40.720
Queremos hacer git add commit y luego presionar Hiroku Master.

01:40.740 --> 01:41.880
Todo bien.

01:41.970 --> 01:47.580
Y un recordatorio aquí de que a pesar de que no hemos cambiado nada en el

01:47.580 --> 01:51.870
front end, sí tenemos que ejecutar y git add y git commit.

01:52.050 --> 01:55.140
De lo contrario, los cambios no aparecerán en Hiroku.

01:55.140 --> 02:01.590
Entonces, digamos desplegar por ahora y luego podemos simplemente empujar a Heroku master.

02:05.850 --> 02:07.810
Parece un poco demasiado fácil, ¿verdad?

02:07.920 --> 02:14.890
Bueno, dejemos que esto se ejecute y veamos una vez que se implementa si todo funciona. Muy bien, nuestro despliegue ha terminado.

02:14.900 --> 02:17.130
Y mira que tenemos un nuevo enlace.

02:17.270 --> 02:20.050
Así que vamos a

02:23.840 --> 02:31.570
abrir Heroku Muy bien, mira que tenemos un nuevo enlace en nuestro front end pero

02:31.580 --> 02:35.970
veamos si funciona si me conecto con Teddy

02:38.680 --> 02:42.760
en gmail dot com hago uno, dos, tres.

02:42.850 --> 02:43.270
Todo bien.

02:43.270 --> 02:46.780
Y mira eso. Teddy está cargado.

02:46.810 --> 02:52.050
Ya ha contado antes con la cara. Hagamos otro solo para asegurarnos de que funcione.

02:54.650 --> 02:57.150
Haga clic en detectar.

02:57.200 --> 03:04.450
No, no quiero que guarde la contraseña de Teddy, pero mira que todo está funcionando.

03:04.450 --> 03:06.290
Parecía casi demasiado fácil, ¿verdad?

03:06.300 --> 03:07.210
Muy guay.

03:07.270 --> 03:17.790
Recapitulemos una vez más lo que acabamos de hacer. Hemos creado tres servidores separados o tres computadoras separadas donde

03:18.360 --> 03:26.980
se ejecuta cada uno de estos rectángulos individuales. Tenemos un postgreSQL, un servidor de nodo y

03:26.980 --> 03:32.200
un front-end y todos funcionan exactamente igual que en nuestra computadora.

03:32.200 --> 03:39.280
Pero esta vez en producción. Vive, en el mundo. Y todo lo que teníamos que hacer,

03:39.280 --> 03:44.770
era cambiar algunos números para asegurarnos de que apuntamos estas flechas para que el front-end sepa que

03:44.770 --> 03:52.570
aquí es donde está nuestro servidor y el servidor sabe que es donde están nuestras bases de datos y estas son solo configuraciones

03:52.570 --> 03:54.660
pequeñas eso realmente depende de

03:54.700 --> 03:59.100
cada plataforma con la que trabaje, pero los conceptos subyacentes son los mismos.

03:59.100 --> 04:02.250
Solo estás señalando la dirección de la ubicación de estas cosas.

04:02.550 --> 04:03.880
Pero oh chico.

04:04.650 --> 04:08.880
Bueno, no es una locura cómo tenemos todas estas cosas para trabajar.

04:08.880 --> 04:16.370
Recuerdo mi primera vez en mi carrera cuando logré conectar los puntos y construir cada uno

04:16.740 --> 04:18.200
de ellos.

04:18.240 --> 04:19.430
Fue una revelación.

04:19.440 --> 04:26.100
Abrió un mundo completamente nuevo y me hizo comprender realmente cómo todo está conectado y avanzando

04:26.100 --> 04:27.380
desde ese punto.

04:27.480 --> 04:38.100
Entendí la mayoría de las cosas y cada herramienta o nueva tecnología es solo una adición a esta idea preexistente.

04:38.340 --> 04:45.990
Y siempre que comprenda esta arquitectura subyacente, este concepto subyacente de diferentes servidores

04:45.990 --> 04:53.640
que se conectan entre sí, el resto son solo extensiones de esto.

04:53.650 --> 04:56.170
Entonces, ¿podríamos mejorar esta aplicación?

04:56.200 --> 04:57.130
Absolutamente.

04:57.190 --> 04:59.800
Puedes hacer muchas cosas con esta aplicación.

04:59.950 --> 05:07.570
Es posible que deseemos ser un poco más seguros y tal vez ni siquiera tener nuestra clave API en

05:07.570 --> 05:09.760
nuestro código para nuestro servidor.

05:09.850 --> 05:12.910
Podemos crear algo así como variables ambientales para esto.

05:12.910 --> 05:23.590
Por ejemplo, en Heroku si vamos a nuestra aplicación de cerebro inteligente o vamos a nuestro backend nuestro océano radiante ahora aquí si vamos

05:23.590 --> 05:31.460
a la configuración y vamos a revelar los VAR de configuración, tenemos nuestras variables ambientales aquí configuradas

05:32.030 --> 05:33.120
para nosotros.

05:33.170 --> 05:35.820
Recuerdas a postgres cómo tratamos de conectarnos a él.

05:35.840 --> 05:40.180
Y tuvimos un proceso dot env dot DATABASE_URL.

05:40.190 --> 05:46.770
Bueno, podemos agregar el nuestro si quisiéramos, podemos decir que API

05:51.420 --> 06:05.250
clarifai agrega la clave API que tenemos en nuestro backend aquí, haga clic en AGREGAR y ahora tenemos esto disponible para nosotros como un proceso

06:05.940 --> 06:18.900
dot env dot API clarifai, que es lo que creo Llamo al y esta es una capa adicional de seguridad que no desea

06:18.900 --> 06:26.900
nada sensible como direcciones o contraseñas o claves API en su base de código.

06:26.940 --> 06:28.650
Entonces alguien puede echarle un vistazo.

06:28.800 --> 06:34.800
Esto es algo a lo que te acostumbrarás cada vez más y con suerte con lo que sabes sobre

06:34.800 --> 06:35.820
las variables ambientales.

06:35.820 --> 06:36.920
Esto tiene sentido.

06:38.000 --> 06:47.120
Pero por ahora, porque esta es una aplicación simple, no necesitamos agregar nada de esto, revertiremos los cambios.

06:50.740 --> 06:59.820
Y siéntase orgulloso de nosotros mismos por crear una aplicación increíble y desplegarla en la vida real.

07:01.790 --> 07:08.850
Ahora ve a compartir este enlace con todos tus amigos y familiares y diles cuán increíble eres como desarrollador. Nos vemos en la

07:08.870 --> 07:10.380
próxima.

07:10.440 --> 07:10.860
Adiós.
