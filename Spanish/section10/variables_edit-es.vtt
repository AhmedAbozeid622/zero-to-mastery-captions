WEBVTT

00:01.350 --> 00:05.940
¡Dar una buena acogida! Hasta este punto, hemos jugado con algunos tipos de JavaScript.

00:06.040 --> 00:09.250
Solo 3 de 7. No se preocupe, llegaremos al resto de ellos.

00:09.400 --> 00:12.040
Pero hay un problema.

00:12.040 --> 00:15.070
¿Cómo recuerda el programa las cosas?

00:16.050 --> 00:25.770
Por ejemplo, si escribimos "Estos pretzels me están poniendo sediento".

00:26.850 --> 00:28.350
Y haremos esto

00:28.350 --> 00:30.350
"+" Necesitamos la exclamación "!".

00:30.390 --> 00:31.040
DE ACUERDO.

00:31.620 --> 00:32.540
Entro en eso.

00:32.700 --> 00:34.100
DE ACUERDO. Lo entiendo. Eso es - eso es bueno.

00:34.110 --> 00:36.750
Pero si necesito usar esto de nuevo.

00:36.940 --> 00:42.300
Bien. De nuevo tengo que escribir "Estas galletas saladas"

00:44.630 --> 00:47.980
me están haciendo sentir sediento ".

00:49.060 --> 00:52.870
E imagina si tienes que hacer eso cientos de veces.

00:53.020 --> 00:55.160
Eso es un poco molesto verdad?

00:55.180 --> 01:00.560
Es decir, se supone que las computadoras nos ayudan pero, en cambio, seguimos escribiendo cosas y seguimos escribiendo cosas.

01:00.580 --> 01:02.990
Y eso no es muy eficiente, ¿verdad?

01:04.070 --> 01:07.100
Bueno para atrapar y mantener valores

01:07.100 --> 01:15.630
JavaScript tiene algo llamado variable's. Y las variables pueden ser usadas

01:16.880 --> 01:18.870
con la palabra 'var'.

01:19.200 --> 01:34.590
Entonces, si voy a 'var george', entonces 'var george = "Estos pretzels me están poniendo sedienta' '

01:35.620 --> 01:36.580
más [+] "!".

01:39.900 --> 01:44.470
Note el 'punto y coma' aquí - Explicaré lo que hace en un momento.

01:44.520 --> 01:46.850
Presiono 'Entrar'. Me pongo 'indefinido'.

01:46.850 --> 01:48.140
No nos preocupemos por eso.

01:48.210 --> 01:49.610
Eso no importa por ahora.

01:49.800 --> 01:57.000
Y ahora si voy a 'George' y verás que Google Chrome en realidad me ayuda y lo reconoce.

01:57.090 --> 01:58.260
Presiono 'Entrar'.

01:58.650 --> 02:03.250
"¡Estos pretzels me están haciendo sediento!". ¿Qué tan maravilloso es eso?

02:03.960 --> 02:06.250
Así que podemos almacenar este valor.

02:07.110 --> 02:12.510
Y, obviamente, esto es simple, pero imaginen, este fue un cálculo largo que tuvimos que hacer y queremos

02:12.510 --> 02:13.330
para acceder a ella

02:13.380 --> 02:17.180
Bueno, todo lo que tenemos que hacer ahora es tener 'George'.

02:17.190 --> 02:18.840
Es una 'variable'.

02:18.870 --> 02:25.490
Así que ahora ves en el último video cuando dije que cuando estamos comparando cosas tenemos que usar '==='

02:25.850 --> 02:34.850
Bueno, cuando haces '3 = 3' está diciendo:'Asigna el número 3 a 3'.

02:35.100 --> 02:38.280
Pero hay una regla con variables. Con variables

02:38.420 --> 02:47.180
no puedes comenzar con números. Entonces, si voy 'var 3 = 3', obtendré un error.

02:47.360 --> 02:53.790
Pero si voy 'var three = 3', bueno, eso no es problema.

02:54.200 --> 02:57.960
Y las variables tienen algunas reglas.

02:58.910 --> 03:03.710
Las reglas son:Bueno, debe comenzar con una letra.

03:03.710 --> 03:11.550
Puede terminar con un número, está bien, pero debe comenzar con la letra y no puede comenzar con un símbolo.

03:11.660 --> 03:22.030
Entonces puedo hacer 'var & hello = 5'. Ahora voy a obtener un error.

03:22.040 --> 03:28.480
Entonces una variable necesita comenzar con la letra, puede terminar en un número, está bien.

03:28.700 --> 03:37.140
Y hay algunos otros casos especiales. Una variable también puede comenzar con '$' o '_'.

03:37.520 --> 03:42.950
Pero no necesitamos preocuparnos demasiado y el estándar y el JavaScript, por lo que no obtendrás un

03:42.950 --> 03:43.400
error.

03:43.430 --> 03:52.610
Si esto sucede, pero haces algo llamado 'camel case'. Entonces, si fue una palabra, digamos 'primer nombre',

03:52.710 --> 03:56.660
hacer 'caso de camello', porque estas son dos palabras separadas. Haces minúsculas

03:56.690 --> 04:01.120
la primera palabra La segunda palabra va a tener mayúsculas.

04:01.160 --> 04:08.200
Entonces 'firstName'. Ha puesto en mayúscula la primera letra y se llama 'caja de camello'.

04:08.200 --> 04:16.030
Entonces, ¿aún no se obtienen las variables? Bueno, voy a demostrar más este punto

04:16.030 --> 04:20.620
y por qué necesitamos almacenar valores en un lenguaje de programación.

04:20.620 --> 04:28.210
Voy a presentarte un pequeño y genial truco llamado 'aviso'. Y 'prompt ()', cuando uso estos paréntesis

04:29.710 --> 04:30.920
y presiono 'Enter' ...

04:31.570 --> 04:32.520
Mira eso.

04:32.630 --> 04:37.470
Tengo algo aquí y está pidiendo algo y presiono OK.

04:37.610 --> 04:38.790
¡Y mira eso!

04:38.930 --> 04:40.380
Devuelve todo lo que escribí.

04:40.550 --> 04:42.680
Probemos eso de nuevo. Si voy 'prompt ()',

04:43.700 --> 04:47.030
presiona 'Entrar' y di 'Hola', presiona 'Aceptar'.

04:48.240 --> 04:49.840
Recupero esa respuesta.

04:50.210 --> 04:50.420
DE ACUERDO.

04:50.430 --> 04:55.430
Entonces, ¿cómo podemos decir algo como '¿Cuál es tu nombre de usuario?' y almacenar ese valor?

04:55.470 --> 05:02.790
Eso es algo que utilizamos bastante en los sitios web, ¿verdad? Bueno, con 'prompt' puedes hacer 'prompt ()'.

05:02.790 --> 05:11.930
Entonces aquí diremos "¿Cuál es tu nombre de usuario?".

05:12.000 --> 05:13.890
Entonces, estamos ingresando la cadena aquí.

05:14.160 --> 05:17.380
Y si presiono 'Enter'.

05:17.510 --> 05:20.000
OK, entonces dice "¿Cuál es tu nombre de usuario?".

05:20.000 --> 05:28.880
Entonces, si escribo mi nombre de usuario es "andrei", obtengo el 'nombre de usuario'. Entonces, usando ese conocimiento,

05:29.080 --> 05:33.940
Hagamos una calculadora. Hagamos 'var first = prompt ()'

05:38.420 --> 05:40.310
"ingresar el primer número"

05:43.120 --> 05:49.840
Y luego 'Intro' presioné 'Shift' aquí, para poder agregar una nueva línea. Así que 'Shift', 'Enter' y voy a decir

05:50.680 --> 05:54.840
'var second = prompt ()'

05:58.060 --> 06:00.710
"ingresar el segundo número"

06:04.550 --> 06:14.580
Ahora si presiono 'Enter', obtendré 'enter first number'. Voy a decir '5', presionar OK, luego 'ingresar segundo número' y yo

06:14.580 --> 06:17.460
diga '10' y presione OK.

06:19.210 --> 06:19.430
DE ACUERDO.

06:19.450 --> 06:21.970
Pero ahora estoy 'indefinido'.

06:22.330 --> 06:23.730
Pero aquí está lo bueno.

06:23.750 --> 06:31.470
Ahora tengo estos valores en estas variables, así que puedo usarlos. Si marqué 'primero',

06:31.510 --> 06:35.260
Tengo "5"; si marque 'segundo',

06:35.480 --> 06:37.080
Tengo "10".

06:37.340 --> 06:39.810
Pero notarás que tengo comillas dobles [""] a su alrededor.

06:39.980 --> 06:46.230
Y eso es porque 'prompt' lo cambia automáticamente a String, está esperando una forma de texto.

06:46.280 --> 06:50.540
Entonces, hay un truco para cambiar una Cadena en un Número.

06:50.730 --> 06:56.960
Y todo lo que tenemos que hacer y esto es solo la sintaxis que debemos recordar es 'Número (primero)'.

06:59.640 --> 07:00.730
Y nos dará '5'.

07:00.900 --> 07:21.280
Entonces todo lo que tenemos que hacer ahora es do 'Number (first) + Number (second)'. Y obtendremos la suma de estos 2.

07:21.310 --> 07:23.530
Pero nuevamente podemos usar una variable aquí.

07:23.530 --> 07:25.260
No quiero seguir escribiendo esto

07:25.270 --> 07:33.400
Entonces, ¿qué pasa si hago 'var sum = Number (first) + Number (second);'

07:33.640 --> 07:39.340
Presione 'Entrar'. Nada aún, porque está en la 'suma' ahora.

07:40.740 --> 07:45.410
Entonces, si pedí 'suma, obtengo' 15 '.

07:45.510 --> 07:45.720
DE ACUERDO.

07:45.720 --> 07:50.340
Entonces, escribamos nuestro primer programa aquí.

07:50.520 --> 07:54.800
Voy a mostrarte otro truco genial y eso es 'alerta'.

07:54.810 --> 08:01.710
Entonces en vez de 'prompt' vamos a usar 'alert'. Y 'alerta ()'.

08:01.720 --> 08:04.600
Lo que hace es decir "¡hola!"

08:08.330 --> 08:14.510
Si presiono 'Enter', aparece una ventana emergente, pero sin nada para ingresar, solo un botón 'Aceptar'.

08:14.530 --> 08:18.550
Entonces usando esto podemos crear una calculadora.

08:18.730 --> 08:19.870
Entonces, hagamos esto.

08:19.900 --> 08:25.960
Y en Chrome si presiona el botón 'â †' 'recordará su historial y podrá sacar lo que sea

08:25.960 --> 08:27.080
has escrito.

08:27.250 --> 08:31.410
Entonces, recuerda que tenemos 'primero', 'segundo'.

08:31.500 --> 08:47.420
Entonces esos son los dos 'prompt'-s y luego voy a decir' var sum = Number (first) + '

08:48.850 --> 08:54.200
'Número (segundo);'

08:54.230 --> 08:58.680
Y finalmente vuelvo a hacer 'Shift', 'Enter', para que el código no se ejecute.

08:58.880 --> 09:03.330
Y lo hago 'alert (sum);'.

09:03.390 --> 09:06.570
Solo mirando esto, ¿qué crees que va a pasar?

09:06.580 --> 09:12.990
Primero pedí un 'aviso' y guardé ese valor en 'primero'; el segundo 'aviso' pidió un 'segundo' número.

09:13.030 --> 09:14.590
Lo almacena en el 'segundo'.

09:14.590 --> 09:18.840
La 'suma' calcula los dos números y luego 'alerta' la 'suma'.

09:19.030 --> 09:20.730
Voy a presionar 'Entrar' y ver qué pasa.

09:22.460 --> 09:24.730
Ingrese el primer número. Voy a decir '15'.

09:25.160 --> 09:29.010
DE ACUERDO. Siguiente número. Voy a decir '20'.

09:29.030 --> 09:30.460
DE ACUERDO.

09:30.510 --> 09:31.710
¡Y mira eso!

09:31.830 --> 09:36.460
Tengo '35' como respuesta.

09:36.560 --> 09:42.660
Y nuevamente, sabiendo lo que sabemos sobre Cuerdas y Números, ahora puedo hacer -

09:42.660 --> 09:46.750
nuevamente presioné 'â †' 'para tener exactamente lo que escribí,

09:46.770 --> 09:57.950
Ahora puedo decir dentro de la 'alerta ("La suma es:" + suma);'.

09:58.010 --> 10:08.750
Veamos eso. Si presiono 'Enter', iré '3 + 4'. 'La suma es:7'. ¡Mira eso! Nuestro primer programa

10:09.380 --> 10:18.720
Las variables pueden contener cualquier tipo de JavaScript. Piense en ellos como pequeños cajones en su escritorio.

10:18.720 --> 10:25.830
Entonces, en su escritorio puede abrir ese cajón y poner lo que quiera allí:sus plumas, papel, borradores,

10:25.830 --> 10:29.630
calculadoras y puede cerrar ese cajón.

10:29.670 --> 10:34.680
Y siempre que lo necesite, un bolígrafo o una calculadora, puede abrir ese cajón y agarrarlo.

10:34.680 --> 10:37.210
Y eso es lo que son las variables.

10:37.400 --> 10:44.950
Ahora, la única cosa que he omitido y de la que no te he hablado es este punto y coma raro.

10:44.990 --> 10:46.430
¿Por qué lo necesitamos?

10:46.430 --> 10:55.640
Quiero decir, pudimos hacer '3 + 4' y no vimos un 'punto y coma'. Bueno, en JavaScript

10:55.640 --> 11:00.930
'punto y coma' significa el final de una expresión.

11:00.960 --> 11:02.870
¿Entonces que significa eso?

11:03.860 --> 11:11.850
Un fragmento de código que produce un valor se llama 'expresión'. Entonces, cualquier valor que esté escrito realmente

11:11.850 --> 11:12.550
es una expresion'.

11:12.570 --> 11:20.910
Entonces, si hago '3', bueno, eso es una 'expresión', produce un valor. '3 + 4' es una 'expresión'. En

11:20.910 --> 11:21.930
JavasScript

11:21.990 --> 11:25.820
la regla es - y hay algunas personas que ya no usan el punto y coma.

11:25.830 --> 11:33.080
Pero la forma en que se creó y la forma en que se pretende que funcione es hacer '3 + 4' agregar un 'punto y coma'.

11:33.270 --> 11:37.140
La mayoría de las veces, si lo olvida, seguirá funcionando.

11:37.180 --> 11:39.950
Solo hay casos pequeños en los que romperé tu programa.

11:40.020 --> 11:47.010
Pero solo para formar buenos hábitos por ahora, al final de cada expresión, entonces eso es todo lo que hemos hecho

11:47.010 --> 11:50.890
ahora, agrega un 'punto y coma' y te acostumbrarás.

11:52.710 --> 12:01.600
DE ACUERDO. Sigamos con las variables, porque son muy interesantes. ¿Qué pasa si hago 'var a = true'?

12:02.090 --> 12:06.060
Porque recuerde que las variables pueden contener cualquier cosa.

12:06.380 --> 12:15.500
Entonces, las variables pueden contener booleanos, y las variables pueden contener cadenas, y las variables pueden contener números, como hemos visto.

12:15.500 --> 12:17.610
Así que solo vamos a mantener 'var a = true'.

12:17.650 --> 12:22.170
Pero ahora qué pasaría si yo ...

12:22.560 --> 12:27.360
bueno, puedo acceder a 'a', pero ¿y si digo 'a =' Hola '?'

12:27.710 --> 12:35.300
¿Qué crees que pasará si presiono 'a' y luego 'Entrar'?

12:35.300 --> 12:46.710
Bueno, obtengo "Hola", porque puedes reasignar un valor a 'a', porque inicialmente el programa pensó 'a' igual a 'verdadero'.

12:46.720 --> 12:49.770
Pero luego dijimos:"Bueno", "=" "Hola" ahora ".

12:49.810 --> 12:58.810
Así que descartó el valor 'verdadero' y ahora 'a' es igual a 'Hola' y nos hemos olvidado por completo de 'verdadero'

13:00.340 --> 13:01.040
DE ACUERDO.

13:01.390 --> 13:02.710
Otro pequeño truco.

13:02.770 --> 13:06.940
¿Qué pasa si voy así? [var a;]

13:06.940 --> 13:08.420
¿Funciona eso o recibiré un error?

13:08.470 --> 13:11.740
Veamos.

13:11.890 --> 13:12.490
DE ACUERDO. 'indefinido'.

13:12.490 --> 13:14.530
No obtuve esa barra roja, no hay error.

13:14.560 --> 13:18.010
DE ACUERDO. ¿Qué pasa si tengo acceso a la 'a', vamos a ver qué pasa?

13:18.010 --> 13:24.880
Bueno, "Hola" fue asignado en la última parte. Hagamos una variable diferente. Entonces, si hago la variable 'b', que

13:24.880 --> 13:31.860
no hemos usado antes Y hago esto. Veamos si podemos acceder a él. 'indefinido'.

13:32.000 --> 13:44.110
'b' no está definido. Y es posible que haya notado esto antes, pero 'indefinido' es nuestro 4to tipo en JavaScript. Y

13:44.110 --> 13:50.920
Sé que es raro, porque lo estás, te estás preguntando "¿Qué es 'indefinido'?". Y 'indefinido' es solo uno

13:51.160 --> 13:54.630
cosa en JavaScript. Como el nombre sugiere,

13:54.640 --> 13:57.600
esto significa que la variable no ha sido asignada.

13:58.090 --> 14:07.240
Por lo tanto, piense en ello ya que obtendrá 'indefinido' si la variable 'contraseña' es así.

14:07.270 --> 14:15.760
Entonces, si un usuario no ingresa una 'contraseña', bueno, obtendrá 'indefinido' y podrá decir "Bien 'contraseña'

14:15.760 --> 14:16.750
es indefinido".

14:16.810 --> 14:20.750
Debe ingresar una 'contraseña' o tal vez un formulario requiere una dirección de correo electrónico.

14:20.750 --> 14:30.250
Bueno, si el correo electrónico está "indefinido", entonces no puede registrarlos en el formulario. Entonces 'indefinido' se usa cuando nada

14:30.250 --> 14:33.750
está asignado a una variable.

14:33.770 --> 14:38.740
Así que recuerda esto, al igual que sacas cosas del cajón de tu escritorio y colocas algo más

14:38.740 --> 14:43.490
en, las variables se pueden asignar a cosas diferentes.

14:43.490 --> 14:51.730
Puedo mover mi pluma de un cajón a otro, puedo cambiar cosas en ese cajón y si no hay nada

14:51.730 --> 14:52.560
en ese cajón,

14:52.600 --> 14:56.400
bueno, es 'indefinido'. DE ACUERDO.

14:56.880 --> 14:59.370
Ese es un concepto muy grande en JavaScript.

14:59.370 --> 15:04.100
Espero que entiendas. Tengo algunos ejercicios para ti al final de este video.

15:04.110 --> 15:05.720
¡Sé que puedes hacerlo!

15:05.730 --> 15:08.870
¡Buena suerte! Y nos vemos en el próximo video.

15:08.940 --> 15:09.150
Adiós
