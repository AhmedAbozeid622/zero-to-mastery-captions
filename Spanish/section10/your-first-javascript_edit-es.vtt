WEBVTT

00:00.980 --> 00:05.400
¡Hola! Vamos a aprender algo de JavaScript.

00:05.400 --> 00:11.160
Vamos a abrir Google Chrome aquí y vamos a ir a 'Ver', (luego) 'Desarrollador'.

00:11.320 --> 00:13.640
Y esta vez 'Consola de JavaScript'

00:13.720 --> 00:22.670
Así que puedes hacer 'CMD Option + J' también y se abre esta consola, que es si recuerdas los elementos,

00:22.690 --> 00:23.800
lo has visto antes

00:23.830 --> 00:30.680
Ese es tu HTML. La consola es donde podemos escribir JavaScript. A la derecha verá el contorno de

00:30.680 --> 00:33.740
de lo que hablaremos en este segmento de JavaScript.

00:33.770 --> 00:35.480
Iremos uno por uno.

00:36.050 --> 00:42.760
Y algunos de ellos, volveremos. Pero no te preocupes, al final sabrás todo aquí.

00:43.910 --> 00:54.220
Así que hablemos de JavaScript. JavaScript tiene 7 tipos. Puedes pensar en tipos como valores que JavaScript

00:54.220 --> 00:55.890
puede tener.

00:55.900 --> 00:57.330
Comencemos con el primero.

00:57.970 --> 01:06.260
Y ese es 'Número'. Entonces el tipo 'Número'. Bueno, en JavaScript puedes hacer algo como esto:01:07.970 --> 01:12.880
Mira eso. La consola nos permite escribir JavaScript tanto como queramos.

01:12.880 --> 01:21.160
Así que al escribir esto y la consola que nos da una respuesta significa que, 'Sí, esto es JavaScript válido'. ¡DE ACUERDO! Qué

01:21.160 --> 01:25.800
¿más podemos hacer? Bueno, podemos hacer '3 * 5'

01:26.110 --> 01:30.400
'15', '12 / 4 ',' 3 '.

01:30.400 --> 01:31.090
Eso es genial.

01:31.090 --> 01:36.630
qué más podemos hacer? '12 -4 ',' 8 '.

01:36.680 --> 01:37.940
¿Podemos hacer esto?

01:37.940 --> 01:43.580
¿Podemos hacer esto? '(3 + 4) * 2'.

01:43.730 --> 01:47.480
Entonces eso es '7 * 2', '14'.

01:47.610 --> 01:55.070
¡Sí! ¡Funciona! E incluso podemos hacer esto [%]. Y este es un personaje especial que quizás no hayas visto antes

01:55.390 --> 01:56.360
se llama, 'modulo'.

01:56.360 --> 01:59.970
Y veamos qué pasa. Me da '0'.

02:00.350 --> 02:07.330
¿Qué pasa si hago '12% 5 '? Me da '2'. Lo que hace este símbolo -

02:07.370 --> 02:13.930
Y hagámoslo más grande para que puedas ver claramente. Y voy a aclarar esto solo para que puedas verlo

02:13.940 --> 02:19.490
mejor. Y puedo aclararlo aquí, con estos corchetes, y lo limpiaré todo para mí.

02:19.910 --> 02:29.150
Así que una vez más. Lo que hice fue '12% 5 'y eso me da' 2 '. Y lo que hace el módulo es - me da

02:29.240 --> 02:38.060
el resto. Así que '12% 5 'es ... Bueno, me da un resto de' 2 ', porque' 5 'solo puede ir a' 10 'y luego

02:38.060 --> 02:39.540
tienes twe restoder.

02:39.560 --> 02:52.760
Entonces, si lo hago, digamos, '12% 5 'o hagamos' 9 ', obtengo el resto de' 3 '. Y estás pensando 'Oh Dios! Tu eres sólo

02:52.870 --> 02:53.760
¡enseñándome matemáticas!

02:53.770 --> 02:56.890
Pero no te preocupes Esto es solo una pequeña parte de esto.

02:56.920 --> 03:03.040
Solo quiero mostrarte que el primer tipo de JavaScript es un 'Número' y podemos hacer operaciones sobre ellos

03:03.220 --> 03:06.470
al igual que la calculadora puede.

03:06.480 --> 03:10.190
El segundo tipo en JavaScript es una 'Cadena'.

03:12.010 --> 03:19.720
Así que 'String' es solo texto y todo lo que necesitas hacer para que JavaScript sepa que estás escribiendo un fragmento de

03:19.720 --> 03:22.960
el texto es comillas dobles.

03:23.090 --> 03:30.020
Entonces puedo decir "Bob". Puedo decir mi nombre ["Andrei"]. Y también puede usar comillas simples.

03:35.350 --> 03:38.220
Y eso es una 'Cadena'.

03:38.810 --> 03:40.720
Pero, ¿qué más podemos hacer con el String?

03:40.960 --> 03:43.630
Déjame aclarar esto. Bien

03:43.640 --> 03:46.070
también puedes hacer esto.

03:46.130 --> 03:47.240
Puedes decir "Hola"

03:49.830 --> 03:50.640
+ "¡Ahí!".

03:50.730 --> 03:52.070
¿Qué crees que pasará aquí?

03:53.350 --> 03:56.210
Veamos. "¡Hola!"

03:56.800 --> 04:08.960
Pero es una palabra. Necesitamos un espacio Entonces tendríamos que hacer "Hello" + "there!".

04:09.190 --> 04:11.370
Y ahí tenemos el espacio.

04:11.430 --> 04:16.700
DE ACUERDO. Entonces podemos agregar cosas Entonces agrega dos oraciones juntas.

04:17.970 --> 04:23.170
Que tal si lo hacemos ¿Qué pasa si hacemos algo como esto?

04:23.280 --> 04:28.260
"Esto no es muy bueno"

04:29.860 --> 04:30.920
Pulso 'Entrar' y.

04:31.090 --> 04:31.780
OK, eso funciona.

04:31.780 --> 04:32.230
Eso es bueno.

04:32.290 --> 04:34.830
Pero, ¿y si utilizo comillas simples aquí?

04:34.900 --> 04:36.120
¿Qué pasa si voy así?

04:36.140 --> 04:40.330
Y recuerde que dije que puedo usar comillas simples en JavaScript.

04:40.690 --> 04:45.650
Bueno, ves los cambios de sintaxis y obtengo un pequeño error.

04:45.790 --> 04:52.430
Bueno, porque estoy usando una comilla simple y luego dentro de la cadena, estoy tratando de usar una comilla simple. Y

04:52.430 --> 04:54.850
eso también pasaría si uso comillas dobles.

04:54.860 --> 05:01.220
Entonces, si volvemos al ejemplo anterior, agrego otra cita aquí.

05:01.350 --> 05:04.460
Bueno, de nuevo, me sale un error.

05:04.620 --> 05:07.330
Así que déjame aclarar eso.

05:07.400 --> 05:12.060
¿Cómo podemos evitar este problema? Bueno, con una cadena en JavaScript podemos hacer algo como esto:05:13.650 --> 05:16.240
'Esto' - Usemos comillas simples.

05:16.230 --> 05:23.800
'Esto no es' - Y, ¿qué es esto?

05:23.810 --> 05:27.490
'Esto no es muy agradable' (error).

05:27.730 --> 05:31.170
Y esta barra invertida [\] tiene un significado especial.

05:31.270 --> 05:35.600
El '/' dice "Oye, lo que sea que venga después de esto,

05:35.670 --> 05:41.720
Es un significado especial. Significa, "simplemente ignóralo, no digas que esto es un pedazo de cuerda".

05:41.790 --> 05:43.970
Solo quiero el tic de atrás ".

05:44.100 --> 05:45.770
Entonces, si corro así.

05:45.820 --> 05:48.150
Oops! Hice mal la sintaxis aquí.

05:48.180 --> 05:49.760
Obviamente, las citas deben coincidir.

05:49.770 --> 05:50.890
Así que intentémoslo de nuevo.

05:52.420 --> 05:53.170
¡Aquí tienes!

05:53.200 --> 05:56.190
Esto esta muy bien. DE ACUERDO

05:56.290 --> 05:57.320
Tengo otra pregunta.

05:57.430 --> 05:59.800
¿Qué pasa aquí?

06:00.310 --> 06:07.350
10 + "34". Entonces ese es 'Número' 10 + 'Cadena' de 34.

06:07.420 --> 06:08.440
Veamos qué pasa.

06:10.450 --> 06:18.480
Hmm ... Extraño. Entonces, JavaScript automáticamente miró esto y dijo "Hmm, está agregando un Número y una Cadena".

06:18.820 --> 06:22.320
Probablemente esté intentando agregar cadenas ".

06:22.390 --> 06:28.110
Así que JavaScript convierte el Número '10' en una Cadena '10' y hace '1034'.

06:28.450 --> 06:29.500
Eso es un poco raro, ¿verdad?

06:29.500 --> 06:32.180
Es una de las peculiaridades de JavaScript:hay algunas de ellas.

06:32.320 --> 06:33.770
Solo tienes que acostumbrarte.

06:34.150 --> 06:34.990
Probemos algo más.

06:34.990 --> 06:36.180
¿Qué tal si lo hago?

06:36.420 --> 06:42.290
10 - "3"? Presione enter.

06:42.410 --> 06:43.560
Tengo 7.

06:43.780 --> 06:46.120
¿Que esta pasando aqui?

06:46.150 --> 06:56.360
Y debido a que con The String, no puedes realmente restar la cadena y me refiero a ver si voy "hola" - "adiós".

06:57.810 --> 07:02.500
Obtengo este extraño símbolo al que volveremos. Pero eso no funciona.

07:02.500 --> 07:08.320
Entonces, JavaScript dice "Voy a hacerlo", porque está restando

07:08.330 --> 07:10.400
Solo voy a suponer que quiere decir el número '3'.

07:10.400 --> 07:12.670
Entonces está tratando de ayudarte.

07:13.550 --> 07:20.230
¡Pero! a veces puede tener un comportamiento inesperado, por lo que idealmente nunca haces cosas como esta.

07:20.290 --> 07:25.540
Lo ideal sería mantener los números con números y cadenas con cadenas y mantener las acciones entre los

07:25.540 --> 07:26.430
como tipos.

07:27.400 --> 07:34.520
Así que volvamos a esto. ¿Qué acaba de pasar cuando digo "hola" - "adiós"? Bueno 'NaN' significa 'No

07:34.550 --> 07:39.010
un Número 'y es técnicamente - en JavaScript puede ver el resaltado azul aquí.

07:39.140 --> 07:41.030
Es parte del tipo 'Número'.

07:41.390 --> 07:47.390
Entonces los números pueden. Usted sabe que puede ir de 1 a 10 a ... Usted sabe 567.

07:47.420 --> 07:54.820
Pero también está el 'NaN', cuando dice 'Oye, lo que sea que acabas de escribir no es un número'.

07:54.860 --> 07:56.480
Entonces ese es el caso también.

07:56.480 --> 08:02.470
Sé que es realmente confuso, pero no te preocupes. Son solo las peculiaridades del lenguaje que estamos aprendiendo.

08:02.890 --> 08:03.230
DE ACUERDO.

08:03.350 --> 08:06.070
Voy a mostrarte otro tipo de JavaScript.

08:06.440 --> 08:10.000
Antes de llegar a algunas cosas divertidas en el próximo video.

08:10.200 --> 08:12.960
Entonces el siguiente es 'booleano'.

08:15.080 --> 08:19.980
Y el tipo 'booleano' es muy simple. Boolean solo significa "verdadero".

08:21.380 --> 08:22.680
O falso'. Eso es.

08:22.910 --> 08:29.420
Y a veces eso se puede representar como '1'-s y' 0'-s y para aquellos que saben mucho sobre computadoras

08:29.420 --> 08:35.420
es posible que sepas que la computadora se ejecuta prácticamente en '1'-s' y '0'-s y eso es todo.

08:35.420 --> 08:35.890
de.

08:36.780 --> 08:41.250
Pero los booleanos son muy, muy útiles porque ahora podemos hacer algo como

08:41.250 --> 08:44.040
'3 & gt; 2'.

08:44.390 --> 08:47.820
Y diré 'verdadero':'3' es mayor que '2'.

08:48.060 --> 08:51.780
Si hago '5 & gt; 10'.

08:51.930 --> 08:55.740
diremos 'falso':'5' no es mayor que '10'.

08:55.770 --> 09:03.360
También podemos hacer '5 & gt; = 5'.

09:03.420 --> 09:06.350
Entonces diré 'verdad' porque puedo hacer más que o igual a.

09:06.450 --> 09:13.950
Y también puedo hacer '5 & lt; = 5'.

09:15.810 --> 09:23.160
Ahora que pasa si quiero decir '3 = 3'?

09:23.440 --> 09:24.790
Me sale un error

09:24.820 --> 09:26.720
¿Porqué es eso?

09:26.750 --> 09:32.960
Porque en JavaScript, si quieres decir que algo es igual a algo, tienes que decir '==='

09:33.080 --> 09:37.640
'3 === 3' y obtengo 'verdadero'.

09:37.750 --> 09:41.680
Y en el siguiente video, te diré por qué ese es el caso.

09:41.710 --> 09:42.850
Es muy, muy interesante.

09:42.850 --> 09:50.210
Pero por ahora solo recuerde, ese es siempre un punto complicado del que muchos principiantes se confunden.

09:50.250 --> 09:57.300
Solo recuerda si estás comparando dos cosas, 3 signos iguales, '==='. El último que quiero mostrarte es este:09:57.930 --> 10:03.930
'3! == 3' (no es igual).

10:03.940 --> 10:05.170
¿No es eso confuso?

10:05.170 --> 10:14.770
Entonces, esto dice '¿3 no es igual a 3'? Falso, porque '3' es igual a '3'.

10:14.780 --> 10:15.320
Lo sé.

10:15.380 --> 10:17.200
Puede ser realmente confuso.

10:17.300 --> 10:21.590
Pero piensa en esto como lo opuesto al signo 'igual'.

10:21.590 --> 10:27.800
Entonces, por ejemplo, si hago '4! == 5', me pondré 'verdadero', porque tienes razón.

10:27.800 --> 10:31.170
'4' no es igual a '5'.

10:31.180 --> 10:39.530
Entonces, lo que acabamos de aprender son comparaciones de JavaScript y son las cosas correctas aquí.

10:39.660 --> 10:40.170
Eso es.

10:40.170 --> 10:42.650
Solo tienes que recordar esto.

10:42.840 --> 10:45.140
Bueno, eso fue divertido, ¿verdad?

10:45.630 --> 10:47.470
Pero recién estamos comenzando.

10:48.060 --> 10:50.860
Después de este video, he dejado una hoja de ejercicios para ti.

10:51.090 --> 10:55.440
Intenta encontrar las respuestas a los problemas y luego cópialas y pégalas.

10:55.470 --> 10:59.920
Cada una de las preguntas de cada una de las líneas en la consola de JavaScript.

10:59.970 --> 11:08.110
Entonces, por ejemplo, si dije, sabes, "evalúa '3 + 5'", copiarás esto, lo pondrás en la consola y

11:08.110 --> 11:09.440
solo presiona 'Entrar'.

11:09.610 --> 11:15.320
Y quiero que te sientas cómodo trabajando con la consola y jugando con ella, experimentando.

11:15.460 --> 11:18.990
Y como dije:realmente intente trabajar en los siguientes conjuntos de problemas.

11:19.000 --> 11:24.400
No te he dado mucho porque no quiero que te desanimes.

11:24.760 --> 11:27.950
Hay muchas más cosas interesantes que suceden en JavaScript que esto.

11:28.150 --> 11:33.550
Y puedes recoger esto con bastante facilidad. Pero te animo a que te asegures de hacer los ejercicios.

11:33.790 --> 11:36.900
Ahora, ¿puedes obtener todos?

11:36.930 --> 11:38.330
¡Buena suerte!

11:38.440 --> 11:40.190
Te veré en el próximo video.

11:40.190 --> 11:40.710
Adiós
