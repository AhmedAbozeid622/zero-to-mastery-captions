WEBVTT

00:01.490 --> 00:08.000
Y bienvenido de nuevo! Afortunadamente, esos ejercicios no fueron muy difíciles y pasaste por ellos.

00:09.110 --> 00:12.800
Vamos a hablar de algo llamado 'Control Flow'.

00:12.890 --> 00:17.640
Hasta ahora hemos estado haciendo esto:esta pequeña 'flecha'.

00:17.900 --> 00:23.750
Escribimos una línea de código, luego otra línea de código, luego otra línea de código, luego otra línea de código

00:24.080 --> 00:27.130
y todo se ejecuta en una línea.

00:27.150 --> 00:29.740
Solo fluye, como agua

00:29.750 --> 00:33.520
Si viertes agua hacia abajo. Simplemente va hacia abajo.

00:33.950 --> 00:37.210
Pero, ¿y si tuviéramos condiciones?

00:37.250 --> 00:43.040
¿Qué pasa si queremos decir algo como "Si el nombre de usuario es 'Bob' -

00:43.460 --> 00:44.340
diga 'Hola, Bob' ".

00:44.360 --> 00:54.230
Si no, di "No te conozco". Tal vez "Iniciar sesión nuevamente" o "No tenemos este usuario". Eso se llama 'condicional

00:54.230 --> 01:02.150
ejecución 'y se ve algo así, donde llegamos a un punto en el programa y tenemos dos opciones,

01:02.330 --> 01:07.960
donde o queremos ir de una manera u otra, y luego continuar ejecutando.

01:07.970 --> 01:13.470
Entonces en esta lección vamos a hablar exactamente de eso:'ejecución condicional'.

01:14.350 --> 01:15.270
Probemos un poco.

01:19.340 --> 01:21.780
Así que JavaScript 'condicionales',

01:21.780 --> 01:22.810
así se llaman

01:22.920 --> 01:27.090
vamos a comenzar con lo que se llama una declaración 'si'.

01:28.130 --> 01:34.000
Y una especie de declaración 'if' lee, como el inglés. Podemos hacer algo similar a esto:01:34.010 --> 01:42.920
Digo 'si nombre' es igual, recuerda '===' signos aquí, porque no estamos asignando variable, estamos

01:42.920 --> 01:51.020
comparando [si (nombre === "Billy")] - cierra el paréntesis.

01:51.040 --> 01:56.050
Y esto es solo una notación a la que tendrás que acostumbrarte. De nuevo, es como aprender un idioma,

01:56.200 --> 02:01.870
solo tienes que saber que cuando haces una declaración 'si', tienes que tener estos paréntesis, cierra

02:01.870 --> 02:05.530
corchetes, y luego haces el corchete '{'.

02:05.530 --> 02:12.310
Mantenga "Shift" y (presione) "Enter" para que el programa no se ejecute. Y diremos, agregué una pestaña para que pueda

02:12.310 --> 02:13.930
ver para la sangría.

02:14.200 --> 02:19.360
Puedo decir 'alerta' (¡hola Billy! ')'

02:23.990 --> 02:33.270
Y cierro el soporte. Y de nuevo, como dije, cada expresión, algo que produce un valor, necesita

02:33.490 --> 02:34.920
tener un punto y coma

02:35.140 --> 02:40.930
Y puede pensar que necesita un punto y coma aquí, pero de nuevo, con una declaración 'si' no agrega uno.

02:41.230 --> 02:42.230
Pero 'alerta'.

02:42.250 --> 02:45.180
Esa es una expresión, teníamos un punto y coma aquí.

02:45.190 --> 02:51.490
Ahora puede que se pregunte "Bueno, todavía no hemos asignado una variable a 'nombre'". ¡Entonces hagámoslo!

02:51.700 --> 03:04.990
Voy a decir el nombre - 'var name' es igual. Diremos 'Billy'. Y voy a presionar 'Enter'.

03:04.990 --> 03:05.800
Veamos qué pasa.

03:07.430 --> 03:08.780
¡Hola, Billy!

03:08.860 --> 03:09.150
DE ACUERDO.

03:09.160 --> 03:13.070
Entonces, parece que está funcionando solo para verificarlo.

03:13.070 --> 03:15.800
¿Qué pasa si cambio 'nombre' a 'Susy'?

03:19.430 --> 03:20.550
Vaya, 'punto y coma', no 'dos ​​puntos'.

03:21.800 --> 03:22.260
DE ACUERDO.

03:22.520 --> 03:26.780
Y ahora si ejecutamos este programa de nuevo. Voy a copiarlo.

03:28.430 --> 03:34.580
Si 'nombre' es igual a 'Billy' - 'alerta (' ¡hola Billy! ')'. No pasa nada.

03:34.700 --> 03:35.960
Solo me pongo 'indefinido'.

03:36.770 --> 03:40.010
Y sin alerta.

03:40.060 --> 03:41.820
Entonces esa es una 'declaración condicional'.

03:42.220 --> 03:44.160
Pero seamos realistas aquí.

03:44.200 --> 03:50.350
A menudo no solo tendrás código, que se ejecuta cuando una condición es "verdadera", sino también código, que maneja

03:50.770 --> 03:57.610
otros casos, como cuando el 'nombre' no es 'Billy'. Tal vez cuando el 'nombre' es 'Susy'.

03:57.660 --> 04:02.490
Entonces esta ruta alternativa se muestra,

04:02.490 --> 04:10.080
si lo recuerda, en el diagrama de la flecha alternativa, donde necesita tener una ruta alternativa en el caso

04:10.140 --> 04:12.620
el nombre no es igual a 'Billy'.

04:12.620 --> 04:16.640
Así que volvamos y veamos qué podemos hacer.

04:16.640 --> 04:21.880
Entonces, la segunda palabra clave que vamos a aprender es 'else'.

04:21.950 --> 04:34.360
Entonces puedes hacer algo como 'if (name === "Billy")' y presionar la flecha hacia la derecha aquí, y aquí de nuevo. Google Chrome

04:34.360 --> 04:42.360
es lo suficientemente inteligente como para saber que ha escrito esto antes. Y ahora, en lugar de dejarlo así, ahora

04:42.360 --> 04:44.420
presione 'Espacio', 'else'.

04:44.460 --> 04:51.360
Entonces 'si nombre' es igual a 'Billy', 'alerta (' ¡hola Billy! '); 'else' - se lee como inglés, ¿verdad?

04:51.480 --> 05:05.520
Y luego 'else', abriendo el corchete, cerrando el corchete, y aquí voy a decir,

05:05.530 --> 05:09.910
'alerta ("hmmm no te conozco");'.

05:09.930 --> 05:12.190
Entonces, ahora veamos qué pasa.

05:14.980 --> 05:16.200
'hmmmm no te conozco' y ¿por qué es eso?

05:16.200 --> 05:23.030
Porque si recuerdas 'nombre' es igual a 'Susy'. Si cambio 'nombre' a

05:26.590 --> 05:27.000
'Porra'

05:30.020 --> 05:32.630
Bueno, y vuelva a hacer el programa que obtendrá:05:32.960 --> 05:33.970
'Hola Billy'.

05:34.340 --> 05:37.670
Entonces eso es lo que se llama una declaración 'if-else'.

05:37.670 --> 05:40.960
Escribes una condición 'si' algo es igual a 'verdadero',

05:42.270 --> 05:46.140
Entonces haz algo. 'else' - haz otra cosa.

05:46.620 --> 05:49.180
Y esto es solo una sintaxis que tendrás que aprender.

05:49.200 --> 05:53.850
Pero, como puede ver, es bastante fácil, lo escribe un par de veces y lo entenderá.

05:55.380 --> 05:58.920
DE ACUERDO. Pero ahora puedes tener otra pregunta.

06:00.370 --> 06:10.300
¿Qué pasa si, qué pasa si tienes algo como esto, algo, algo un poco más complicado, como este, donde

06:10.300 --> 06:13.440
tienes múltiples condiciones

06:13.450 --> 06:16.780
Veamos de lo que estoy hablando mostrándote otro ejemplo.

06:19.160 --> 06:23.890
En este vamos a usar algo llamado 'else-if'.

06:24.050 --> 06:33.360
Así que de nuevo voy a decir 'si nombre' es igual a 'Billy'. De nuevo, voy a presionar la tecla 'derecha (flecha)' aquí y es

06:33.360 --> 06:34.960
carga lo que he escrito antes

06:35.130 --> 06:38.080
Entonces 'si nombre' es igual a 'Billy' - 'alerta'.

06:38.280 --> 06:41.980
'¡Hola Billy!', 'else' - 'alerta'.

06:42.030 --> 06:43.200
'hmmmm no sé' -

06:43.560 --> 06:44.060
'hmmmm no te conozco'.

06:44.130 --> 06:47.240
Pero, ¿y si también queremos verificar el nombre 'Susy'?

06:47.460 --> 06:49.960
Bueno, puedo hacer algo como eso.

06:50.040 --> 06:52.470
'else si'

06:53.160 --> 07:00.040
'nombre' es igual a 'Susy', cierra el paréntesis '}'.

07:00.040 --> 07:00.760
Voy a decir

07:04.060 --> 07:06.890
'Hola Susy!'.

07:07.060 --> 07:09.930
Y al final aquí puedes dejarlo como está

07:10.030 --> 07:12.880
o de nuevo podemos agregar una 'declaración else'.

07:12.880 --> 07:18.380
Entonces, con ambos errores, ambas comparaciones fallan

07:18.450 --> 07:24.450
Puedo decir 'else', 'alerta'

07:24.540 --> 07:25.230
"No te conozco".

07:29.030 --> 07:29.990
Cierre el paréntesis '}'.

07:30.020 --> 07:32.390
De nuevo, no olvide cerrar el soporte.

07:32.390 --> 07:42.450
Presiona 'Entrar' y mira 'hola Billy', porque recuerda que mi 'nombre' es 'Billy', pero si lo hago 'nombre' es igual a 'Susy'

07:45.560 --> 07:50.960
y vuelvo a ejecutar el programa. De nuevo presione la tecla 'flecha' y presione 'Enter' nuevamente.

07:51.110 --> 07:53.040
'Hola Susy!'.

07:53.130 --> 07:54.750
Eso es genial, ¿verdad?

07:54.750 --> 07:58.400
Puedes pensar de esta manera cómo funcionan las contraseñas, ¿verdad?

07:58.410 --> 08:04.800
Esto es lo que los formularios están haciendo allí, verificando su correo electrónico y verificando su contraseña, usando lógica simple

08:04.800 --> 08:05.820
Me gusta esto.

08:06.700 --> 08:13.960
Ahora quiero mostrarte también con condicionales, lo que es muy útil y eso es algo llamado 'lógico

08:14.230 --> 08:15.760
operadores '.

08:15.820 --> 08:20.340
Te mostraré a los tres. Si puedo descomentar esto.

08:20.350 --> 08:21.010
¡Aqui tienes!

08:21.250 --> 08:33.900
Y estos son los tres, así que limpiemos esto e intentemos algo. Puedo ir 'if (name === Billy ")'.

08:37.390 --> 08:41.820
'o' - estas dos líneas "||", así que está justo encima de su tecla 'Intro'.

08:43.750 --> 08:50.660
Esto significa 'o' en JavaScript. o '|| nombre '=== "Ann"),

08:54.410 --> 09:01.240
luego 'alerta'

09:01.510 --> 09:04.120
"¡Hola Billy o Ann!"

09:07.200 --> 09:08.630
Cierre su paréntesis '}'.

09:08.730 --> 09:10.070
¿Qué crees que pasará aquí?

09:10.170 --> 09:13.960
¡Veamos! 'nombre' es igual

09:20.420 --> 09:20.970
'Porra'.

09:21.020 --> 09:24.280
Ejecutamos el programa, presionamos 'Enter'.

09:25.650 --> 09:29.950
Me sale "Hola Billy o Ann" pero si ahora el 'nombre' es

09:32.770 --> 09:37.080
'Ann' y yo volvemos a ejecutar el programa, presionamos 'Enter' nuevamente.

09:37.150 --> 09:41.140
'¡Hola Billy o Ann!'. Eso es, eso es genial.

09:41.140 --> 09:44.050
Puedo hacer 'o' comparación.

09:45.020 --> 09:46.670
¿Qué otra cosa podemos hacer?

09:46.700 --> 09:48.110
Bueno, también podemos hacer:09:51.760 --> 10:00.980
'y', que son dos de estos signos (ampersand) y esto significa, si 'nombre' es igual a 'Billy' y 'nombre' es igual a 'Ann'. Hmm, veamos si esto funciona.

10:02.000 --> 10:09.740
Ahora, vamos a 'nombrar' igual a 'Ann' y hacemos el programa. Hmmm, y no estoy obteniendo nada. ¿Qué pasa si hago 'Billy'

10:14.310 --> 10:15.280
y ejecutar.

10:15.460 --> 10:16.880
No, nada.

10:16.890 --> 10:17.580
¿Porqué es eso?

10:17.580 --> 10:20.850
Bueno, esto no tiene sentido, ¿verdad?

10:20.850 --> 10:23.750
Quiero decir 'nombre' es igual a 'Billy' y 'nombre'

10:23.760 --> 10:24.730
es igual a 'Ann'.

10:24.750 --> 10:30.750
Pero, como hemos discutido, una variable tiene, bueno, tiene un valor.

10:30.780 --> 10:36.480
Es un cajón en su escritorio y tiene cierto tipo de apariencia.

10:36.480 --> 10:44.940
O tiene un bolígrafo o un montón de archivos, no puede tener tanto 'Billy' como 'Ann', al menos ahora con lo que hemos aprendido

10:44.940 --> 10:46.170
hasta aquí.

10:46.260 --> 10:54.790
Entonces esto no tiene sentido. Donde usarías 'y' - es tal vez para verificar el nombre de alguien. Entonces puedo hacer:10:54.930 --> 11:01.050
'if firstName', recuerda que estoy usando 'camel case' aquí.

11:01.270 --> 11:14.920
'Bob y lastName' es igual a 'Smith', cierra el paréntesis '}', llaves.

11:14.920 --> 11:16.610
Y voy a decir 'alerta'.

11:16.870 --> 11:18.850
'Hola Bob Smith'.

11:20.980 --> 11:28.380
Cierre sus corchetes, llaves, presione 'Enter' y parece que cometí un error aquí, y dice:11:28.380 --> 11:30.380
'firstName no está definido' y

11:30.420 --> 11:35.760
Bueno, eso es cierto porque nunca he dicho lo que es 'firstName' y 'lastName' es. Antes de que ya haya definido

11:35.820 --> 11:42.550
qué era 'nombre', pero necesita saber cuáles son estas variables; de lo contrario, está diciendo "Hola, soy JavaScript

11:42.550 --> 11:46.390
y nunca me he encontrado con estas palabras antes ¿De qué estás hablando?"

11:46.390 --> 11:54.140
Entonces, antes de hacer esto. Tenemos que decir 'var firstName = "Bob";'

11:56.740 --> 12:00.320
y 'var lastName' es igual

12:05.820 --> 12:06.370
'Herrero'. DE ACUERDO.

12:06.790 --> 12:11.980
De hecho, quiero llamar su atención sobre el error:obtendrá esto mucho y cuando empiece

12:11.980 --> 12:15.430
off 'ReferenceError:firstName no está definido'.

12:15.430 --> 12:16.700
Es un error bastante bueno.

12:16.710 --> 12:22.930
Pero téngalo en cuenta:'ReferenceError' solo significa 'No sé cuál es este valor'. No hace referencia

12:22.930 --> 12:24.490
cualquier cosa'.

12:24.500 --> 12:30.960
DE ACUERDO. Entonces, cuando tenemos 'firstName' y 'lastName' definidos, presionamos hacia arriba nuevamente para acceder a nuestra pequeña pieza de ejecución aquí.


12:30.970 --> 12:41.800
Y voy a presionar 'Entrar' y me aparece 'Hola Bob Smith'. Si cambio 'firstName' o 'lastName' para decir 'Jones', presione

12:41.860 --> 12:47.350
'Enter' y vamos a volver a ejecutar este fragmento de código.

12:48.490 --> 12:54.950
No obtengo nada, porque 'firstName' y 'lastName' deben coincidir. DE ACUERDO.

12:55.010 --> 13:01.180
Tengo una última aquí y ese es el punto de "exclamación" o "exclamación".

13:02.250 --> 13:03.550
Um, veamos qué hace.

13:03.600 --> 13:07.190
Esto es un poco complicado, pero mira si puedes seguirlo aquí.

13:07.410 --> 13:30.510
'if (! (name === "Bob")), abriendo paréntesis' {',' alert ("Hola Bob"); ' y cerrarlo '}', presionar 'Enter' y yo

13:30.510 --> 13:32.680
obtener "Hola Bob".

13:32.930 --> 13:36.220
DE ACUERDO. Recordemos qué era 'nombre'.

13:36.290 --> 13:37.440
Es 'Billy'.

13:37.440 --> 13:48.750
¿Por qué recibo 'High Bob' cuando 'Billy' es el 'nombre'? Claramente, 'nombre' no es igual a 'Bob'. Debido a esto '!'.

13:48.860 --> 13:54.710
Este es el operador 'no'. Entonces es todo lo contrario.

13:54.770 --> 14:03.740
Entonces, esta expresión, que es 'nombre', equivale a 'Bob', que es 'falso' a 'verdadero'.

14:03.740 --> 14:10.260
Entonces solo para mostrarle si voy a esto y luego 'falso' [! Falso], me pongo 'verdadero'.

14:10.450 --> 14:14.710
Y si hago esto 'verdadero' [! Verdad], obtengo 'falso'.

14:14.780 --> 14:17.250
Entonces, es por eso que uso los corchetes aquí.

14:17.270 --> 14:25.970
Estoy diciendo:"Evalúa esto, y una vez que hagas esto, agrega lo opuesto a no".

14:26.590 --> 14:31.240
Y parece que, "¿por qué querría hacer eso alguna vez?

14:31.240 --> 14:32.850
¿Cuándo usaré esto alguna vez?

14:32.950 --> 14:40.270
Y esto es algo bueno de usar cuando, digamos, quieras apagar un interruptor.

14:40.270 --> 14:48.980
Así que al igual que te mostré que si 'no soy cierto' puedo decir que ahora está apagado, 'no falso' - se enciende la luz.

14:49.510 --> 14:55.700
Entonces verá casos en los que usemos esto y le prometo que es muy, pero muy importante, que tengamos

14:55.700 --> 14:57.310
en el lenguaje.

14:57.490 --> 15:01.380
Así que revisemos lo que hemos aprendido hasta este punto.

15:01.450 --> 15:08.090
Para que en el próximo video tengamos una idea de dónde hemos estado y hacia dónde vamos.

15:08.240 --> 15:10.130
Hemos hablado sobre tipos de JavaScript.

15:10.340 --> 15:16.540
Hemos aprendido sobre 'Números', 'Cuerdas', 'Booleanos' e 'Indefinido'.

15:16.590 --> 15:23.520
También aprendimos sobre las comparaciones de JavaScript que usamos a veces en declaraciones condicionales, como

15:23.520 --> 15:30.910
declaraciones 'if'. Aprendimos sobre las variables de JavaScript, aprendimos sobre los condicionales de JavaScript,

15:30.960 --> 15:40.090
declaraciones 'if', 'else', 'else if' y hemos aprendido acerca de los operadores lógicos de JavaScript:'y', 'o', y

15:40.100 --> 15:44.950
'signos de exclamación'. Y hay algunos más que aún no hemos cubierto y no se preocupe, lo haremos.

15:45.040 --> 15:46.370
Sé que esto es confuso.

15:46.370 --> 15:53.880
Esta es la nueva sintaxis:aprender un nuevo idioma pero no es tan malo.

15:53.940 --> 15:57.690
Definitivamente no tiene tantas palabras como un lenguaje real.

15:57.690 --> 16:03.020
Solo tienes que acostumbrarte a esto y practicar escribiendo en la consola y practicar con los problemas

16:03.090 --> 16:10.200
y familiarícese con ejecutar estas sintaxis y hará clic y se convertirá en una segunda naturaleza.

16:10.200 --> 16:12.570
Como dije, todos pasan por esto.

16:12.720 --> 16:13.840
¡Ya lo entenderás!

16:13.860 --> 16:19.510
Lo prometo, sé que sigo diciendo esto, pero solo digo porque lo sé, cuando comencé a aprender estas cosas.

16:19.800 --> 16:21.030
Así es como me sentí.

16:21.270 --> 16:22.760
Y así es como todos los demás se sienten.

16:22.780 --> 16:26.850
Quiero asegurarme de que (usted) no se preocupe, llegará allí.

16:26.850 --> 16:32.040
Vas a ser un maestro de JavaScript para el final de este curso, así que te veré en el próximo.

16:32.040 --> 16:35.140
No puedo esperar para mostrarte más. Hablamos entonces

16:35.400 --> 16:35.710
Adiós
