WEBVTT

00:00.840 --> 00:03.000
Y bienvenido de nuevo!

00:03.000 --> 00:10.830
Nos tomaremos un descanso rápido de aprender la sintaxis de JavaScript para mostrarle cómo se implementa JavaScript.

00:11.190 --> 00:12.170
en el navegador.

00:12.450 --> 00:15.730
Volveremos a esta imagen que hemos visto muchas veces antes

00:15.780 --> 00:22.650
en este curso. Y tenemos una idea bastante buena de lo que hace HTML y CSS.

00:22.650 --> 00:31.740
Si lo recuerdas, HTML se envía al navegador, luego se ve la etiqueta 'enlace' y se envía el CSS a

00:31.740 --> 00:32.570
el navegador.

00:32.670 --> 00:36.270
¿Pero qué pasa con nuestro nuevo amigo JavaScript aquí?

00:36.300 --> 00:37.380
¿Qué pasa con él?

00:38.260 --> 00:43.350
Bueno, en este video vamos a aprender exactamente eso.

00:43.390 --> 00:49.340
Así que tengo aquí un archivo index.html. Voy a abrirlo con Google Chrome.

00:49.450 --> 00:50.940
Está completamente vacío ahora.

00:51.250 --> 00:57.630
Y también voy a arrastrarlo a mi texto Sublime, para que podamos agregarle algo.

01:00.370 --> 01:06.790
Así que tengo el texto Sublime y el navegador, y vamos a usar nuestro pequeño comando corto para crear un rápido

01:06.790 --> 01:09.660
archivo html - 'Javascript'.

01:09.970 --> 01:21.600
Y solo tengamos un simple 'encabezado' que diga 'Javascript en HTML'. Guardar y actualizar

01:21.650 --> 01:22.260
¡Perfecto!

01:22.280 --> 01:23.910
Ya tenemos maestros de esto.

01:23.930 --> 01:25.760
Todos sabemos lo que está pasando.

01:26.180 --> 01:29.830
Entonces, ¿cómo agregamos JavaScript a esto?

01:29.840 --> 01:41.620
Quiero decir:con CSS tenemos la etiqueta 'link', ¿verdad? Y tuvimos este 'href' donde lo contamos dónde está. Bueno, si

01:41.620 --> 01:49.910
recuerdas, JavaScript otra vez al igual que HTML y CSS es solo un archivo.

01:50.050 --> 01:54.550
Así que vamos a crear uno primero. En texto sublime

01:54.550 --> 01:55.950
Voy a crear un nuevo archivo.

01:56.100 --> 02:00.170
Voy a guardarlo y voy a decir 'script.js'.

02:00.220 --> 02:01.160
'script.js'.

02:01.180 --> 02:02.860
Ver el 'punto js' al final?

02:02.860 --> 02:04.550
Eso significa JavaScript.

02:04.660 --> 02:10.050
Aviso, qué sucede cuando hago clic en 'guardar'. En la parte inferior Sublime Text

02:10.090 --> 02:13.780
ahora convierte la sintaxis a JavaScript.

02:13.850 --> 02:21.440
Así que ahora puedo escribir algo como '4 + 3' y obtengo los geniales colores de JavaScript como, y puedo escribir

02:21.890 --> 02:35.850
'si (4 + 3 === 7)', puedo 'alertar ("¡Eres listo!").

02:36.500 --> 02:38.800
Entonces puedes ver que tiene la sintaxis para mí.

02:39.870 --> 02:40.450
DE ACUERDO.

02:40.830 --> 02:42.220
Perfecto.

02:42.330 --> 02:44.650
Entonces solo guardo eso.

02:44.760 --> 02:47.840
Veamos si podemos agregar esto a ... uy.

02:47.880 --> 02:49.390
Olvidé el punto y coma aquí.

02:49.410 --> 02:51.080
Siempre lo olvido también.

02:51.210 --> 02:53.210
Agreguemos esto a nuestro HTML.

02:53.430 --> 02:58.720
Si funciona, recibiremos una "alerta" que dirá "¡Eres inteligente!"

02:58.920 --> 03:00.190
Entonces cómo podemos hacer esto?

03:01.240 --> 03:06.780
Bueno, hay una etiqueta HTML llamada etiqueta 'script'.

03:07.150 --> 03:15.510
Así que la etiqueta 'link' - para la hoja de estilo, la etiqueta 'script' para - JavaScript. Y todo lo que hacemos es esto:03:15.680 --> 03:25.250
Tenemos el texto 'type =' / javascript "'. Ves aquí cómo con CSS tenemos "text / css". Bueno, lo estamos contando

03:25.250 --> 03:36.380
aquí que esto es JavaScript Y aquí JavaScript se puede escribir aquí.

03:37.280 --> 03:45.150
Voy 'alert ("hello")' y es posible que recuerde esto porque es una especie de etiqueta de estilo para CSS.

03:45.310 --> 03:46.400
Veamos qué pasa.

03:47.380 --> 03:49.930
Voy a actualizar y me sale

03:50.060 --> 03:50.790
'Hola'.

03:51.140 --> 03:51.950
¡Mira eso!

03:51.950 --> 04:01.520
Acabamos de agregar JavaScript a HTML. Pero realmente quiero usar este archivo. Como sabemos con CSS,

04:01.520 --> 04:06.890
no necesariamente queremos que nuestro JavaScript viva en HTML, queremos separar las preocupaciones, queremos el

04:06.890 --> 04:08.620
JavaScript en el archivo de JavaScript.

04:09.180 --> 04:14.480
Bueno, la forma en que hacemos eso es a través de un archivo fuente.

04:15.040 --> 04:20.830
Entonces, todo lo que hacemos es ... 'src'. Puede recordar esto de las imágenes.

04:20.860 --> 04:27.690
Entonces en lugar de 'href' y 'link' tenemos 'src' y decimos 'script.js'.

04:28.660 --> 04:34.300
Yo guardo y renuevo Y entiendo "¡Eres inteligente!".

04:34.310 --> 04:41.980
Ahora podemos decir 'script.js', porque, bueno, está en la misma carpeta, está en la carpeta del escritorio.

04:42.050 --> 04:49.130
Si no fuera así, digamos que este HTML no estaba en la carpeta del escritorio, tendríamos que hacer algo

04:49.160 --> 04:51.350
como 'desktop / script.js ...'. DE ACUERDO.

04:59.150 --> 05:05.310
Entonces eso es muy interesante. ¿Qué sucede si tengo varios archivos JavaScript? Podríamos haberlo visto

05:05.330 --> 05:09.440
en ... recuerden Bootstrap y Bootstrap tenemos tres etiquetas de "script".

05:09.810 --> 05:10.600
Bueno, sí.

05:10.700 --> 05:18.020
Usted puede, simplemente - al igual que con 'enlace', puede tener múltiples etiquetas 'guión' y puede decir 'guión2',

05:18.050 --> 05:24.490
'script3' y nuevamente, cada uno se ejecuta de a uno por vez.

05:25.660 --> 05:26.320
DE ACUERDO.

05:26.730 --> 05:36.540
Ahora una pregunta que podría tener es:'¿Por qué acabo de poner la etiqueta' script 'en la parte inferior aquí, en la parte inferior

05:36.540 --> 05:38.200
¿del cuerpo?'

05:38.260 --> 05:39.190
¿Por qué no nosotros?

05:39.220 --> 05:41.200
y déjame solo eliminar esto por ahora ...

05:41.200 --> 05:47.550
¿Por qué no lo ponemos en la parte superior, como hacemos con el archivo CSS?

05:47.680 --> 05:49.140
Bueno, déjame mostrarte algo.

05:49.240 --> 05:50.560
Vamos a ponerlo aquí.

05:50.560 --> 05:51.690
Veamos qué pasa.

05:52.000 --> 05:59.350
Voy a actualizar DE ACUERDO. Me sale "Eres inteligente"

05:59.390 --> 06:00.350
No sé si lo viste.

06:00.350 --> 06:02.030
¿Has visto el JavaScript ir?

06:02.180 --> 06:03.300
Cambiemos esto rápidamente.

06:03.320 --> 06:10.750
Digamos que nuestro sitio web ahora es nuevo y lo nuevo y voy a decir 'Esperando Javascript'.

06:11.010 --> 06:15.080
Voy a salvar. Observe lo que sucede con el encabezado.

06:15.380 --> 06:18.970
Me refresco No ha cambiado aún

06:19.190 --> 06:22.500
Tengo que hacer clic en "¡Eres listo!"

06:22.550 --> 06:24.600
Ya ves, se ha ido por completo.

06:24.610 --> 06:34.640
Haga clic en 'Aceptar' y solo entonces aparece, porque el navegador lee el archivo, va y obtiene el archivo CSS y

06:34.640 --> 06:39.070
luego ve la etiqueta 'script' y dice "¡Oh, voy a leer lo que pasa aquí!"

06:39.140 --> 06:42.770
Y aquí hay una 'alerta' y qué 'alerta' lo hace ...

06:42.830 --> 06:50.090
Nos espera para hacer clic en 'Aceptar', por lo que el navegador no puede mostrar (mientras) esperando JavaScript.

06:50.090 --> 06:56.750
Entonces verás personas de sitios web más antiguos que ponen las etiquetas de "script" aquí, pero eso realmente retrasa lo que

06:56.750 --> 06:58.470
es visto por el usuario.

06:58.820 --> 07:11.270
En cambio, si lo colocamos aquí y cambiamos el texto nuevamente a 'No esperando' y un guardado. Mira qué pasa.

07:13.260 --> 07:20.440
'No esperando Javascript' - eso cambió. Entonces, idealmente, queremos poner nuestras etiquetas 'script' en la parte inferior

07:20.440 --> 07:21.200
del cuerpo.

07:21.400 --> 07:31.270
Lo que eso significa es que el sitio web se muestra, se procesa y luego aún tenemos que esperar

07:31.270 --> 07:34.000
el JavaScript para cargar, digamos que tuvimos una animación genial.

07:34.000 --> 07:36.070
Tendré que esperar hasta que eso cargue.

07:36.220 --> 07:43.090
Pero para un usuario, parece que el sitio web se carga mucho más rápido porque es posible que no haga clic en un menú desplegable

07:43.090 --> 07:48.790
menú, o vea la animación de inmediato y observe que hay un retraso, pero verán un retraso si

07:48.790 --> 07:50.310
no ve nada en la página

07:50.350 --> 07:54.030
Así que las etiquetas 'guión' en la parte inferior.

07:54.110 --> 07:55.220
Una última cosa.

07:56.370 --> 08:00.600
¿Cómo conseguimos esa consola para imprimir cosas?

08:01.440 --> 08:05.760
Sería bueno si, en lugar de estar alerta todo el tiempo, pudiera obtener algo en la consola.

08:05.910 --> 08:14.060
Bueno, en JavaScript puedes hacer algo, llamado 'console.log'.

08:14.140 --> 08:18.710
Y aquí puedo decir "Helooooo".

08:18.820 --> 08:20.640
Entonces esta sintaxis es un poco rara.

08:20.650 --> 08:29.580
Explicaré más adelante lo que está sucediendo aquí, pero 'console.log' es una pequeña sintaxis especial, que podemos usar.

08:29.590 --> 08:39.420
Y ahora si actualizo la página, obtengo el registro aquí. Entonces puedo escribir todo lo que quiero aquí.

08:39.430 --> 08:46.130
Algo así como 'alerta', pero sin obtener esa molesta ventana emergente una y otra vez y actualizar.

08:46.310 --> 08:47.430
Y obtengo 'Hellooooo'.

08:47.480 --> 08:51.800
Y usaremos 'console.log' mucho en los próximos videos.

08:51.820 --> 08:59.170
Puede ver aquí que es una buena forma de imprimir algo en la consola, antes de aprender a

08:59.530 --> 09:01.210
cambia nuestro HTML

09:02.420 --> 09:03.380
Entonces lo veré en el próximo. Adiós
