WEBVTT

00:01.230 --> 00:02.040
Hola a todos.

00:02.130 --> 00:09.210
Tenemos nuestra aplicación robo friends ahora en github y deberías poder poner tu proyecto robo friends en

00:09.240 --> 00:12.130
GitHub, pero aquí está la cosa.

00:12.150 --> 00:18.930
Sería bueno si pudiéramos usar las páginas de GitHub para ver nuestra aplicación robo friends sin tener

00:18.930 --> 00:28.940
que clonar la descarga de npm install tal como lo hemos hecho con proyectos simples de correo electrónico H2 bien con ellos crean una aplicación de

00:28.940 --> 00:29.690
reacción.

00:29.690 --> 00:35.310
En realidad, hay una manera de hacer esto usando las páginas de GitHub.

00:35.680 --> 00:39.490
Ahora vincularé a este recurso para que pueda seguir paso a paso.

00:39.490 --> 00:43.010
Pero vamos a verlo y ver qué fácil es.

00:43.030 --> 00:46.460
Tengo el proyecto aquí mismo.

00:46.510 --> 00:50.450
Dice que necesito agregar una página de inicio para empaquetar ese Jason.

00:50.500 --> 00:51.400
Entonces hagamos eso.

00:51.400 --> 00:59.330
Voy a copiar esto y agregué en nuestro paquete papá Jason que importa dónde esté.

00:59.330 --> 01:05.090
Vamos a escribir después del nombre para que esto sea un poco más grande.

01:05.160 --> 01:12.190
Voy a agregar mi nombre de usuario aquí y este es el nombre del repositorio en nuestro caso.

01:12.210 --> 01:14.150
Qué era.

01:14.210 --> 01:15.620
Eran amigos robo.

01:15.620 --> 01:17.750
Entonces, nuevamente use su nombre de usuario de GitHub.

01:18.290 --> 01:24.370
Y luego aquí agregue su nombre de proyecto get Hub a continuación.

01:25.490 --> 01:34.630
Si seguimos los pasos, dice que necesito instalar las páginas de GitHub en este paquete y luego agregarlo mediante el script

01:34.630 --> 01:35.970
de implementación.

01:36.010 --> 01:42.590
Entonces copiemos y peguemos esto, así que si está usando NPM, puede hacerlo si está usando su hilo.

01:42.590 --> 01:43.520
Este es el comando.

01:44.510 --> 01:47.390
Así que instalemos las páginas de

01:50.290 --> 01:56.260
get hub y mientras se instala, volvamos aquí y muestra aquí que necesitamos agregar

01:56.260 --> 02:01.240
estas dos líneas una implementación previa y una implementación en nuestros scripts.

02:01.240 --> 02:03.220
Entonces, una vez más, vaya a

02:06.390 --> 02:08.900
nuestros scripts y luego copie y pegue esta línea.

02:09.180 --> 02:13.860
Entonces tenemos el despliegue previo y el despliegue.

02:13.860 --> 02:18.600
Entonces, la implementación previa ejecuta NPM run build, que sabemos lo que hace.

02:18.600 --> 02:20.710
Construye nuestro proyecto.

02:20.870 --> 02:25.490
Crea una versión de producción de nuestro proyecto y crea una carpeta integrada.

02:25.490 --> 02:33.140
Y luego, la implementación usará estas páginas de GitHub, de modo que acabamos de instalar y usar nuestra carpeta integrada.

02:33.140 --> 02:35.560
Volvamos.

02:35.660 --> 02:35.990
Todo bien.

02:35.990 --> 02:40.780
Y finalmente, tuvimos que implementar este sitio ejecutando NPM run deploy.

02:41.720 --> 02:42.590
Entonces hagamos eso.

02:42.590 --> 02:50.190
Déjame guardar y luego y aquí vamos a aclarar esto.

02:50.240 --> 02:52.010
Ejecute NPM, que es

02:55.240 --> 02:56.470
este script.

02:56.500 --> 02:59.580
Y recuerde que las implementaciones previas se ejecutarán antes.

02:59.710 --> 03:04.900
Entonces, si ejecuto esto, parece que tengo un error en mi paquete Jason.

03:04.900 --> 03:06.130
Veamos.

03:06.130 --> 03:07.520
Que me estoy perdiendo aqui.

03:07.520 --> 03:10.570
Bueno, tengo una coma al final que no necesito.

03:10.570 --> 03:15.720
Vamos a correr eso de nuevo.

03:15.750 --> 03:18.880
Verá que la carpeta de compilación se acaba de crear.

03:18.960 --> 03:21.360
Está creando una producción optimizada construida.

03:21.600 --> 03:28.370
Eso es genial y ahí lo tenemos nuestro proyecto ahora está publicado.

03:28.370 --> 03:38.910
Ahora todo lo que tenemos que hacer es volver a nuestro repositorio, ir a la configuración y si nos desplazamos hacia

03:39.120 --> 03:47.670
abajo para obtener páginas centrales, tenemos que cambiar la fuente para obtener la rama de páginas centrales.

03:47.680 --> 03:53.620
Ahora puede que tenga que esperar un par de minutos o incluso actualizar la página para asegurarse de que se

03:53.620 --> 03:55.010
hayan aplicado los cambios.

03:55.300 --> 04:03.740
Y si todo va bien, recuerde que estamos seleccionando la rama de páginas de github y hago clic en este enlace

04:03.740 --> 04:04.820
y actualizo.

04:04.820 --> 04:05.840
Ahí tienes.

04:05.840 --> 04:16.950
Nuestra aplicación robo friends ya está disponible en esta U. R. L. así que puedo copiar su URL, vaya a

04:17.760 --> 04:26.200
mi proyecto, haga clic en editar y luego agregue nuestro sitio web aquí, así que la próxima vez que alguien venga y vea nuestro repositorio, simplemente

04:26.200 --> 04:29.470
puede hacer clic aquí para ver el proyecto en vivo.

04:29.470 --> 04:30.980
Cuan genial es eso.

04:31.060 --> 04:39.600
Agradable y simple y así tenemos una aplicación lista para producción porque recuerde que crear una aplicación reacciona

04:39.960 --> 04:46.690
para nosotros optimiza todo y mantiene todo realmente muy pequeño para la producción.

04:46.710 --> 04:54.090
Nuestros archivos de JavaScript, mientras están minimizados, se ven muy pequeños y no se parecen en nada a

04:54.150 --> 05:03.870
lo que teníamos antes con contenedores y componentes, todo eso porque utilizamos la aplicación create react se optimiza para la producción, felicitaciones, presénteles a

05:05.410 --> 05:09.910
sus amigos que veré en el próximo uno tal vez.
