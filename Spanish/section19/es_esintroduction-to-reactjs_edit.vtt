WEBVTT

00:01.250 --> 00:07.580
Buen trabajo al llegar hasta aquí, las cosas se volverán cada vez más divertidas a partir

00:07.820 --> 00:15.530
de esta sección porque ahora estamos aprendiendo herramientas reales que usan las compañías reales y que lo contratarán y el

00:15.560 --> 00:23.540
desarrollo también se vuelve mucho más rápido porque estamos usando estos herramientas para hacernos construir sitios web más rápido y mejor.

00:23.540 --> 00:28.770
Entonces hablemos de reaccionar. ¿Qué tenemos antes de reaccionar?

00:28.870 --> 00:36.890
Bueno, como he mencionado antes, tuvimos jQuery. jQuery fue como recuerdas, el código de

00:36.890 --> 00:41.270
escritura muy imperativo fue como mezclar ingredientes secuencialmente.

00:41.270 --> 00:44.480
Si esto sucede, haga esto y luego haga eso.

00:44.480 --> 00:50.070
Pero también, si esto sucede, haga esto y creará muchas inconsistencias.

00:50.300 --> 00:58.430
Y si recuerdas la sección de manipulación DOM Bueno, eso es realmente muy difícil y hacer un seguimiento constante

00:58.430 --> 01:06.280
de lo que cambió y qué cambiar es un gran desastre y crea un desarrollo muy lento.

01:06.740 --> 01:12.830
Y a medida que su sitio web se vuelve más y más complejo, se vuelve muy difícil de escalar, lo que

01:12.830 --> 01:16.360
significa que es muy difícil para los equipos de desarrolladores administrarlo.

01:17.450 --> 01:24.050
Ahora reaccionar se creó en Facebook, ya que sabes que Facebook es una aplicación bastante grande y muchas cosas tienen que

01:24.050 --> 01:25.670
suceder para que funcione bien.

01:25.820 --> 01:33.230
Y tuvieron este problema y crearon reaccionar como una forma de resolver este problema y poder tener una herramienta que les

01:33.290 --> 01:39.410
permita construir sitios web de una manera agradable y predecible para que puedan tener múltiples desarrolladores trabajando

01:39.410 --> 01:40.630
al mismo tiempo.

01:42.410 --> 01:49.130
Y me gusta usar la analogía de una máquina de pan usando react es

01:49.130 --> 01:58.980
algo así como que simplemente arrojas los ingredientes y reaccionas, hace toda esta magia debajo del capó y saca un sitio web.

01:59.080 --> 02:01.670
Entonces es muy confiable y muy consistente.

02:02.500 --> 02:11.680
Y hace una cosa realmente bien y es la visión que logra hacer que nuestros sitios web cambien el DOM

02:12.810 --> 02:18.520
de manera predecible, que es fácil de escalar y fácil de administrar.

02:18.660 --> 02:24.690
Y la belleza de reaccionar es que debido a que es solo la vista, no necesariamente significa que es solo

02:24.690 --> 02:25.710
para los navegadores.

02:26.010 --> 02:32.200
De hecho, se puede utilizar una reacción con dispositivos móviles para crear aplicaciones nativas.

02:32.220 --> 02:34.760
Se usa en aplicaciones de realidad virtual.

02:35.010 --> 02:41.310
Puede crear aplicaciones de escritorio con reaccionar en cualquier lugar que tenga una vista bien reaccionar puede usarlo.

02:41.340 --> 02:48.450
Y las grandes compañías como mencioné antes en Facebook e Instagram usan Reaccionar y Netflix usa reaccionar cada vez que navegas por

02:48.450 --> 02:52.750
las opciones de películas y eso está usando reaccionar debajo del capó.

02:53.040 --> 02:57.140
Es una herramienta muy muy útil y de gran demanda.

02:57.210 --> 03:03.300
Así que estoy emocionado de hablar sobre reaccionar y enseñarle esta valiosa habilidad en esta sección.

03:03.360 --> 03:09.390
Ahora, para comprender la reacción, hay algunas cosas que queremos repasar y estos son principios

03:09.390 --> 03:14.850
muy valiosos que los desarrolladores han aprendido a lo largo de los años.

03:14.850 --> 03:21.360
Una es la idea de pensar en componentes hasta este punto que acabamos de construir sitios web.

03:21.620 --> 03:27.250
Todo es solo un archivo JavaScript, un archivo CSS, un archivo HTML.

03:27.380 --> 03:34.360
Pero no sería bueno si la web fuera una red de estos pequeños componentes.

03:34.370 --> 03:41.180
Piense en ellos como bloques de Lego donde todos construyen un bloque de Lego específico y usted simplemente combina

03:41.180 --> 03:44.600
estos bloques de Lego para crear su sitio web.

03:44.810 --> 03:50.780
Esa es la idea que reaccionó establecida. Usemos esto como ejemplo.

03:50.900 --> 04:00.800
Primero tiene átomos que, como puede ver aquí, son iconos y pequeños elementos indivisibles en su

04:00.800 --> 04:03.350
sitio web, como imágenes.

04:03.500 --> 04:07.780
Hay texto y los divide en átomos.

04:07.790 --> 04:16.040
A partir de ahí, se forman moléculas o se combinan átomos que tienen una funcionalidad similar, como la barra de navegación

04:16.040 --> 04:17.090
aquí abajo.

04:17.090 --> 04:25.270
Combina átomos individuales para agregar alguna funcionalidad y luego vuelve a tener organismos un poco más grandes que las moléculas

04:25.270 --> 04:29.470
que se combinan a una funcionalidad a mayor escala.

04:29.560 --> 04:31.530
Y luego finalmente tienes plantillas.

04:31.840 --> 04:37.950
La combinación de estos organismos para darle una idea de cómo debería verse su aplicación o sitio web.

04:37.960 --> 04:39.580
Finalmente tienes tus páginas.

04:39.640 --> 04:43.140
Esa es la página de tu aplicación.

04:43.350 --> 04:52.650
Y si piensa en componentes como esta imagen demuestra bien, puede construir pequeños componentes pequeños que puede reutilizar

04:53.190 --> 04:58.200
y colocar en diferentes partes de la página web.

04:58.260 --> 05:05.550
Por ejemplo, este botón de retroceso aquí si construyo un componente de reacción que es el botón de retroceso, ahora puedo usarlo en

05:05.670 --> 05:06.600
varias páginas.

05:06.600 --> 05:13.110
Y no tengo que volver a escribir el código si quería que la barra de navegación se usara en diferentes áreas de la

05:13.110 --> 05:13.590
aplicación.

05:13.590 --> 05:19.670
Bueno, de nuevo, no necesito reescribir el código, lo escribo una vez y puedo reutilizarlo de hecho, incluso puedo

05:19.710 --> 05:21.020
compartirlo con el mundo.

05:21.300 --> 05:28.900
Y esta idea de componentes hace que la reacción sea INCREÍBLE porque aquí tengo un sitio web que tiene componentes

05:28.920 --> 05:32.280
de reacción creados por alguien y podemos reutilizarlos.

05:32.490 --> 05:36.290
Y no es solo CSS y HTML.

05:36.330 --> 05:42.310
Pero funcionalidades reales como barras de navegación y formularios de inicio de sesión.

05:42.320 --> 05:51.480
Solo puedo descargar este componente de reacción y adjuntarlo a mi sitio web y, debido a la forma en que está estructurado, realmente no necesita saber

05:51.480 --> 05:56.690
sobre el resto de la página web, es solo su propio bloque de

05:56.880 --> 06:02.540
lego que funciona por sí solo al reducir las dependencias de otros partes del sitio web.

06:02.580 --> 06:06.390
Puedo conectar esto donde quiera.

06:06.400 --> 06:12.310
Otro concepto importante con react es la idea del flujo de datos unidireccional.

06:12.390 --> 06:19.200
La mejor manera de describirlo es mirando este árbol como estructura aquí, ve que tenemos un padre,

06:19.200 --> 06:25.110
algunos hijos y luego esos niños tienen sus propios hijos y esos niños tienen

06:25.110 --> 06:26.460
sus propios hijos.

06:26.650 --> 06:34.240
Y la idea con reaccionar es que los datos fluyen de arriba a abajo y nunca al

06:34.570 --> 06:38.380
revés, si estos rojos los llamamos componentes cambian.

06:38.530 --> 06:44.170
Bueno, en ese caso solo sus hijos saben sobre el cambio.

06:44.170 --> 06:50.290
Los padres realmente no se preocupan por el cambio porque bien, la dirección del flujo de datos es

06:50.290 --> 06:51.440
siempre aguas abajo.

06:51.490 --> 06:58.750
Entonces, si volvemos a la idea de los componentes, si tuviéramos un sitio web basado

06:58.980 --> 07:06.310
en componentes y esta fuera la página y estos fueran organismos y luego moléculas y luego átomos.

07:06.380 --> 07:11.110
Bueno, en ese caso los componentes rojos cambian y luego solo los que están debajo.

07:11.120 --> 07:18.290
Como puede ver aquí en azul, conozca este cambio y, en función de eso, actuarán en consecuencia y

07:18.290 --> 07:19.170
también cambiarán.

07:19.340 --> 07:25.820
Ahora, sin tener un problema, es difícil entender este concepto, pero créanme, este

07:25.820 --> 07:29.500
es un concepto muy importante que reacciona.

07:29.510 --> 07:35.870
Crea una gran cantidad de código libre de errores y es una idea

07:35.900 --> 07:41.300
que comprenderá cada vez más a medida que comencemos a codificar.

07:41.540 --> 07:49.600
Lo siguiente es la idea de DOM virtual: sabes qué es el DOM del Modelo de objetos de documento.

07:49.730 --> 07:54.950
Y también aprendimos que una de las cosas más importantes como desarrollador es

07:54.950 --> 08:01.010
minimizar la cantidad de manipulación de DOM que hacemos porque los navegadores web tienen que trabajar

08:01.010 --> 08:05.320
realmente muy duro para lograrlo y esto reduce el rendimiento de

08:05.330 --> 08:11.160
la página web y aumenta loco. Creo que esta imagen demuestra lo que reacciona realmente bien de antemano.

08:11.200 --> 08:15.840
Éramos los pintores y le dijimos al DOM exactamente qué hacer.

08:15.910 --> 08:23.180
Elimine este elemento, luego colóquelo y luego agregue esto y colóquelo de esta manera con react Tenemos este

08:23.200 --> 08:30.030
bot de reacción y el bot de reacción crea algo llamado Virtual DOM, Virtual DOM

08:30.070 --> 08:37.050
es solo un objeto de JavaScript y este objeto de JavaScript que simplemente describe nuestro sitio web.

08:37.290 --> 08:46.160
El estado actual del sitio web y simplemente le damos ese objeto para que reaccione y el bot de reacción realizará

08:46.160 --> 08:53.240
automáticamente cambios en el DOM y pintará la imagen de la manera más óptima posible.

08:53.240 --> 08:56.480
Así que solo le decimos oye, este es el objeto

08:56.660 --> 08:58.140
Esto es lo que queremos

08:58.640 --> 09:02.960
en el DOM y la reacción se encarga de la manipulación del DOM por usted.

09:02.960 --> 09:11.660
Recuerde lo molesto que fue hacer un selector de consultas, luego tomar elementos por id y luego hacer que todos

09:11.660 --> 09:14.480
estos controladores de eventos reaccionen bien.

09:14.480 --> 09:22.430
Entonces, nuevamente, el DOM virtual es solo una copia del DOM que está en un objeto de JavaScript y luego reacciona debajo del

09:22.430 --> 09:28.910
capó simplemente cambia la vista y es por eso que puede funcionar fuera de los navegadores y puede

09:28.910 --> 09:35.380
usar cosas como VR y dispositivos móviles porque reacciona es la máquina y en qué está el lienzo,

09:35.390 --> 09:38.960
así podemos cambiar el lienzo a lo que queramos.

09:38.960 --> 09:43.670
Finalmente reaccionar tiene un gran ecosistema.

09:43.750 --> 09:49.540
Es probable que sea uno de los ecosistemas más grandes en JavaScript en este momento y hay

09:49.540 --> 09:56.840
tantas herramientas con las que trabajar reacciona de hecho, la comunidad de desarrolladores es tan grande que cualquier problema que tenga es

09:56.910 --> 10:02.250
muy probable que alguien más lo haya tenido y lo ha publicado en Internet y puede

10:02.250 --> 10:03.630
encontrar soluciones para.

10:03.690 --> 10:09.810
Puede encontrar paquetes de reacción en npm, puede usarlo con el nodo, hay paquete web y babel que puede usar

10:09.810 --> 10:10.770
con él.

10:11.010 --> 10:18.060
Es un ecosistema realmente bueno que utiliza la última tecnología JavaScript para crear sitios web de

10:18.060 --> 10:20.490
una manera elegante y agradable.

10:20.500 --> 10:26.630
Ahora, una cosa que quiero advertirles en esta sección es que veremos un código como este.

10:27.580 --> 10:30.090
Y se verá muy extraño al principio.

10:30.250 --> 10:34.900
Es igual que cuando viste JavaScript por primera vez.

10:35.030 --> 10:37.400
Parecía un mundo completamente nuevo y diferente.

10:37.400 --> 10:43.130
Lo harás cuando veas esto por primera vez, pero confía en mí sabiendo lo que sabes sobre JavaScript, esto se

10:43.250 --> 10:44.690
vuelve realmente muy fácil.

10:44.720 --> 10:51.740
Tienes clases que amplían el componente reaccionar y así es como construimos componentes.

10:51.980 --> 11:00.020
Tenemos de nuevo el constructor que hemos visto en los objetos avanzados y luego cada clase tiene una función de renderización obligatoria

11:00.110 --> 11:03.860
que solo le dirá lo que debe representar este reloj.

11:03.890 --> 11:06.970
Y como puede ver, parece que HTML no lo es.

11:07.400 --> 11:12.020
No es exactamente HTML, pero la sintaxis es muy similar.

11:12.020 --> 11:16.490
Entonces, incluso al mirar esto, ves que este componente del reloj.

11:16.520 --> 11:20.170
Una vez más, este bloque de lego simplemente

11:20.180 --> 11:27.730
devuelve una etiqueta Hello World h1 con un h2 que dice que es así y luego, una vez más,

11:27.730 --> 11:36.580
solo para avisarle, escuchará palabras como accesorios y estados y componentes de reacción, pero estos son solo sintaxis de lenguaje que aprenderás

11:36.860 --> 11:39.540
Y en realidad es bastante fácil una vez que te acostumbras.

11:39.890 --> 11:43.730
Así que no te preocupes, todo esto

11:43.820 --> 11:49.290
tendrá sentido al final. Y sabes lo que vamos a construir una aplicación bastante buena.

11:49.350 --> 11:57.170
Se llama Robo Friends y vamos a construir esta aplicación que busca bien a través de tus amigos robots y puedes

11:57.680 --> 11:59.710
encontrar su información de contacto.

11:59.780 --> 12:03.120
Y como puedes ver, se actualiza en vivo.

12:03.290 --> 12:04.800
Es super rapido.

12:04.940 --> 12:06.450
Es receptivo

12:06.800 --> 12:08.600
Va a ser muy divertido.

12:08.690 --> 12:14.990
Y vamos a construir esto bastante rápido solo para mostrarle lo poderosa que es reaccionar.

12:15.030 --> 12:15.500
Todo bien.

12:15.540 --> 12:17.770
Estoy realmente emocionado de entrar en esta sección.

12:17.850 --> 12:19.400
Te divertirás mucho.

12:19.530 --> 12:21.020
Nos vemos en la próxima.
