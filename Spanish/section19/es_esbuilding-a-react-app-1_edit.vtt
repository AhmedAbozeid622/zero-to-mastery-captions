WEBVTT

00:00.840 --> 00:04.900
Muy bien, construyamos nuestra aplicación RoboFriends. Creo que para comenzar queremos

00:04.930 --> 00:10.730
volver a pensar en los componentes y en qué tipo de componentes queremos construir.

00:10.750 --> 00:16.720
En este sitio web, el componente más pequeño en el que probablemente queremos comenzar a

00:17.020 --> 00:19.000
trabajar es quizás el

00:19.000 --> 00:25.480
componente de la tarjeta. Esta tarjeta está aquí. Si podemos construir uno de estos, entonces,

00:25.720 --> 00:29.180
de acuerdo con lo que he dicho antes,

00:29.350 --> 00:31.440
simplemente podemos copiar todos estos

00:31.660 --> 00:34.530
componentes y agregarlos a la página.

00:34.590 --> 00:36.400
Así que comencemos con

00:36.580 --> 00:40.610
esto. Componente 'Hola' más y si recuerdas se veía así.

00:40.690 --> 00:43.430
Solo ... Sé que es triste,

00:43.780 --> 00:47.530
pero lo vamos a eliminar. Vamos a eliminar el

00:47.680 --> 00:49.810
'hola'. css

00:50.290 --> 00:52.090
"Comience limpio Así que

00:52.100 --> 00:54.830
voy a eliminar. OK Y

01:00.330 --> 01:03.810
también borraremos ‘hola. css "Sé que

01:03.850 --> 01:09.040
todo nuestro arduo trabajo desapareció por completo ¿Sabes

01:09.210 --> 01:12.420
qué? Vamos a comenzar a eliminar cosas que

01:12.420 --> 01:16.880
no necesitamos en este proyecto. Por ejemplo, la aplicación ‘. js 'que teníamos inicialmente?

01:16.890 --> 01:28.450
Bueno, podemos eliminar eso. También podemos eliminar ‘App. css ’‘ App.

01:32.370 --> 01:41.020
prueba "Y el logotipo está bien Así que todo se ve

01:41.050 --> 01:44.410
muy pequeño ahora Tenemos

01:44.470 --> 01:52.430
solo el índice". css ’,‘ índice. js "y este" Trabajador de servicio de registro "que

01:52.430 --> 01:54.620
viene con" Crear una aplicación de reacción

01:54.950 --> 02:00.940
"que no necesitamos tocar Aceptar. Obviamente no hemos podido compilar porque, bueno, las importaciones de "Hola" realmente no funcionan. Nosotros no tenemos

02:00.940 --> 02:03.970
nada. Comencemos con esto

02:03.990 --> 02:08.670
Comencemos creando un componente de "tarjeta" Y este componente de

02:10.330 --> 02:15.870
tarjeta, tendremos que importarlo desde "tarjeta". js 'Nuevamente, si guardo

02:15.940 --> 02:22.860
esto, sigo recibiendo un error porque no existe. Así que creémoslo,

02:22.990 --> 02:23.740
voy

02:23.770 --> 02:37.130
a decir "nuevo archivo", tarjeta. js ’. Nuevamente asegurándose de que esto esté usando "Babel". Y hagamos lo que hemos hecho

02:37.130 --> 02:38.870
antes. Importamos

02:42.180 --> 02:46.800
React desde 'react'. En lugar de hacer la clase

02:47.050 --> 02:51.520
por el momento, solo nos preocuparemos por construir

02:51.580 --> 02:57.440
la función, así que voy a decir 'const', 'Card' es igual:

02:57.440 --> 02:59.400
no tendrá ninguna

03:00.470 --> 03:05.490
propiedad por ahora Y esto volverá - tenga algunos corchetes

03:11.530 --> 03:21.110
Y dentro de aquí diremos que tiene un 'div'. Dentro de este "div", tendremos una imagen y esta imagen tendrá una

03:21.110 --> 03:26.180
especie de fuente que, aún no sabemos qué es, así que la mantendremos como

03:26.280 --> 03:29.840
está. Etiqueta de cierre. Y tendremos otro "div"

03:34.780 --> 03:35.500
que

03:35.520 --> 03:46.980
aquí, si recuerdas, tenemos nuestro nombre y correo electrónico aquí. Así que solo haremos un 'H2'. Solo escribiremos valores codificados aquí Haremos

03:46.990 --> 03:48.080
Jane

03:48.310 --> 03:51.890
Doe Y finalmente una etiqueta "p"

03:52.070 --> 04:01.090
que tenga alguna dirección de correo electrónico. Así que hagamos a Jane Doe en gmail dot com Cerrar

04:01.550 --> 04:03.970
la etiqueta Muy bien Así que

04:03.970 --> 04:07.530
solo tenemos un componente simple que devuelve 'tarjeta' Y

04:07.540 --> 04:10.950
recuerda que queremos exportar esto, así que queremos

04:10.960 --> 04:14.530
decir 'exportar', 'predeterminado', 'tarjeta' Guardar Obtengo 'los elementos img

04:17.370 --> 04:18.210
deben

04:18.490 --> 04:21.480
tener una propiedad alt'. De nuevo, me

04:21.630 --> 04:23.390
está dando una buena

04:23.400 --> 04:26.920
pista, así que agreguemos una propiedad 'alt'. Solo

04:26.970 --> 04:29.540
decimos qué es esta foto, así

04:29.640 --> 04:38.870
que diré 'foto' por ahora. O diré "robots" por ahora. Compilar con éxito. Si miramos hacia atrás a nuestra aplicación, tenemos

04:46.160 --> 04:52.850
los robots Jane Doe y Jane Doe. Perfecto

Bien. Tenemos el componente de la tarjeta y debe preguntarse por qué

04:52.850 --> 04:54.630
estamos usando React aquí si realmente no lo estamos

04:54.860 --> 04:56.510
usando. Veamos qué sucede si lo elimino.

04:58.130 --> 05:05.370
Obtengo un montón de errores que dicen 'React debe estar dentro del alcance cuando se usa JSX '. Recuerde que JSX es esto.

05:05.390 --> 05:07.810
No estamos escribiendo

05:07.910 --> 05:16.680
HTML, estamos escribiendo JSX y necesitamos importar React para que nuestro programa

05:16.740 --> 05:20.070
comprenda JSX. Esta sintaxis similar

05:20.300 --> 05:26.470
a HTML OK ahora necesitamos una imagen y para este ejercicio tengo

05:26.820 --> 05:29.100
algo llamado 'RoboHash' para ti.

05:29.100 --> 05:33.240
Es una API realmente genial. Y para aquellos

05:33.240 --> 05:35.350
que no saben qué

05:35.550 --> 05:45.180
son las API, no te preocupes, tengo una sección proponiendo toda esa información en la que aprenderás sobre ella. Pero

05:45.180 --> 05:47.420
lo bueno de RoboHash

05:47.460 --> 05:49.530
es que puedo decir

05:49.740 --> 05:59.130
cualquier cosa aquí y me devolverá un robot aleatorio. Todo lo que necesitamos es solo esta URL, y puedo

05:59.370 --> 06:05.840
solo di por ahora, 'prueba' Si guardo esto y vuelvo a mi ejemplo

06:06.020 --> 06:08.150
Ahí tienes Tenemos nuestro

06:08.450 --> 06:17.760
robot aleatorio Si cambié esto para decir 'prueba de prueba', guardo, bueno ahora obtengo otro robot Qué bueno es

06:17.780 --> 06:18.820
¿ese?

06:20.500 --> 06:27.610
Muy bien, um, quiero asegurarme de que el tamaño sea algo pequeño para que puedas hacer un signo de interrogación

06:27.610 --> 06:29.120
aquí y solo darle

06:29.200 --> 06:32.830
ancho y altura Así que solo voy a hacer 200 por

06:32.890 --> 06:36.150
200 Y nuevamente esto es algo que haces con

06:36.310 --> 06:40.950
esta URL que te dan en la información aquí, no haré que la

06:44.940 --> 06:47.520
revises, la guardo. Todo debería

06:49.020 --> 07:00.330
verse bien. Ahora digamos que quería agregar un título y haré algo como "div" o "H1", "RoboFriends" aquí. ¿Ves que recibo un

07:06.950 --> 07:08.240
error aquí?

07:08.390 --> 07:17.430
Es porque, recuerde que necesitamos devolver una cosa. Y no podemos devolver varios elementos, ¿verdad?

07:17.610 --> 07:21.540
Si queremos devolver algo, asegúrese de que sea una cosa

07:21.540 --> 07:25.520
o una matriz, pero por ahora nos preocuparemos por el

07:25.530 --> 07:29.640
título más adelante. Queremos asegurarnos de que solo devolvemos un elemento,

07:29.640 --> 07:35.680
por lo que en este caso ese elemento 'div' que tiene un montón de cosas dentro

07:35.690 --> 07:38.930
de las cuales está el componente 'tarjeta' Bien,

07:38.960 --> 07:41.720
vamos a guardar Bien Tenemos

07:41.720 --> 07:45.760
nuestro componente de tarjeta Se ve bien, pero ¿y si

07:45.760 --> 07:50.350
quisiera tener varias tarjetas ahora? De acuerdo con lo que sabemos, porque

07:50.360 --> 08:00.810
tenemos el componente de tarjeta Si voy a 'índice. js ’.. Solo puedo decir: he puesto esto en nuestra nueva

08:00.810 --> 08:09.080
línea para que pueda ver, puedo envolver esto en un "div". Nuevamente porque queremos devolver un solo elemento, y podría

08:12.090 --> 08:16.040
decir "tarjeta" "tarjeta" y cerrar la etiqueta "div"

08:18.650 --> 08:22.660
Guardar y ver eso. Ahora tenemos varias tarjetas.

08:22.650 --> 08:26.350
Cada una tiene su propio componente, pero agreguemos un

08:26.540 --> 08:32.420
poco de estilo para que se vea mejor. De nuevo, porque tenemos taquiones,

08:32.750 --> 08:39.290
podemos usar una sintaxis realmente agradable. Si vamos al componente de "tarjetas" dentro del div, puedo decir el

08:39.440 --> 08:40.310
nombre de

08:40.340 --> 08:45.180
"clase" nuevamente, recuerde que no podemos usar la clase. "BG", verde claro, así que es

08:45.200 --> 08:50.780
"fondo", "verde claro" y esto son solo clases de taquiones que ya están predefinidas para

08:50.780 --> 08:51.840
nosotros. Nuevamente,

08:52.060 --> 08:54.870
sección CSS: esto no es así, así que no nos

08:54.950 --> 09:00.260
vamos a centrar demasiado en CSS. Solo te daré los estilos que necesitas. Tenemos el div, el

09:00.260 --> 09:07.570
borde, tenemos un relleno de tres, muchos márgenes dos también Y luego hará "crecer", que

09:07.580 --> 09:10.060
es la animación Así que si

09:10.070 --> 09:16.510
guardo esto. Mira eso. Eso es.. eso es bastante bueno

09:19.210 --> 09:21.670
¿Sabes qué? Agreguemos algunos más. Haremos

09:21.820 --> 09:29.560
‘bw2’ y shadow 5 ’para agregarles un poco de sombras. Ahí tienes. Se ven más

09:30.010 --> 09:32.740
3D ahora. Eso se ve muy

09:32.740 --> 09:33.900
bien. Ahí

09:35.200 --> 09:37.400
tienes. Tenemos nuestras tarjetas.

09:37.420 --> 09:44.100
De nuevo, no queremos esta tarjeta estática donde dice Jane Doe Jane Doe Jane Doe queremos que sea dinámica ¿No?

09:44.100 --> 09:53.040
Por lo tanto, parece que necesitamos, lo que llamamos, "accesorios" - propiedades. Bueno, y en realidad tengo para ustedes un objeto de robots que he creado,

09:53.040 --> 09:53.920
así que

09:54.030 --> 10:01.140
solo voy a agregar un nuevo archivo aquí que dice ‘robots. js ’y aquí solo

10:01.140 --> 10:08.910
voy a copiar y pegar esto. Como puede ver, es solo un objeto constante, son

10:08.910 --> 10:16.420
robots, es una matriz de objetos y tiene ID, nombre, nombre de usuario, correo electrónico, y estos son

10:16.530 --> 10:21.440
aleatorios que he creado. Si desea este archivo, puede tomar los archivos

10:21.610 --> 10:26.300
desde el final de esta sección Pero por ahora de esta

10:26.410 --> 10:36.140
manera tengo algo que puedo usar y puedes ver que lo estoy exportando, puedo decir importar robots desde 'punto', porque estamos en el mismo

10:36.500 --> 10:39.000
directorio robots Ahora si guardo esto

10:39.060 --> 10:48.760
obtenemos 'robots definidos por nunca utilizados', pero debido a que está usando 'exportar' en lugar de 'exportar por defecto', este archivo podría tener múltiples

10:48.790 --> 10:52.630
exportaciones. Simplemente sucede que solo tengo uno. La regla

10:52.690 --> 10:54.620
es, para estos porque

10:54.880 --> 11:01.960
hay por defecto, bueno, solo puedes hacer 'tarjeta'. Para los que no son predeterminados, debe

11:01.960 --> 11:02.650
desestructurarlo.

11:02.740 --> 11:05.530
Así es así. Si tengo otra

11:05.680 --> 11:07.020
variable, digamos,

11:07.030 --> 11:14.930
que dice 'gatos', entonces tendré que hacer 'gatos' para agarrarla. Entonces tenemos robots y ahora tengo

11:16.220 --> 11:21.930
puedo darle algunas propiedades. Puedo decir que 'id' es igual. Y nuevamente

11:21.940 --> 11:24.340
tenemos estos corchetes para

11:24.370 --> 11:33.130
que sea una expresión de JavaScript y diremos 'robots'. Primer

11:34.570 --> 11:44.070
conjunto de "robots" dot 'id' tiene la ID, luego tenemos el nombre

11:44.150 --> 11:58.340
igual a los robots nuevamente, el primer nombre del punto del usuario, cierra el corchete, y luego también tenemos el correo electrónico igual a los robots primero en

11:58.340 --> 12:03.400
la matriz, el correo electrónico de puntos Santo Moly que

12:03.440 --> 12:10.140
es mucho escribir. Y voy a hacer esto más pequeño para que lo veas. Voy a copiar

12:10.140 --> 12:15.580
y pegar para los otros también a excepción de ...

12:15.660 --> 12:23.150
cambie esto al segundo usuario y luego al

12:23.220 --> 12:31.560
tercer uso: ¡Vaya! el segundo usuario Ahora, si guardo esto,

12:31.800 --> 12:39.750
se compila correctamente, pero nada ha cambiado porque tenemos que ir a las tarjetas.

12:39.810 --> 12:47.070
Voy a cerrar ‘robots. js ’por ahora. ¿Porque las tarjetas ahora deben aceptar parámetros y cuáles son

12:47.070 --> 12:47.810
los parámetros?

12:47.820 --> 13:05.620
Bueno, son propiedades. Y estos accesorios ahora son nombre de punto de utilería, y los accesorios de correo

13:05.780 --> 13:08.650
electrónico de punto lo guardo,

13:08.840 --> 13:13.340
regresa Hmm. No funciona. Bueno, porque esta es una expresión de

13:13.400 --> 13:13.950
JavaScript ¿verdad?

13:13.970 --> 13:18.050
Así que necesito envolverlo entre llaves. Justo como

13:18.820 --> 13:23.680
funciona en JSX. Guardar Mire eso Tenemos nombres

13:23.750 --> 13:29.840
dinámicos que pasamos como propiedades a cada uno. Agreguemos "centro de texto"

13:30.000 --> 13:31.950
aquí y allá. Ahora

13:33.800 --> 13:34.630
tenemos

13:34.670 --> 13:35.890
todo centrado.

13:35.960 --> 13:38.490
Eso es mucho mejor. OK

13:38.500 --> 13:42.210
Pero también pasamos ID. Podemos usar ID

13:42.250 --> 13:50.500
para hacer algo genial Si recuerdas que en la sección ESX tenemos cadenas de plantillas y debido a que esta es

13:50.500 --> 13:55.020
una cadena de plantillas, tenemos que envolverla en un paréntesis para que

13:55.360 --> 14:02.780
sea una expresión de JavaScript Y ahora dentro de RoboHash, en lugar de usar test aquí podemos aleatorizar qué

14:02.920 --> 14:05.310
robots obtenemos usando la sintaxis como

14:05.500 --> 14:08.790
la recuerdas y aquí solo podemos decir accesorios

14:08.920 --> 14:16.000
ID de punto Así que ahora esto dirá RoboHash. org, ID de lo que sea que sea para el robot

14:16.000 --> 14:20.200
con el sitio. Por lo tanto, nos aseguramos de que nuevamente los ID sean

14:20.200 --> 14:29.010
siempre dinámicos y cambiantes. Si guardo esto y vuelvo. Mira eso. Usted ve que hay un poco de retraso nuevamente porque estamos hablando

14:29.010 --> 14:31.440
con la API y la API nos está devolviendo

14:31.440 --> 14:33.800
la respuesta, pero ¿qué tan genial es eso?

14:33.810 --> 14:39.350
Acabamos de crear nuestras propias tarjetas dinámicas.

14:39.380 --> 14:46.120
Una última cosa. Aunque esto funciona, algo más agradable que puedes hacer es

14:46.370 --> 14:48.500
que tenemos algo llamado desestructuración.

14:50.940 --> 14:57.730
Podemos hacer algo como el nombre "constante". correo electrónico.. es igual a 'accesorios', nuevamente

14:57.820 --> 15:05.470
como recordarán del E6, y ahora también puedo usar 'ID' externo y todavía funciona Otra cosa genial que puedes

15:11.280 --> 15:12.430
hacer y

15:14.240 --> 15:21.160
esto es aún más limpio es, dentro de los parámetros que puedes hacer, desestructurando de nuevo puede

15:21.620 --> 15:23.840
agregarlos aquí ahora. Y ahora,

15:28.740 --> 15:34.790
si lo guardo, aún debería funcionar y funciona. Esto puede ser confuso si es

15:34.990 --> 15:42.070
nuevo en la desestructuración, pero como vio paso a paso, solo estamos recibiendo accesorios y estamos desestructurando

15:42.070 --> 15:46.260
los accesorios. justo dentro de los corchetes aquí. Esto es

15:47.460 --> 15:50.440
mucho más limpio. Muy bien. Fue muy

15:50.760 --> 15:51.450
divertido

15:51.450 --> 15:54.210
de una manera realmente rápida. Acabamos de

15:54.210 --> 15:57.960
crear nuestras propias tarjetas. En la siguiente sección vamos a

15:57.990 --> 16:01.120
ampliar esto y hacer que esto sea aún mejor. Nos vemos

16:01.200 --> 16:02.820
en ese. Adiós
