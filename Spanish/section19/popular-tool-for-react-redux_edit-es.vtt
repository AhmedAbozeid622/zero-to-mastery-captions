WEBVTT

00:01.280 --> 00:02.510
Dar una buena acogida.

00:02.750 --> 00:08.870
Quiero tomar un video para repasar algo que pueda hacer tropezar a muchas personas cuando recién comienzan

00:08.870 --> 00:19.830
apagado con Reaccionar Recuerde, React es solo una biblioteca de capas de vista. Por lo tanto, React solo te permite construir componentes

00:19.920 --> 00:29.720
interfaces de usuario impulsadas. Y tiene algunas soluciones, como su propia administración estatal local, y un simple

00:29.720 --> 00:34.040
Manera de manejar eventos para hacer que las interacciones en nuestro sitio web sucedan.

00:35.440 --> 00:40.110
Pero al final del día, es una biblioteca simple que ayuda con la vista.

00:40.360 --> 00:48.430
Una vez que comience a crear aplicaciones a gran escala, debe agregar encima de Reaccionar.

00:48.700 --> 00:55.630
El poder de React proviene de esta capacidad de agregar nuevas funciones, nuevas bibliotecas. A fin de que

00:55.630 --> 00:59.520
personalícelo, a su gusto con su propia aplicación.

00:59.660 --> 01:08.270
Por lo tanto, a medida que crecen las aplicaciones o comienzas a trabajar para una empresa grande, verás que usan otras herramientas

01:08.360 --> 01:14.810
encima de React. Y quería ir más rápido, algunos de los que son los más comunes, comunes para ver

01:14.810 --> 01:16.270
allí afuera.

01:16.300 --> 01:20.710
Primero tenemos 'REACT ROUTER' y eso es para el enrutamiento.

01:20.890 --> 01:29.080
Cambiando páginas y cambiando rutas en nuestra url, es prácticamente el estándar cuando se trata de cualquier Reaccionar y

01:29.080 --> 01:30.190
Proyecto Redux.

01:30.520 --> 01:32.930
Muy recomendado.

01:33.100 --> 01:35.010
Muy fácil de usar

01:35.320 --> 01:36.650
Muy fácil de aprender también.

01:36.700 --> 01:39.640
Te tomará un día y puedes elegirlo con bastante facilidad.

01:41.160 --> 01:49.650
También tiene cosas como bibliotecas de utilidades. Y estas son bibliotecas que se agregan al javascript actual

01:49.770 --> 01:52.440
herramientas, que obtienes de la caja.

01:52.440 --> 01:56.740
Así que piense en ello como funciones añadidas a javascript.

01:56.950 --> 01:58.720
Los más populares son 'Ramda'.

01:58.810 --> 02:06.080
Si realmente quieres mantener la ideología de programación funcional, una biblioteca realmente buena. Y ahí está

02:06.100 --> 02:16.690
también el más popular 'Lo dash', que nuevamente te brinda herramientas adicionales que puedes usar con javascript. Tu también

02:16.820 --> 02:20.570
quiero pensar sobre el estilo con React.

02:20.630 --> 02:27.380
Y nuevamente, hay una serie de herramientas que la gente usa para diseñar. Hay 'glamour' que realmente realmente

02:27.380 --> 02:28.170
me gusta.

02:28.250 --> 02:35.480
Hay 'componentes estilo' que de nuevo es muy bonito, y bastante similar a 'glamoroso'.

02:35.570 --> 02:38.520
Y luego hay cosas como 'módulos CSS'.

02:38.630 --> 02:46.490
Digamos, estos tres son probablemente los mejores para usar, si quiere abordar una forma más inteligente de lidiar con

02:46.580 --> 02:47.830
estilos en React.

02:47.870 --> 02:50.300
Y nuevamente, estos son bastante fáciles de recoger.

02:50.300 --> 02:52.720
Puedes pasar un día con ellos y dominarlo.

02:53.860 --> 02:57.490
Luego, tenemos algo llamado 'gatsby dot js (gatsbyjs)'.

02:58.060 --> 03:02.980
Y esto es realmente bueno para sitios web estáticos en React.

03:02.980 --> 03:06.340
Así que eso es solo sitios web basados ​​en texto.

03:06.460 --> 03:08.920
En realidad, si vas a la documentación de React,

03:18.840 --> 03:28.110
su documentación se sirve con 'gatsby dot js (gatsbyjs)', porque están basados ​​en texto simple

03:28.860 --> 03:29.640
páginas.

03:29.760 --> 03:31.310
Eso funciona realmente muy bien.

03:33.430 --> 03:35.710
Luego también está 'Siguiente

03:35.750 --> 03:41.510
dot js ', extremadamente popular para aplicaciones renderizadas del lado del servidor.

03:41.740 --> 03:45.490
Y eso es algo de lo que hablaremos cuando lleguemos a la sección del lado del servidor. Y lo haremos

03:45.490 --> 03:52.330
crea una aplicación simple 'Next.js'. Pero muy popular y lo recomiendo mucho si estás construyendo algo

03:52.330 --> 04:00.040
lado del servidor. Probablemente, después de lo que React es conocido, y acabo de elegir dos opciones aquí, pero hay

04:00.040 --> 04:01.230
tantos por ahí.

04:01.230 --> 04:05.920
Reaccionar es realmente bueno porque podemos construir componentes reutilizables.

04:05.970 --> 04:12.270
Entonces, si construyo un componente de calendario realmente genial, puedo ponerlo en línea y otras personas pueden simplemente agarrarlo

04:12.270 --> 04:15.800
componente, y usarlo en sus proyectos también.

04:16.770 --> 04:23.610
De modo que algunos de los más grandes son componentes 'materiales', 'material ui', que nuevamente puedes usar.

04:23.820 --> 04:33.940
Y también está la biblioteca 'semántica ui' que tiene una tonelada de componentes React que puedes usar.

04:34.050 --> 04:41.760
Una vez más, otra razón impresionante para usar React es, estos componentes que las personas comparten. Y solo puedes agregar

04:41.760 --> 04:44.510
en tu sitio web

04:44.670 --> 04:49.810
Y finalmente, hay herramientas que hacen que Redux sea mejor y más eficiente.

04:49.980 --> 04:56.310
Tienes cosas como, 'reseleccionar', que verás en la mayoría de los proyectos de Redux que ayudan con algo llamado

04:56.310 --> 05:01.620
selectores y mejorar el rendimiento de sus aplicaciones.

05:01.650 --> 05:09.240
También tiene cosas como 'Redux-Saga', que maneja acciones asíncronas en Redux.

05:09.240 --> 05:16.080
Por lo tanto, piense en ello como redux-thunk pero sobrealimentado. Así que a medida que las cosas se vuelven más y más complejas, tienes

05:16.080 --> 05:18.510
más y más acciones asincrónicas,

05:18.510 --> 05:23.040
es posible que desee comenzar a ver cosas como 'Redux Saga'.

05:23.040 --> 05:25.840
Es un poco complicado aprenderlo primero.

05:26.100 --> 05:28.500
Y, hay personas que lo aman y lo odian.

05:28.500 --> 05:32.650
Pero definitivamente algo que intenta resolver el problema de

05:32.670 --> 05:36.200
¿Qué hacemos cuando comenzamos a obtener aplicaciones más grandes y más grandes?

05:36.510 --> 05:43.950
Y luego, también tiene algo así como 'INMUTABLE' js, que puede usar como biblioteca para asegurarse de que

05:43.950 --> 05:49.260
su estado permanece inmutable y lo aplica entre sus equipos de desarrolladores.

05:50.300 --> 05:57.310
Ahora, no espero que conozca cada uno de estos, y use cada uno de estos en sus proyectos.

05:58.420 --> 06:04.510
Como cuestión de hecho, quiero advertirles en contra de ellos. Y cada vez que agregas algo, pregúntate, hazlo

06:04.510 --> 06:05.710
¿Lo necesito de verdad?

06:05.710 --> 06:08.390
¿Cuál es el beneficio que estoy obteniendo de esto?

06:09.640 --> 06:17.020
Como agregar cualquier biblioteca a nuestro proyecto, agrega un peso extra, agrega javascript adicional que necesitamos entregar

06:17.020 --> 06:17.960
al cliente.

06:18.340 --> 06:26.140
Entonces, si agrega alguna de estas cosas, asegúrese de tener una razón justificable que realmente mejore

06:26.230 --> 06:29.370
el valor de tu producto

06:30.290 --> 06:32.820
Y también ayuda con el desarrollo.

06:32.840 --> 06:38.930
Entonces, cuando piense en el valor, no solo piense que los clientes y usuarios también piensan en los equipos de desarrollo y

06:38.930 --> 06:44.970
personas con las que trabajas ¿Se beneficiarán si agrega js 'INMUTABLES' a su base de código?

06:45.260 --> 06:52.730
O bien, es la curva de aprendizaje adicional y la frustración que, que los desarrolladores podrían tener mediante el uso de 'INMUTABLE', vale la pena

06:53.060 --> 06:57.170
las salvaguardas que podría agregar a su proyecto.

06:58.010 --> 07:05.780
Pero de todos modos, quería enfatizar que, como desarrollador sénior, siempre considere los pros y los contras, independientemente de si

07:05.780 --> 07:13.940
necesita algo y si necesita algo, realmente analice, cuál es la mejor herramienta para el trabajo.

07:13.940 --> 07:15.280
Siento que he roto un disco.

07:15.290 --> 07:22.700
Lo he dicho muchas veces, pero es un concepto realmente importante. Así que no agreguen 'jm' INMUTABLE porque

07:22.880 --> 07:26.470
lo leíste en una publicación de blog, entonces todos están entusiasmados con eso.

07:26.480 --> 07:32.480
Cada proyecto es diferente, por lo que debe ser capaz de tomar esas decisiones por usted mismo, por su proyecto

07:32.510 --> 07:33.940
para tu equipo de desarrolladores

07:35.690 --> 07:40.100
De acuerdo, ya basta de hablar de mí, te veré en el próximo. Adiós