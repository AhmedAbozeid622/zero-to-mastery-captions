WEBVTT

00:00.620 --> 00:01.370
Dar una buena acogida.

00:02.230 --> 00:08.970
Acabo de poner nuestro proyecto robo friends en GitHub pero digamos que estás descargando este proyecto.

00:09.110 --> 00:15.950
Quizás esté compartiendo un proyecto con otros desarrolladores, pero este proyecto, digamos, fue escrito el año pasado.

00:15.950 --> 00:21.500
¿Cómo podemos actualizar este proyecto si recuerdas cuando miramos el paquete?

00:21.500 --> 00:23.090
Dot Jason File.

00:23.090 --> 00:30.020
Tenemos la versión de reacción como dieciséis punto dos, pero la versión de reacción ahora es más alta.

00:30.020 --> 00:35.750
Así que vamos a actualizar este proyecto como lo haría en cualquier otro proyecto.

00:35.750 --> 00:39.670
Voy a clonar este repositorio y voy a usar SS H.

00:39.710 --> 00:46.260
Es posible que tenga que usar HDP s si no ha tenido esa configuración, pero voy a usar SSA solo para no

00:46.260 --> 00:48.500
tener que ingresar mi contraseña cada vez.

00:48.750 --> 00:56.820
Así que voy a clonar este repositorio, por ejemplo, obtener clon robo amigos increíbles.

00:56.860 --> 01:03.600
Ahora si entro en mi carpeta de amigos robo y abro esto y sublime.

01:03.670 --> 01:05.120
Aquí vamos.

01:05.170 --> 01:09.620
Tenemos nuestro paquete dot Jason File que podemos ver aquí.

01:09.670 --> 01:13.650
Ahora, cuando suelo descargar un proyecto, quiero asegurarme de que comience.

01:13.650 --> 01:20.990
Así que voy a decir NPM start y asegurarme de que todo sigue funcionando y obtengo un error porque primero

01:20.990 --> 01:23.270
tengo que hacer npm install Oh

01:27.910 --> 01:28.460
boy.

01:28.600 --> 01:36.730
Y recibimos un montón de errores o advertencias que dicen que hemos auditado algunos de sus paquetes y que hay

01:36.730 --> 01:37.720
algunas vulnerabilidades.

01:37.780 --> 01:38.820
En realidad bastante.

01:38.830 --> 01:49.170
Y dos críticos, y podemos ejecutar la corrección de auditoría de NPM para solucionar el problema, así que copiemos eso y volvamos a

01:55.110 --> 02:01.130
ejecutarlo, y ahora tengo otro problema de que veintisiete vulnerabilidades requieren revisión manual.

02:01.740 --> 02:07.140
Y ves aquí que, principalmente porque algunos de ellos requieren lo que llamamos cambios de última hora,

02:07.230 --> 02:08.850
podría dañar nuestra aplicación.

02:08.850 --> 02:16.660
Y esta es la compensación al actualizar las bibliotecas que está utilizando una versión anterior de una biblioteca que puede haber

02:16.660 --> 02:24.470
cambiado y ahora rompe su aplicación por completo, por lo que a veces desea ir una por una para verificar

02:24.890 --> 02:28.670
y ver cuáles son los cambios en estas bibliotecas.

02:28.670 --> 02:31.400
Ahora, si ejecuto NPM

02:35.160 --> 02:42.550
trazarlo aquí, en realidad me dará una idea de cuáles son mis problemas ahora.

02:42.690 --> 02:54.520
Antes de hacer la corrección de auditoría de NPM y luego aplicar la fuerza del guión del guión para forzar todos esos cambios, quiero hablar un poco sobre este paquete

02:54.520 --> 02:56.530
en el que Jason

02:59.670 --> 03:07.800
ve que los scripts de reacción, que es el script de creación de aplicación de reacción que se ejecuta, está desactualizado.

03:07.800 --> 03:14.800
Hay una forma más alta de las secuencias de comandos React. Una versión más grande de la creación de la CIA reacciona.

03:15.000 --> 03:17.190
Y lo mismo con reaccionar.

03:17.190 --> 03:26.540
Entonces, una cosa que puedo hacer es decir la actualización de NPM y si ejecuto esto y cuando hago clic en este archivo,

03:27.930 --> 03:29.060
lo veo.

03:29.340 --> 03:38.820
Mi versión se actualizó ahora y p. metro. Actualizo lo que hace es que mira esta versión y

03:38.820 --> 03:44.790
dice ¿Cuál es la versión más alta a la que puedo actualizar en mi caso porque uso esa tarjeta?

03:44.790 --> 03:51.970
Decía, oye, puedes actualizar a la versión más alta en la versión menor.

03:52.050 --> 03:59.960
Entonces, si hubiera una versión de reacción 17 bien, esto no se actualizaría a 17 porque estamos usando la zanahoria.

03:59.970 --> 04:10.150
Recuerde que podemos usar más de lo que quisiéramos, pero de esta manera nos aseguramos de actualizar solo lo que sea que esté en

04:10.150 --> 04:14.690
la versión menor que tiende a no tener cambios importantes.

04:14.740 --> 04:19.610
Por ejemplo, cuando reaccionamos 17, lo más probable es que tenga algunos cambios importantes.

04:19.720 --> 04:19.960
Bueno.

04:19.990 --> 04:29.120
Por lo tanto, tenemos la versión de reacción actualizada, pero aún tenemos estas vulnerabilidades que debemos corregir. Ejecutemos ahora

04:29.120 --> 04:36.680
la corrección de auditoría y supongamos que hemos analizado los cambios y asumimos que está

04:36.710 --> 04:38.990
bien, todo debería funcionar.

04:39.290 --> 04:45.080
Así que voy a ejecutar esto y nuevamente tenga en cuenta que cuando use la fuerza desea

04:45.080 --> 04:47.520
asegurarse de que realmente revise las actualizaciones.

04:47.540 --> 04:53.290
Ahora, mientras esto sucede, otra cosa que podría haber hecho con reaccionar

04:53.310 --> 05:01.340
fue ir al sitio web de reaccionar y comprobar la versión real y, en lugar de preocuparme o hacer

05:01.430 --> 05:09.800
la actualización de NPM, podría cambiar la versión, digamos que sale la versión 17 reaccionar diecisiete punto cero punto dos.

05:09.890 --> 05:16.160
Bueno, solo puedo cambiar eso y empaquetar que Jason y ejecutar npm

05:19.150 --> 05:21.370
install nuevamente aclaremos esto.

05:21.370 --> 05:28.310
Vemos aquí que nuestro script ReACT ahora se actualiza a la versión tres, punto dos.

05:28.330 --> 05:31.460
Esa es la última versión de create react.

05:31.840 --> 05:32.850
Eso es genial.

05:32.920 --> 05:40.020
Si hago una auditoría de NPM una vez más, tengo cero vulnerabilidades.

05:40.020 --> 05:40.470
Todo bien.

05:40.470 --> 05:45.290
Parece que todo se ve bien, pero tenemos un problema correcto.

05:45.310 --> 05:48.540
Hemos actualizado todo lo que tenemos.

05:48.540 --> 05:57.770
No hay vulnerabilidades, pero debido a que hemos actualizado todas estas cosas, nuestro proyecto seguirá funcionando mientras haya una forma

05:57.770 --> 05:58.910
de averiguarlo.

05:59.120 --> 06:03.090
Comencemos con NPM.

06:03.110 --> 06:03.770
Todo bien.

06:03.800 --> 06:11.910
La nueva aplicación create react me solicitó un navegador de destino, así que haré clic en yes aquí y lo miraré.

06:11.920 --> 06:14.710
Parece que las cosas siguen funcionando.

06:14.710 --> 06:16.090
Buen trabajo robo amigos.

06:16.090 --> 06:21.460
Si abro las herramientas de desarrollador y voy a la consola, no hay errores.

06:21.520 --> 06:30.570
Eso es genial, así que solo pude actualizar mi proyecto, actualizar mi proyecto con las últimas reacciones, todas las últimas

06:31.320 --> 06:38.470
reacciones en los scripts de reacción, que es lo que utiliza la aplicación crear reacción.

06:38.700 --> 06:43.860
También tenemos hilos TAC actualizados y todo funciona bien.

06:45.080 --> 06:50.810
Así que ahora puedo impulsar este cambio para obtener el centro para que no tengamos esas advertencias de seguridad.

06:50.810 --> 06:51.890
Vamos a hacer eso.

06:51.890 --> 06:57.280
Voy a decir get ad get commit.

06:57.510 --> 07:07.590
Diré que se corrigieron los problemas de seguridad de las bibliotecas actualizadas para obtener el maestro

07:10.400 --> 07:20.770
de origen de envío porque, aunque soy el único en este proyecto, puedo enviarlo a Max, señor.

07:20.930 --> 07:32.030
Ahora, si vuelvo a mi página de github y actualizo, revisemos la pestaña de seguridad y veamos que

07:32.030 --> 07:40.410
tenemos cero cerrado cero abierto porque nuestro proyecto ahora está completamente actualizado.

07:40.440 --> 07:42.380
Cuan genial es eso.

07:42.420 --> 07:49.590
Esta es una excelente manera de mantener actualizados sus proyectos y corregir las vulnerabilidades de seguridad.

07:49.890 --> 07:57.750
Pero cuantas más bibliotecas tenga, más dependencias tendrá, más mantenimiento tendrá que hacer para asegurarse de

07:57.750 --> 08:04.380
que cada vez que actualice una biblioteca que no rompa su aplicación.

08:04.380 --> 08:10.920
Nuestra aplicación robo friends era bastante pequeña, pero puedes imaginar que esto es un problema cada vez mayor a medida que las aplicaciones

08:10.980 --> 08:11.290
crecen.

08:11.940 --> 08:17.550
Pero espero que hayas aprendido un pequeño truco que me llevó mucho tiempo aprender y mi carrera

08:17.550 --> 08:18.300
de desarrollador.

08:18.390 --> 08:26.400
Esa es la forma más fácil de mantener sus proyectos actualizados y seguros es simplemente actualizar el paquete.

08:26.530 --> 08:27.690
En archivo.

08:27.930 --> 08:29.520
Ya veré en la próxima.
