WEBVTT

00:00.960 --> 00:09.500
Dar una buena acogida. Intentemos que funcione esta solicitud 'post', que no pudimos obtener en el video anterior.

00:09.740 --> 00:16.100
Ahora, para que podamos probar algo más que solo GET, podemos usar la Terminal pero hay una

00:16.100 --> 00:21.570
realmente es una buena herramienta que nos permite hacer estas solicitudes a un servidor y ver lo que recibimos.

00:21.920 --> 00:25.690
Y se llama Cartero.

00:25.790 --> 00:33.620
Si vas a www.getpostman.com, es una de las mejores herramientas si alguna vez trabajas

00:33.620 --> 00:34.310
con un servidor

00:34.310 --> 00:38.910
Es gratis y puedes descargarlo para tu sistema operativo.

00:39.080 --> 00:42.320
Simplemente haga clic en el que desee.

00:42.320 --> 00:49.180
Regístrese y una vez que esté cargado, puede abrirlo y tendrá algo como esto.

00:50.330 --> 00:53.040
Y no te preocupes, es muy, muy simple de usar.

00:53.120 --> 00:58.150
Simplemente tenemos aquí las solicitudes que queremos obtener.

00:58.190 --> 01:02.030
Y verá algunos que nunca ha visto antes y no se preocupe por ellos.

01:02.030 --> 01:04.970
Estos son muy raramente usados.

01:04.970 --> 01:08.810
Vemos los que nos importan ELIMINAR, PONER, PUBLICAR, CONSEGUIR ahí

01:11.640 --> 01:15.630
y simplemente ingrese la URL en la que desea que se ejecute.

01:16.110 --> 01:19.130
Entonces, en nuestro ejemplo, hagamos 'npm start' nuevamente.

01:20.850 --> 01:25.370
Y mientras el servidor se está ejecutando, vamos a '/ profile'.

01:25.620 --> 01:34.720
Y luego aquí queremos decir 'localhost:3000' - ese es el puerto que le dimos - y diremos

01:34.760 --> 01:36.320
'/perfil'

01:36.420 --> 01:38.460
Entonces, queremos hacer una solicitud GET aquí.

01:38.520 --> 01:50.500
Si hago clic en enviar obtengo 'obtención de perfil'. Me da los encabezados y el cuerpo, que es genial, pero ahora porque

01:50.500 --> 01:54.110
tenemos esta herramienta, también podemos hacer una solicitud POST.

01:54.190 --> 01:59.250
Entonces, digamos que ya no estamos enviando el 'usuario'.

01:59.740 --> 02:02.820
Queremos enviar una respuesta [res].

02:05.590 --> 02:10.790
Y a partir de esta respuesta, queremos devolver cualquier usuario que enviemos a '/ profile'.

02:14.060 --> 02:14.960
Comencemos aquí, primero.

02:14.960 --> 02:19.960
Vamos a cambiar esto a un POST y con un POST

02:20.090 --> 02:26.780
recuerda que realmente podemos agregar cosas al cuerpo y ves aquí que hay un par de

02:26.900 --> 02:37.800
opciones:'form-data', 'the-x-www-form-urlencoded' tenemos 'raw' y luego 'binary'.

02:37.850 --> 02:39.160
Ahora no dejes que esto te asuste.

02:39.170 --> 02:43.390
Estos dos son formularios a través de HTML.

02:43.460 --> 02:51.230
Si normalmente hace una etiqueta de formulario HTML y hace una solicitud GET o POST, puede hacer clic en esto y en

02:51.230 --> 02:58.620
puede ver aquí 'Valor clave' así que puedo decir que el nombre es igual a 'andrei'.

02:58.710 --> 03:09.330
Y ahora cuando envío esto consigo 'Sally' y 'soccer' bien porque bueno, no he guardado esto aún, vamos a

03:09.330 --> 03:18.050
Regresemos a lo que teníamos antes y enviemos nuevamente que vemos que la solicitud POST está funcionando.

03:18.150 --> 03:22.650
Y si quiero acceder a esta información simplemente lo hago

03:27.150 --> 03:29.520
'(req.body)'

03:29.860 --> 03:31.960
Pero veamos si esto funciona.

03:32.260 --> 03:33.190
Si hago clic en enviar

03:37.590 --> 03:45.230
Hmm, estoy 'indefinido' y eso es porque Express solo te da un poco.

03:45.270 --> 03:48.470
Aún necesita algunos paquetes si quiere que esto funcione.

03:48.630 --> 03:58.200
Si alguna vez quiere acceder a '(req.body)', necesita usar un middleware y el middleware que

03:58.200 --> 04:03.900
queremos que se llame body-parser y lo usarás y la mayoría de los servidores Express, así que solo te acostumbrarás

04:03.900 --> 04:04.470
lo.

04:04.470 --> 04:09.110
Es 'npm install body-parser'.

04:09.360 --> 04:14.970
Y ahora este analizador de cuerpo lo que va a hacer es tomar cualquier información que recibamos

04:15.510 --> 04:26.440
y analizarlo como JSON o formas en algo que podamos usar. Para usarlo realmente

04:27.400 --> 04:32.080
bueno, sabemos cómo funciona el middleware, simplemente en la parte superior decimos 'app.use ()'

04:35.320 --> 04:48.540
y analizador corporal vendrá con un 'bodyParser' que solo necesitaremos con el paquete que acabamos de

04:48.540 --> 04:48.960
instalado

04:53.740 --> 04:59.010
En 'app.use ()' simplemente hacemos

04:59.040 --> 05:01.040
'bodyParser.urlencoded'

05:02.450 --> 05:06.880
Que es cómo podemos obtener esto ['x-www-form-urlencoded'].

05:07.040 --> 05:12.290
Y solo tenemos que pasarle un parámetro:{extended:false}.

05:12.360 --> 05:13.150
Probemos eso de nuevo.

05:13.200 --> 05:13.970
Voy a guardar

05:17.200 --> 05:24.470
haremos 'npm start' si volvemos y enviamos de nuevo.

05:24.640 --> 05:25.440
Vemos eso.

05:25.480 --> 05:26.940
Ahí lo tienes, está funcionando.

05:26.940 --> 05:33.940
{name:'andrei'} porque hemos enviado nuestro 'Valor clave' con los datos del formulario.

05:34.010 --> 05:40.620
Entonces, si estás creando un servidor para un formulario que se envía, lo usarás.

05:40.770 --> 05:47.970
Pero como saben, también hay JSON que podemos usar y la forma en que usamos JSON es hacer clic en 'raw' y

05:47.970 --> 05:57.000
aquí podemos enviar lo que queramos; en nuestro caso va a ser JSON, y con JSON podemos

05:57.000 --> 06:06.590
ahora di lo que queremos enviar, y si alguna vez hacemos una sintaxis incorrecta, nos dirá que JSON está equivocado.

06:06.780 --> 06:14.290
Pero digamos que para el '/ profile' quiero agregar un nuevo usuario y se llamará a este usuario - recuerda

06:14.290 --> 06:20.810
comillas dobles aquí - tendremos "usuario" y este usuario se llamará "Jenny"

06:24.540 --> 06:28.860
y "Jenny" tendrá un hobby de "tenis"

06:36.550 --> 06:37.590
Todo se ve bien.

06:37.600 --> 06:40.540
Eso es JSON. Si ahora envío esto

06:45.660 --> 06:54.600
Obtengo un objeto vacío. Una vez más, porque solo le hemos dicho que analice las necesidades del analizador de cuerpo 'urlencoded'

06:54.600 --> 07:06.020
para saber también sobre JSON. Nuevamente para hacer eso, decimos 'app.use (bodyParser.json ())'

07:06.020 --> 07:06.740
Si guardamos eso

07:09.380 --> 07:18.510
y enviar de nuevo - mira eso - tenemos {usuario:'Jenny', hobby:'tenis'}.

07:18.590 --> 07:28.590
Entonces ahora podemos agregar a ese usuario añadiéndolo a nuestra base de datos y luego enviando una respuesta 'Éxito'

07:31.800 --> 07:33.500
Probemos eso de nuevo.

07:33.690 --> 07:41.340
Recibimos una respuesta 'Éxito' de que hemos publicado "Jenny" "tenis" de esta manera también podemos hacer PUT, que es muy

07:41.340 --> 07:48.180
similar, simplemente enviamos los datos pero PUT se utiliza para actualizar si queremos actualizar tal vez Jenny para tener

07:48.180 --> 07:56.420
un pasatiempo diferente y ELIMINAR para eliminar tal vez a ese usuario, algo que abordaremos en el siguiente video.

07:56.490 --> 07:58.730
Pero como pueden ver, Postman es genial.

07:58.860 --> 08:03.810
Es una excelente manera de probar su servidor antes de conectarlo a su interfaz, algo que haremos

08:03.810 --> 08:08.600
definitivamente lo hacemos en este curso en nuestro proyecto final.

08:08.600 --> 08:09.950
Muy genial.

08:10.010 --> 08:11.510
Te veré en el próximo.

08:11.520 --> 08:12.300
Adiós.
