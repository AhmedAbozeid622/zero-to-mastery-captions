WEBVTT

00:00.910 --> 00:01.580
Dar una buena acogida.

00:01.630 --> 00:07.860
En este video, quiero hablar sobre los tres tipos de módulos que puedes tener en Node.

00:07.960 --> 00:14.670
Hemos visto que tenemos este tipo que ya conocemos y que es un módulo que usted mismo crea

00:14.710 --> 00:23.770
como 'script2' y tiene sus exportaciones de módulos y usted le da la ruta al archivo para que pueda encontrarlo.

00:23.790 --> 00:33.910
También hay algo llamado 'módulos incorporados' y los módulos integrados son módulos que ya vienen preinstalados

00:33.910 --> 00:34.780
con Nodo.

00:35.170 --> 00:43.750
Por ejemplo, uno de los más populares es el módulo 'fs' y este módulo, si el registro de la consola

00:48.660 --> 00:52.930
[console.log (c)] es un módulo con un montón de cosas una vez más.

00:53.250 --> 00:56.030
Pero le permite leer el sistema de archivos.

00:56.130 --> 01:04.790
Es decir, si tenía un archivo de texto y quería leer el archivo de texto y extraer cuántos

01:04.790 --> 01:12.830
veces se dijo la palabra 'hola', bueno, puedes escribir eso simplemente usando el módulo del sistema de archivos y usando

01:13.490 --> 01:24.610
algo como 'readFile:' o 'readFileSync:' que saldrá - haz algo como 'readFile' - saldrá

01:24.760 --> 01:28.480
el contenido del archivo y luego puedes hacer lo que quieras con él.

01:29.280 --> 01:39.180
Otro popular es el módulo HTTP que, como puede adivinar, es el módulo que usaremos más adelante para

01:39.180 --> 01:45.730
construir un servidor Y puede leer todos estos módulos, pero esos dos son probablemente los más populares.

01:45.730 --> 01:56.020
En nuestro caso como desarrolladores web, estamos realmente preocupados con el HTTP, estos módulos están sin el

01:57.240 --> 02:00.260
'ruta' - simplemente son exactamente así [['http')].

02:01.100 --> 02:09.130
Y finalmente, el tercer tipo de módulo, nuevamente, el que sabemos que es algo de npm, un paquete.

02:09.500 --> 02:16.810
Y uno de mis paquetes favoritos para usar con Node es algo llamado 'nodemon' y nodemon es realmente muy

02:16.810 --> 02:27.070
bueno, porque si borro esto e instalo npm 'install' - y tendré que hacer 'npm init' primero en realidad

02:27.070 --> 02:33.280
para asegurarme de que tengo un archivo 'package.json' y si paso el '-y' solo dirá yes a todo

02:33.700 --> 02:35.260
indicaciones que recibo de antemano.

02:36.460 --> 02:37.240
Ahí tienes.

02:37.320 --> 02:46.590
Tengo mi 'package.json', y ahora dentro de este 'package.json' voy a decir

02:47.190 --> 02:49.800
'npm install nodemon --save-dev'

02:55.760 --> 02:57.820
Si voy a 'package.json'

02:57.870 --> 02:58.500
veo que

02:58.530 --> 03:03.900
ahora tengo nodemon en 'devDependencies' y no hemos visto esto antes.

03:03.900 --> 03:09.600
Hasta ahora hemos hecho '--save' o nada en absoluto y lo colocamos automáticamente en 'dependencias'

03:10.540 --> 03:14.840
'devDependencies' son dependencias que solo usamos cuando estamos desarrollando.

03:14.890 --> 03:22.300
Cuando realmente lanzamos esta aplicación o el servidor no se incluirá porque nodeman es solo para - otra vez

03:22.360 --> 03:26.300
para - nuestro disfrute mientras estamos en desarrollo.

03:26.300 --> 03:28.220
Ahora déjame mostrarte lo que hace nodeman.

03:28.400 --> 03:33.100
nodemon ahora se puede usar porque está en 'node_modules'

03:33.130 --> 03:35.890
Si vas a '.bin', ves nodemon aquí.

03:36.260 --> 03:42.020
Bueno, porque está en el paquete 'node_modules .bin'

03:42.460 --> 03:46.880
Puedo usar el comando como "inicio"

03:50.770 --> 03:59.590
y decir "nodemon" y Node es lo suficientemente inteligente como para saber que si ejecuto nodemon se verá en el

03:59.600 --> 04:02.550
la carpeta '.bin' y encontrarlo allí; si lo encuentra allí,

04:02.810 --> 04:03.750
lo cual hace,

04:03.790 --> 04:04.870
ejecutará el comando.

04:05.000 --> 04:06.140
Entonces, veamos qué pasa.

04:07.300 --> 04:16.990
Si borro esto y hago 'npm start' nos sale un poco de error porque bueno tenemos algunos archivos raros aquí

04:16.990 --> 04:20.970
así que volvamos a nuestro ejemplo original.

04:21.010 --> 04:28.640
Ahorremos la ejecución de 'npm start' y tenemos una 'salida limpia'.

04:28.810 --> 04:30.860
Pero ves que algo todavía está funcionando.

04:30.970 --> 04:35.590
Si cambio esto ahora a 6 y guardo, veré esos cambios

04:35.590 --> 04:41.710
para mi; sigue escuchando los cambios y producirá todo.

04:41.710 --> 04:51.240
Nuevamente si cambio esto, entonces no tengo que seguir ejecutando el comando 'node script.js'.

04:51.360 --> 04:52.050
Muy genial.

04:52.050 --> 04:57.210
Así que usaremos nodemon mucho y es una de mis cosas favoritas para usar nuevamente, así que no tengo

04:57.210 --> 04:58.820
ir y venir, ida y vuelta.

04:58.890 --> 05:05.210
Y si cometes algún error bien, te lo hará saber de inmediato.

05:05.270 --> 05:05.520
Todo bien.

05:05.520 --> 05:06.800
Perfecto.

05:06.840 --> 05:07.820
Eso es todo por ahora.

05:07.830 --> 05:09.900
Te veré en el próximo. Adiós
