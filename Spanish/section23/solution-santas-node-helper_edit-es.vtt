WEBVTT

00:01.610 --> 00:02.320
Bien.

00:02.360 --> 00:10.460
Espero que todos hayan tenido la oportunidad de resolver el pequeño rompecabezas de Adviento de Code Santa que tiene aquí.

00:10.610 --> 00:18.590
Voy a mostrarte ahora lo que haría si estuviera leyendo esta pregunta o si estuviera viendo esto

00:18.590 --> 00:24.980
problema lógico que nuevamente es algo que en las entrevistas se te pide mucho.

00:25.130 --> 00:33.410
Y en tu día de hoy cuando resuelves problemas complejos, generalmente son los pequeños pedazos de preguntas lógicas

00:33.410 --> 00:35.190
que se preguntan y quieres resolver

00:35.600 --> 00:38.320
Así que voy a revisar lo que haría.

00:38.330 --> 00:43.130
No significa que es la única manera, pero lo que haría para resolver estos problemas.

00:44.520 --> 00:44.880
Bien.

00:44.910 --> 00:47.520
Para ahora todos han leído la pregunta.

00:47.520 --> 00:57.630
Y lo que tenemos que hacer, así que después de leer la pregunta obtendré mi entrada del rompecabezas que tengo aquí.

00:57.660 --> 01:05.230
Voy a copiar todo esto y aquí tengo mi carpeta 'awesome node' sin nada dentro.

01:05.310 --> 01:14.830
Voy a crear un archivo 'santa.txt' y en este archivo de texto, copiaré y pegaré las instrucciones.

01:14.860 --> 01:18.400
Bueno, no tenemos idea de lo que está pasando.

01:19.810 --> 01:21.290
Déjame cerrar eso.

01:21.760 --> 01:29.140
Ahora, al leer la pregunta, lo primero que quiero hacer es asegurarme de tener un archivo de script

01:29.950 --> 01:33.750
que puedo correr Bien.

01:33.750 --> 01:39.610
Ahora, antes de comenzar a codificar cualquier cosa, todo en mi cabeza debe tener sentido.

01:39.840 --> 01:41.710
Y me gusta mantener las cosas organizadas.

01:41.910 --> 01:48.570
Entonces, lo primero que suelo hacer es comentar y decir eso:al leer la pregunta, sabemos que

01:48.570 --> 01:50.530
hay dos partes

01:50.790 --> 01:53.810
Hay una pregunta número uno.

01:54.030 --> 01:55.660
Pregunta número dos.

01:55.840 --> 02:09.670
Así que solo nos enfocaremos en la primera, que es "¿En qué piso termina Santa?"

02:09.740 --> 02:16.800
Y la segunda pregunta es, bueno, si vamos aquí, el primer personaje que lo hace entrar al sótano.

02:16.820 --> 02:27.150
Entonces, queremos decir "¿Cuándo ingresa Santa al sótano?".

02:27.170 --> 02:27.560
Bien.

02:27.560 --> 02:29.680
Entonces ahora tengo todo claro.

02:29.780 --> 02:32.480
Y también sabemos que hay algunas reglas.

02:32.660 --> 02:47.190
Las reglas son que:este personaje significa que 'es' o no 'es' - 'Santa' debe subir un piso.

02:47.320 --> 02:56.680
Y también sé que este personaje es todo lo contrario y debería bajar un piso. Y sé que esto es

02:56.680 --> 03:02.980
tonto, pero es muy importante para ti escribir cosas y entender lo que estás haciendo y

03:02.980 --> 03:04.540
tus objetivos son

03:04.570 --> 03:15.000
Sabemos que queremos resolver esta pregunta utilizando estos parámetros que obtenemos de nuestra entrada, que

03:15.000 --> 03:17.700
está bien jibberish por ahora.

03:19.450 --> 03:19.660
Derecha.

03:19.670 --> 03:25.120
Así que la pregunta número uno siempre me gusta comenzar con una buena función y solo diremos.

03:25.120 --> 03:26.870
'Pregunta 1'.

03:28.650 --> 03:34.930
Y en 'question1' voy a hacer nuestro archivo de lectura.

03:34.980 --> 03:38.760
Así que vamos a la parte superior aquí y hacemos.

03:38.790 --> 03:45.040
'const fs = require (' fs ')'

03:45.170 --> 03:49.380
Muy bien y lo hemos hecho antes, así que esto debería ser bastante simple.

03:49.520 --> 03:53.140
fs.readFile

03:53.220 --> 03:58.050
Vamos a leer el archivo 'santa.txt'.

03:59.010 --> 04:04.290
Y el archivo santa.txt recibirá un error o datos

04:07.350 --> 04:10.580
y dentro de aquí, vamos a ignorar 'err' por el momento.

04:10.620 --> 04:23.480
Estoy seguro de que va a funcionar, así que solo voy a decir 'instrucciones const' van a ser 'data.toString ()'

04:25.120 --> 04:29.780
y eso en sí mismo significa que la variable 'direcciones'

04:30.190 --> 04:31.120
ahora tiene

04:33.810 --> 04:35.020
las direcciones que queremos

04:35.040 --> 04:38.540
Así que déjenme ejecutar eso para asegurarme de que todo está bien.

04:39.840 --> 04:46.900
Y vieron aquí que nada está impreso porque esta función nunca se ejecutó, así que hagámoslo.

04:46.920 --> 04:47.610
Vamos a decir.

04:47.610 --> 04:49.630
'Pregunta 1()'.

04:49.980 --> 04:51.000
Vamos a ejecutarlo.

04:54.140 --> 05:00.990
Parece que estamos imprimiendo toda esta información, que es exactamente lo que queremos.

05:00.990 --> 05:02.630
Esas son las direcciones.

05:02.820 --> 05:09.390
Y esta es otra cosa. Me gusta hacer las cosas paso a paso, asegurándome de que todo funcione antes de escribir

05:09.390 --> 05:14.210
todo fuera y luego "uh-oh algo está mal, pero no sé lo que está mal".

05:14.220 --> 05:21.780
Voy paso a paso, hablando lógicamente en mi cabeza para asegurarme de que tenga sentido. Como soy

05:21.780 --> 05:23.010
escribiendo esto,

05:23.010 --> 05:25.690
todo fluye como estoy hablando.

05:25.740 --> 05:33.030
Tenemos la primera pregunta que estamos leyendo archivo (santa.txt) y desde 'santa.txt', estamos obteniendo las instrucciones.

05:33.030 --> 05:33.650
Bien.

05:33.810 --> 05:35.820
Entonces, ¿qué queremos hacer ahora?

05:36.120 --> 05:41.600
Bien, vimos en la salida que estos, bueno, es solo una gran cadena.

05:41.610 --> 05:44.320
Pero idealmente podemos dividirlos.

05:44.670 --> 05:50.460
Entonces, si los dividimos podemos analizar cada uno, uno por uno como una matriz, tal vez podamos mapear en una

05:50.460 --> 06:02.470
array, por lo que una forma furtiva de hacer esto es que podemos decir 'const directionsArray' y estas instrucciones

06:02.470 --> 06:13.460
array se dividirá en matrices haciendo '.split' y dividiéndolo así.

06:13.580 --> 06:17.180
Y hay un pequeño truco de taquigrafía.

06:17.570 --> 06:21.500
Así que de nuevo si 'console.log (directionsArray)'

06:27.710 --> 06:31.400
ahí tienes, tengo todo en una matriz.

06:31.400 --> 06:35.500
Eso es un montón de elementos en el conjunto, pero ahora todo está dividido individualmente.

06:35.700 --> 06:41.810
Bien el siguiente paso. Así que tengo cada arreglo, así que queremos leer cada uno de ellos, porque cada uno equivale

06:41.810 --> 06:45.680
para subir 1 o abajo 1.

06:45.740 --> 06:52.820
Y queremos mapear esto, queremos repasar cada uno de ellos, pero estamos acumulando algo correcto.

06:52.820 --> 06:57.980
Estamos diciendo "uno", luego, si tenemos dos pisos, eso es "dos".

06:58.070 --> 07:02.930
Si bajamos uno, ese es "uno":estamos sumando y restando constantemente.

07:02.930 --> 07:06.560
Entonces, en ese caso, podemos reducir.

07:06.860 --> 07:19.260
Entonces, con Reduce, puedo decir que 'const answer' en este caso será 'directionsArray. (Reduce)' y esto reducirá

07:19.470 --> 07:21.870
toma la primera función.

07:21.870 --> 07:30.990
Entonces el primer parámetro es una función y esta función toma el acumulador y yo solo hago 'acc'.

07:30.990 --> 07:33.600
por ahora solo porque es más corto.

07:33.840 --> 07:38.110
Y luego el segundo es el valor actual.

07:38.190 --> 07:43.690
Déjame hacer esto más pequeño para que puedas ver, y esta es una función

07:46.560 --> 07:48.560
que vamos a hacer algunas cosas aquí.

07:48.570 --> 07:53.700
Pero el segundo parámetro es con lo que queremos comenzar, en el acumulador.

07:53.700 --> 07:55.080
Entonces comenzaremos con cero.

07:55.080 --> 08:01.150
Entonces Santa está en el piso cero, en la planta baja, dentro de aquí

08:01.200 --> 08:11.690
podemos decir si el valor actual - porque reduce los mapas sobre cada uno de estos elementos y si el actual

08:11.690 --> 08:20.410
valor '===' y digamos, esto, que está arriba de 1 piso.

08:20.410 --> 08:29.440
Si ese es el caso, bueno, podemos simplemente 'devolver acc'.

08:29.540 --> 08:36.750
'+ = 1', que es la abreviatura de hacer accumulator plus 1.

08:37.160 --> 08:40.770
Entonces esto agrega uno al acumulador.

08:40.850 --> 08:48.060
Entonces, si el primer elemento es este pequeño corchete aquí, será 0 más 1.

08:48.070 --> 08:57.000
Entonces Santa va a subir un nivel y luego diremos 'else if'

08:57.610 --> 08:59.320
'currentValue ==='

09:02.520 --> 09:06.330
el corchete opuesto ')', que hacemos exactamente lo contrario.

09:06.330 --> 09:12.490
Y vamos a nuestro 'retorno acc - = 1'.

09:12.540 --> 09:13.920
Así que va a bajar uno

09:17.250 --> 09:17.890
Bien.

09:18.300 --> 09:22.460
Entonces, solo por curiosidad, ejecutemos esto y veamos qué sucede.

09:22.480 --> 09:32.380
Voy a 'limpiar' y ejecutar esto una vez y no obtenemos nada, porque bueno, no hemos dicho nada.

09:33.430 --> 09:37.790
Así que vamos a registrar la consola al final de esto:tenemos la respuesta.

09:37.900 --> 09:42.510
Así que simplemente 'console.log'

09:45.720 --> 09:46.570
'responder:'

09:47.490 --> 09:52.980
Y diremos que la 'respuesta' o simplemente diremos 'piso'.

09:53.760 --> 10:00.750
entonces si ejecuto esto de nuevo Uh-oh me da un poco de error y es porque olvidé ... venir aquí.

10:00.750 --> 10:01.660
Tonto de mí.

10:01.710 --> 10:09.490
Corramos eso otra vez, déjenme limpiar y obtengo 'piso:280' y esa es la respuesta.

10:09.490 --> 10:11.920
Ahí es donde termina Santa.

10:12.010 --> 10:18.020
Él termina en el piso 280 si sigue la dirección hasta el final.

10:19.230 --> 10:20.490
Muy genial.

10:20.490 --> 10:32.600
Entonces, de nuevo, solo por curiosidad, agreguemos tiempo para calcular cuánto tiempo lleva esto, y diremos 'console.time'

10:32.690 --> 10:37.540
Oops Whoa.

10:37.670 --> 10:40.410
Mi pequeña pestaña no funciona bien hoy.

10:40.520 --> 10:48.370
Y diremos 'santa-time' y este 'santa-time' dentro de esta función.

10:48.470 --> 10:58.960
Hasta que obtengamos la respuesta diremos 'santa-time' - y si ejecuto esto, nuestra función ejecuta cuatrocientos

10:59.530 --> 11:02.910
treinta y siete, 0.437ms

11:02.980 --> 11:07.570
Muy rápido, porque no estamos haciendo nada demasiado loco.

11:07.570 --> 11:09.640
Qué curioso por qué llegaste aquí.

11:09.640 --> 11:15.110
Tenga en cuenta que esto realmente depende del tipo de máquina, del tipo de máquina en la que se encuentre.

11:15.130 --> 11:20.400
Pero de nuevo es muy divertido pensar cómo estructurar tu código.

11:20.650 --> 11:23.680
Así que es, antes que nada, tiene sentido.

11:23.740 --> 11:25.030
Funciona muy bien

11:25.450 --> 11:32.170
Y también, quiere asegurarse de que sea eficiente, y mire esto.

11:32.200 --> 11:34.820
No estamos haciendo nada demasiado ineficiente.

11:35.020 --> 11:42.230
Bien, pasemos a la pregunta número dos. Y la pregunta número dos:hagamos espacio para esto - pregunta

11:42.230 --> 11:47.270
el número 2 pregunta cuándo ingresa primero Santa al sótano.

11:47.270 --> 11:54.650
Así que está bien usar este circuito aquí, mientras que Santa comienza a tomar la dirección.

11:54.650 --> 11:59.030
¿Cuándo el acumulador entra en el número negativo?

11:59.170 --> 12:05.030
Ahora puedo simplemente copiar y pegar esto en la pregunta número dos.

12:06.650 --> 12:10.750
Y tal vez simplemente agregue una declaración 'si' aquí.

12:10.910 --> 12:19.120
Tal vez pueda decir 'si acc es menor que cero'.

12:20.170 --> 12:25.730
Entonces ya sabes, podemos decir 'console.log' la respuesta.

12:25.870 --> 12:27.750
Y eso funciona bien.

12:28.620 --> 12:34.550
Pero una vez más pensando en la pregunta, esto reduce ir a un mapa sobre todo.

12:34.650 --> 12:40.320
Y recuerdas que esta es una gran variedad que creamos fuera de las direcciones.

12:40.350 --> 12:45.900
Entonces, si Santa, en el primer movimiento, entra al sótano.

12:46.020 --> 12:50.290
Y luego todavía revisamos cada elemento de la matriz.

12:50.370 --> 12:52.530
Es un tiempo perdido.

12:52.770 --> 12:53.310
Derecha.

12:53.310 --> 13:00.750
Entonces, queremos pensar sobre los problemas de maneras que tengan sentido para nosotros y que sean eficientes; y eso es algo

13:00.810 --> 13:02.630
de nuevo que quieres practicar

13:02.630 --> 13:07.680
¿Tiene sentido en tu cabeza si se supone que debes hacer esto manualmente?

13:07.920 --> 13:17.250
¿Podrías ir paso a paso a través de todo, o simplemente te detendrás cuando Santa entre en el sótano?

13:17.250 --> 13:19.080
en el número negativo.

13:19.080 --> 13:21.700
Entonces, busquemos una mejor manera de hacerlo

13:21.720 --> 13:26.280
pregunta número dos De nuevo con la pregunta número dos

13:26.290 --> 13:41.420
Voy a decir 'function question2 ()', y dentro de aquí diremos 'fs.readFile' una vez más.

13:44.490 --> 13:50.550
Y este archivo de lectura leerá './santa.txt'.

13:50.760 --> 13:52.530
De nuevo, esto es lo mismo que arriba.

13:52.650 --> 14:01.800
Así que voy a hacer esto rápidamente, y como la primera parte que es la dirección y la obtención

14:01.800 --> 14:08.280
en una matriz, es lo mismo, así que voy a copiar eso, de nuevo obteniendo las instrucciones

14:08.280 --> 14:10.230
en una matriz dividiéndola.

14:10.350 --> 14:18.300
Y ahora voy a agregar una pequeña función que creo que es mejor que reducir en este caso. Así que voy

14:18.300 --> 14:24.000
para decir el 'const answer = directionsArray.some ()'

14:24.200 --> 14:33.960
Y algo de lo que hace es mirar a través de la matriz, ir paso a paso y si encuentra algo

14:33.960 --> 14:37.600
que coincida, va a parar el bucle.

14:37.800 --> 14:46.260
Entonces con 'directionsArray.some', voy a tener el valor actual y este valor actual.

14:46.800 --> 14:52.800
Entonces ese es el artículo o el soporte que estamos obteniendo.

14:54.140 --> 14:55.570
Entonces este valor actual.

14:56.000 --> 15:01.250
De nuevo, vamos a hacer esto si la declaración, el valor actual y el valor actual, vamos a agregar uno o

15:01.250 --> 15:02.540
resta uno

15:02.540 --> 15:05.820
Así que de nuevo lo copio y lo pego aquí.

15:05.820 --> 15:14.160
Pero nuevamente, realmente no tenemos acc en esta función. Y porque realmente no estamos usando un reductor pero

15:14.160 --> 15:19.820
queremos hacer un seguimiento de un mostrador para ver cuándo entrará Santa al sótano.

15:19.830 --> 15:24.600
Entonces, fuera de la función, voy a decir 'dejar acumulador'.

15:24.720 --> 15:35.890
Déjame ser más descriptivo esta vez, y diremos 0 y este acumulador se va a incrementar

15:36.010 --> 15:37.410
basado en las instrucciones

15:37.420 --> 15:37.880
Bien.

15:38.050 --> 15:45.080
Entonces, usando eso, veamos cuál será mi 'respuesta de console.log'.

15:45.190 --> 15:51.520
Entonces volveremos a decir 'sótano ingresado en:'

15:54.670 --> 16:01.060
y diremos 'respuesta' y permítanme eliminar

16:01.060 --> 16:06.860
pregunta 1 por ahora y solo ejecuta la pregunta dos.

16:07.070 --> 16:12.940
Vamos a ejecutar esto, 'sótano ingresado en:verdadero'.

16:13.160 --> 16:19.760
Y cometimos un error aquí porque lo que queremos hacer desde '.algunos' es que queremos devolver algo que queremos

16:19.760 --> 16:22.930
para regresar cuando se alcanza un objetivo.

16:22.940 --> 16:26.600
Así que al final vamos a decir 'acumulador de retorno'

16:29.060 --> 16:32.930
y cuando el acumulador es mayor que cero.

16:32.960 --> 16:41.720
Recuerde que el retorno finaliza la función; vamos a decir "detén lo que sea que estés haciendo" y eso va a ir

16:41.720 --> 16:43.040
para finalizar la función

16:43.100 --> 16:48.080
Pero queremos saber cuándo ingresa Santa al sótano por primera vez.

16:48.080 --> 16:54.490
Entonces eso es un:¿qué número de instrucciones hace Santa antes de entrar al sótano?

16:54.500 --> 16:57.730
Entonces también necesitamos un contador.

16:57.840 --> 17:00.390
Entonces este contador va a ser igual a cero.

17:00.600 --> 17:03.830
Y me he perdido un montón de punto y coma aquí, pero está bien.

17:04.020 --> 17:14.520
Y vamos a aumentar el contador, cada vez que pasa un elemento.

17:14.680 --> 17:23.540
Y ahora la respuesta, bueno, no esto, pero la respuesta va a ser el contador en sí.

17:23.540 --> 17:32.780
Entonces si hago una contra, salva, está bien y corramos esto. Y de hecho cometí un error aquí porque es

17:32.780 --> 17:39.740
sigue siendo cero porque el contador se está incrementando después de la declaración de devolución.

17:39.740 --> 17:44.710
Así que 'currentValue', vamos a llamar a este 'currentItem'.

17:44.750 --> 17:52.630
Es mucho más descriptivo:'currentItem'.

17:52.710 --> 17:55.820
Esto se devuelve antes de que golpees el mostrador.

17:55.890 --> 18:01.570
Entonces, en nuestro caso, a diferencia de lo anterior, realmente no necesitamos la declaración de devolución.

18:04.640 --> 18:09.330
Vamos a guardar, correr y listo.

18:09.570 --> 18:14.210
Y la respuesta en este caso es mil setecientos noventa y siete.

18:15.770 --> 18:16.390
Increíble.

18:16.400 --> 18:24.260
Así que, nuevamente para probarlo, usemos nuestro 'tiempo santa' ahora, para copiar desde arriba y lo pondremos en

18:24.260 --> 18:35.210
la parte superior para 'console.time' y el final para 'console.timeEnd'. Veamos qué tan rápido se ejecuta esa función.

18:35.370 --> 18:38.910
Tenemos de nuevo, bastante rápido.

18:38.910 --> 18:47.200
Pero si reduje, que en nuestro caso es lo que usamos para la primera pregunta.

18:47.200 --> 18:52.470
Entonces, repasemos eso, vemos eso

18:52.640 --> 18:59.090
Bueno, la primera ronda de 'console.time (' santa-time ')', que es la pregunta 1 es

18:59.130 --> 19:12.790
Permítanme agregar un q1 aquí para que podamos ver, y q2, agregar eso para asegurarse de que las etiquetas coincidan

19:18.460 --> 19:19.940
Hagámoslo de nuevo.

19:30.390 --> 19:32.040
Eso está mucho mejor bien.

19:32.040 --> 19:35.930
Entonces, vemos esa pregunta 1.

19:36.050 --> 19:42.540
Definitivamente largo, corre un poco más que la Pregunta 2 porque la primera vez tenemos que pasar por

19:42.540 --> 19:43.520
todo.

19:43.530 --> 19:47.540
La segunda vez es mucho menos tiempo. Solo por diversión

19:47.550 --> 19:50.690
de nuevo, cómo es probar nuestras suposiciones.

19:50.730 --> 19:52.980
Entonces, si la primera dirección era

19:56.000 --> 20:01.160
para ir abajo Veamos qué pasa.

20:01.160 --> 20:06.890
Bien, eso es un poco más rápido que antes.

20:06.900 --> 20:12.720
No mucho, porque todavía estamos haciendo cálculos, pero aún mucho más rápido que ir

20:12.720 --> 20:19.600
a través de esta muchos artículos. En caso de que te preguntes por qué en este caso terminó la pregunta 2

20:19.650 --> 20:23.400
antes de la primera pregunta y no en los otros casos,

20:23.400 --> 20:30.890
Recuerde nuevamente que el archivo de lectura es asincrónico. Lo que uno devuelve primero, se devuelve.

20:30.930 --> 20:31.470
Bien.

20:31.470 --> 20:33.480
Espero que te diviertas con los desafíos.

20:33.670 --> 20:40.800
Si has disfrutado esto, te recomiendo que continúes con el advenimiento del código y, con suerte, como grupo,

20:40.920 --> 20:42.010
con nuestra comunidad

20:42.210 --> 20:49.100
Cuando llegue diciembre, todos estamos listos para seguir el advenimiento del código para este año.

20:49.170 --> 20:50.730
Te veré en el próximo. Adiós
