WEBVTT

00:02.900 --> 00:03.840
Dar una buena acogida.

00:03.980 --> 00:11.140
Tengo un pequeño desafío divertido para ti y este desafío proviene de uno de mis sitios web de programación favoritos

00:11.270 --> 00:19.880
en la web y se llama 'Adviento del Código' y el advenimiento del código ocurre cada diciembre.

00:19.880 --> 00:21.980
Programadores de todo el mundo,

00:22.110 --> 00:24.700
no importa en qué idioma escriben

00:24.770 --> 00:31.100
Puede hacer estos problemas con el idioma que desee y se supone que debe resolver durante 24 días

00:31.100 --> 00:32.580
hasta Navidad

00:32.630 --> 00:35.730
estos problemas difíciles usando código.

00:35.930 --> 00:40.910
Entonces vamos a hacer realmente algo divertido aquí.

00:41.360 --> 00:43.720
Tenemos la llegada del código de 2015.

00:43.740 --> 00:49.100
Sé que es un poco viejo, pero realmente me gusta esta pregunta.

00:49.100 --> 00:52.160
Creo que va a ser realmente una buena práctica.

00:53.240 --> 00:59.570
Así que voy a dejar para ustedes este desafío, y hay dos partes de este desafío.

00:59.570 --> 01:09.250
Así que piensa en ello ya que necesitas una respuesta para la primera parte y la segunda parte.

01:09.440 --> 01:15.770
Ahora compartiré el enlace a este desafío para que puedas leer todas las reglas e incluso puedes obtener

01:15.890 --> 01:19.170
la entrada para tu rompecabezas aquí.

01:20.350 --> 01:24.520
Y no se preocupe, parece confuso, pero una vez que lea la pregunta entenderá por qué es

01:25.390 --> 01:28.810
la parte más emocionante es eso en el próximo video.

01:28.960 --> 01:32.430
- ¡pero asegúrate de no verlo antes de terminarlo! - en el siguiente video

01:32.680 --> 01:40.180
Voy a mostrarte lo que haría si estuviera resolviendo este problema lógico usando programación y esto

01:40.180 --> 01:45.870
forma de comparar lo que haces versus lo que hago, no significa que mi camino sea correcto.

01:45.880 --> 01:48.990
Hay muchas formas diferentes de resolver problemas

01:49.120 --> 01:56.200
cuando estás programando pero como un pequeño desafío divertido vas a encontrar la solución a esto

01:56.200 --> 02:04.700
problema al usar nuestro módulo 'fs' usando Node y usando JavaScript.

02:04.940 --> 02:11.990
Y luego voy a mostrarte lo que hago y vamos a ver quién es el código más rápido y la forma en que estamos

02:11.990 --> 02:14.160
vamos a comparar nuestro código

02:15.140 --> 02:22.030
es, vamos a hacer algo como esto dentro de nuestra función cualquiera que sea esa función.

02:22.100 --> 02:24.900
Lo más probable es que vayas a leer el archivo

02:25.130 --> 02:28.570
te proporcionan lo que es esto aquí.

02:30.730 --> 02:39.650
Inmediatamente después de hacer eso, diremos 'console.time ()' y podemos darle cualquier etiqueta que queramos para

02:39.850 --> 02:46.890
solo di el desafío divertido ahora el tiempo de registro de la consola.

02:47.100 --> 02:58.340
Cuando accedamos a esta línea, iniciaremos un temporizador y solo terminará cuando vea el

02:58.550 --> 03:02.570
'console.log' o 'timeEnd'.

03:02.810 --> 03:09.640
y tenemos que darle la misma entrada o la misma etiqueta que la primera vez que la llamamos.

03:09.730 --> 03:15.650
Así que 'funchallenge' ... ahora de esta manera,

03:15.970 --> 03:22.930
bueno, esto es lo que sucede si lo ejecutamos y nos sale un poco de error porque estamos eliminando este archivo que

03:22.930 --> 03:24.540
no queremos hacer eso.

03:24.670 --> 03:26.990
Vamos a aclararlo e intentarlo una vez más.

03:30.660 --> 03:35.310
el desafío de diversión tomó 0.319 segundos.

03:35.670 --> 03:44.220
Bueno, eso fue realmente muy rápido porque todo lo que estamos haciendo es realmente el registro de la consola, pero usando esto vamos a

03:44.220 --> 03:49.830
vea qué tan rápido su función resuelve el problema.

03:50.720 --> 03:55.510
Y luego te mostraré qué tan rápido mi solución resuelve el problema.

03:56.060 --> 04:00.960
Y tendremos un poco de competencia. Así que te veré en eso.

04:00.980 --> 04:01.220
Adiós
