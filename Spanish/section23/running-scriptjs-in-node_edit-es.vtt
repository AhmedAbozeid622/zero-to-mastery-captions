WEBVTT

00:00.420 --> 00:07.110
Dar una buena acogida. Ampliemos nuestro conocimiento de Nodo del video anterior y realmente creamos un archivo de script

00:07.140 --> 00:08.210
que podemos correr

00:08.270 --> 00:13.920
Hagamos el comando 'toque' aquí nuevamente para crear un archivo y lo llamaremos 'script.js'.

00:14.850 --> 00:20.870
Verá aquí en el lado izquierdo que tengo 'script.js' en mi carpeta Node.

00:20.920 --> 00:24.110
Ahora, dentro de esta carpeta, ahora puedo hacer cualquier cosa en JavaScript.

00:24.130 --> 00:29.600
Puedo decir 'const a = 5'.

00:29.770 --> 00:38.920
Y esa no es la carpeta que quiero ... queremos abrir esto y diremos 'const a = 4'

00:38.920 --> 00:40.800
'const b = 5'

00:41.140 --> 00:50.780
Y luego podemos simplemente 'console.log (a + b)'. Si guardo esto para ejecutar este script,

00:50.790 --> 00:55.400
todo lo que hago es 'nodo' y luego el nombre del script:'script.js'.

00:55.480 --> 00:58.770
Y debido a que estamos en el directorio sabrá qué es 'script.js'.

00:58.870 --> 01:02.420
Y nos dará 9.

01:02.460 --> 01:03.460
¿Cuan genial es eso?

01:03.490 --> 01:09.480
Ahora también ves que salió; no permaneció en el programa, y ​​eso es porque al final de la

01:09.480 --> 01:12.840
archivo, una vez que lee todo y lo ejecuta

01:12.840 --> 01:21.620
- entonces lo último que ejecuta es 'console.log' - ejecuta 'process.exit' y sale del archivo. Dejame mostrar

01:21.620 --> 01:22.310
tu algo

01:22.520 --> 01:33.040
Si hice algo llamado 'setTimeout', que en realidad tenemos en Node; si lo hago

01:33.370 --> 01:40.600
'node' 'global.setTimeout', obtengo una función.

01:40.630 --> 01:47.120
Entonces si hago 'setTimeout', puedo ejecutar una función nuevamente usando nuestras funciones de flecha.

01:48.750 --> 01:57.000
Y aquí puedo hacer 'console.log ()', y 'setTimeout' es genial porque te permite decir, "oye, cuando

01:57.060 --> 01:59.240
¿quieres que esto se ejecute?

01:59.370 --> 02:03.400
Y ese es el segundo parámetro y voy a decir 3 segundos.

02:03.420 --> 02:15.210
Entonces, si guardo y hago 'node script.js' - uno, dos, tres, y ahí va:9, y luego sale 'process'

02:17.070 --> 02:19.180
El nodo es lo suficientemente inteligente como para ejecutar esto

02:19.200 --> 02:24.280
una vez hecho esto, finaliza el proceso y regresa a la Terminal.

02:24.510 --> 02:25.280
Muy genial.

02:25.380 --> 02:30.000
Y de nuevo dentro del nodo podemos usar

02:32.770 --> 02:37.210
cosas que podrían ser útiles para nosotros en base a qué objetos globales tenemos.

02:37.300 --> 02:45.000
Por ejemplo, uno de los más populares es '__dirname' - si guardo esto y corro

02:45.060 --> 02:45.510
'node script.js' ...

02:45.520 --> 02:47.530
Obtengo mi directorio:'nodo'.

02:50.480 --> 02:53.750
Y le mostraré por qué eso es útil cuando comenzamos a construir un servidor.

02:54.710 --> 03:01.130
Pero como pueden ver, tenemos el poder del navegador y ejecutamos los scripts que queremos aquí mismo.

03:01.190 --> 03:02.650
en nuestra Terminal.

03:02.660 --> 03:03.790
Te veré en el siguiente video, adiós.
