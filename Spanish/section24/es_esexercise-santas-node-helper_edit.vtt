WEBVTT

00:02.900 --> 00:03.840
Dar una buena acogida.

00:03.980 --> 00:11.140
Tengo un pequeño desafío divertido para ti y este desafío proviene de uno de mis sitios

00:11.270 --> 00:19.880
web de programación favoritos en la web y se llama 'Adviento de Código' y el advenimiento del código ocurre cada diciembre.

00:19.880 --> 00:21.980
Programadores de todo el

00:22.110 --> 00:24.700
mundo, no importa en qué idioma escriban.

00:24.770 --> 00:31.100
Puede resolver estos problemas con cualquier idioma que desee y se supone que debe resolver durante

00:31.100 --> 00:32.580
24 días hasta

00:32.630 --> 00:35.730
Navidad estos problemas difíciles con el código.

00:35.930 --> 00:40.910
Así que vamos a hacer algo divertido aquí.

00:41.360 --> 00:43.720
Tenemos la llegada del código desde 2015.

00:43.740 --> 00:49.100
Sé que es un poco viejo, pero realmente me gusta esta pregunta.

00:49.100 --> 00:52.160
Creo que va a ser una muy buena práctica.

00:53.240 --> 00:59.570
Así que les dejaré este desafío, y hay dos partes de este desafío.

00:59.570 --> 01:09.250
Así que piense en ello ya que necesita una respuesta para la primera parte y la segunda parte.

01:09.440 --> 01:15.770
Ahora compartiré el enlace a este desafío para que pueda leer todas las reglas e incluso

01:15.890 --> 01:19.170
puede obtener la entrada para su rompecabezas aquí.

01:20.350 --> 01:24.520
Y no se preocupe, eso parece confuso, pero una vez que lea la pregunta,

01:25.390 --> 01:28.810
comprenderá por qué esa es la parte emocionante del siguiente video.

01:28.960 --> 01:32.430
- ¡pero asegúrate de no mirarlo antes de terminarlo! - en el siguiente

01:32.680 --> 01:40.180
video te mostraré lo que haría si estuviera resolviendo este problema lógico usando la programación y de esta manera puedes

01:40.180 --> 01:45.870
comparar lo que haces con lo que hago, no significa que mi manera sea correcta.

01:45.880 --> 01:48.990
Hay muchas formas diferentes

01:49.120 --> 01:56.200
de resolver problemas cuando está programando, pero como un pequeño desafío divertido,

01:56.200 --> 02:04.700
encontrará la solución a este problema utilizando nuestro módulo 'fs' usando Node y JavaScript.

02:04.940 --> 02:11.990
Y luego les mostraré lo que hago y veremos qué código es más rápido y la forma en

02:11.990 --> 02:14.160
que vamos a comparar nuestro

02:15.140 --> 02:22.030
código es, vamos a hacer algo como esto dentro de nuestra función. esa función puede ser.

02:22.100 --> 02:24.900
Lo más probable es que lea

02:25.130 --> 02:28.570
el archivo que le proporcionan, que es esto aquí.

02:30.730 --> 02:39.650
Justo después de hacer eso, vamos a decir 'consola. time () 'y podemos darle la etiqueta que

02:39.850 --> 02:46.890
queramos, así que solo di el divertido desafío ahora consola de tiempo de registro.

02:47.100 --> 02:58.340
Cuando lleguemos a esta línea, se iniciará un temporizador y solo terminará cuando vea

02:58.550 --> 03:02.570
la consola. log 'o' timeEnd '.

03:02.810 --> 03:09.640
y tenemos que darle la misma entrada o la etiqueta que la primera vez que la llamamos.

03:09.730 --> 03:15.650
Entonces 'funchallenge' ... ahora de esta manera, bueno, esto es

03:15.970 --> 03:22.930
lo que sucede si lo ejecutamos y obtenemos un pequeño error porque estamos eliminando este archivo que

03:22.930 --> 03:24.540
no queremos hacer.

03:24.670 --> 03:26.990
Vamos a aclarar e intentar eso una vez más.

03:30.660 --> 03:35.310
funchallenge tomó 0. 319 segundos

03:35.670 --> 03:44.220
Bueno, eso fue realmente muy rápido porque todo lo que estamos haciendo es realmente iniciar sesión en la consola, pero

03:44.220 --> 03:49.830
al usar esto, veamos qué tan rápido su función resuelve el problema.

03:50.720 --> 03:55.510
Y luego te mostraré qué tan rápido mi solución resuelve el problema.

03:56.060 --> 04:00.960
Y tendremos un poco de competencia. Así que nos vemos en ese.

04:00.980 --> 04:01.220
Adiós
