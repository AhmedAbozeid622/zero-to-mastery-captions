WEBVTT

00:01.010 --> 00:09.890
Hasta este punto hemos aprendido la declaración 'if', la declaración 'if else' y la declaración 'else if'

00:09.890 --> 00:17.660
Y si recuerda el esquema de nuestra sección, bueno, no hemos mencionado estos dos para los condicionales de Javascript.

00:17.660 --> 00:19.660
Así que vamos a abordarlos hoy.

00:20.060 --> 00:24.190
Como puede ver, tenemos dos más para pasar, pero no se asuste.

00:24.290 --> 00:27.360
Estos no van a presentar nada nuevo.

00:27.360 --> 00:33.170
Simplemente hay diferentes formas de hacer un flujo de control, pero no harán nada tan simple si no

00:33.330 --> 00:34.560
declaración no puede hacer.

00:34.940 --> 00:43.790
Sin embargo, hay casos en que será mucho más fácil hacer estos dos, entonces si hacemos algo con el

00:43.790 --> 00:45.490
declaración 'if else'.

00:45.920 --> 00:47.330
Así que vamos a echarles un vistazo.

00:47.360 --> 00:50.870
Lo primero de lo que vamos a hablar es del "operador ternario".

00:50.870 --> 00:54.950
Se ve algo como esto,

00:55.480 --> 00:56.150
'condición?'

00:58.740 --> 01:02.310
expresión uno (expr1) o expresión dos (expr2).

01:06.230 --> 01:10.820
Y esa es la sintaxis. Dice:¿Es esto cierto o falso?

01:11.000 --> 01:14.790
Si es verdadero, proporcione este valor (expr1).

01:15.170 --> 01:17.870
Si es falso, proporcione este valor (expr2).

01:18.230 --> 01:27.260
Déjame mostrarte un ejemplo de esto, tendrá una función llamada 'isUserValid' que acepta un booleano (bool)

01:29.570 --> 01:34.190
y simplemente devolverá el valor booleano.

01:36.190 --> 01:48.670
Ahora dentro de aquí podemos decir que la respuesta variable es igual a 'isUserValid'

01:48.670 --> 01:50.090
y diremos 'verdadero' por ahora signo de interrogación (?)

01:50.290 --> 01:54.820
Si eso es cierto, diré 'Puedes ingresar'

01:58.300 --> 02:03.630
de lo contrario, diré 'Acceso denegado'

02:03.850 --> 02:06.600
Déjame hacer esto un poco más pequeño para que puedas ver.

02:06.820 --> 02:12.790
Entonces, de nuevo, todo lo que estamos diciendo es que si esto es cierto, haz esta expresión ("Puedes ingresar")

02:12.790 --> 02:15.960
Si esto es falso, haga esta expresión ("Acceso denegado").

02:16.110 --> 02:19.300
Así que solo copie esto en la consola y vea qué sucede.

02:21.520 --> 02:27.780
Si ejecuto 'anwer', Whoops deletreo eso mal, 'respuesta'.

02:28.790 --> 02:33.570
Entiendo 'puedes ingresar' porque

02:33.580 --> 02:34.600
el usuario es válido (isUserValid) es verdadero.

02:34.640 --> 02:47.030
Ahora si cambié esto para decir 'falso', bueno, en ese caso obtendré 'Acceso denegado'

02:47.030 --> 02:49.040
Vamos a hacer un poco más de una respuesta complicada.

02:49.100 --> 02:58.870
Podemos decir variable (var) 'respuesta automatizada' y podemos decir y haré esto en una nueva línea para que pueda ver

02:59.050 --> 03:08.880
'Su número de cuenta es', 'isUserValid' y solo diremos algo así como.

03:08.880 --> 03:10.140
'falso' por ahora.

03:10.140 --> 03:16.680
Entonces, debido a que tenemos estos corchetes, vamos a tener una expresión dentro de aquí que podemos evaluar

03:16.680 --> 03:18.990
entonces podemos decir que user (isUserValid) es válido.

03:19.020 --> 03:23.280
Si el usuario es válido dirá '1234'.

03:23.420 --> 03:28.940
Si no, diremos 'no disponible'.

03:31.780 --> 03:37.830
Si copiamos y pegamos esto aquí, en nuestra consola y podemos verlo mejor.

03:37.870 --> 03:39.880
Vemos, si el usuario es válido (verdadero)

03:39.880 --> 03:42.610
Queremos decir '1234'.

03:42.640 --> 03:45.070
Si no está, entonces 'no disponible'.

03:45.070 --> 03:54.490
Entonces, si ejecuto esto y ahora veo la respuesta automática, obtengo 'Su número de cuenta no está disponible',

03:54.700 --> 03:56.920
porque este valor de usuario es 'falso'.

03:56.920 --> 04:08.190
Pero si hago 'verdadero' bien, en ese caso su número de cuenta es '1234'.

04:08.210 --> 04:14.120
Ahora puedes notar que esto en realidad no es tan diferente de si lo hiciste,

04:14.120 --> 04:18.170
'condición de la función' se llamó una condición y dirá

04:21.600 --> 04:27.260
'if isUserValid' devuelve.

04:27.290 --> 04:28.490
'Puedes entrar'

04:31.510 --> 04:33.670
y tu hiciste 'else'

04:36.450 --> 04:55.330
'return Access deny' aquí, 'condición', si digo variable (var) 'answer2' es igual a 'condición'.

04:55.570 --> 04:56.790
Veamos qué pasa.

04:59.380 --> 05:09.680
Copie estos dos, ejecútelos, y ahora si miro la 'respuesta' obtengo 'Puede ingresar' si obtengo la 'respuesta2'

05:09.690 --> 05:13.120
Obtengo 'Puedes ingresar'.

05:13.290 --> 05:18.280
Ahora es exactamente lo mismo que no sea un poco de ortografía incorrecta de mi parte.

05:19.630 --> 05:28.710
Pero ves que una forma es mucho más agradable, es una simple línea simple. Un operador ternario es realmente realmente

05:28.710 --> 05:36.060
bueno para estos 'si no' donde hay un cheque para una condición y hay dos expresiones posibles,

05:36.060 --> 05:36.790
que salen de eso

05:38.410 --> 05:44.350
Bien, vamos a aprender, el siguiente, que es la declaración de 'cambio'.

05:45.390 --> 05:46.290
Este es el divertido.

05:47.350 --> 05:49.750
Entonces una afirmación de s'witch 'se ve más o menos así.

05:49.770 --> 05:53.980
Y podemos construir un juego simple ahora mismo para demostrar cómo funciona.

05:54.070 --> 05:58.720
Puedo decir la función 'moveCommand'.

05:59.350 --> 06:05.120
Y diremos que acepta el parámetro 'dirección' dentro de esta función.

06:05.130 --> 06:12.790
Diré variable (var) 'whatHappens' y diremos 'switch'.

06:12.810 --> 06:13.850
Tenga en cuenta que es una palabra clave.

06:13.850 --> 06:16.140
Entonces ahora está resaltado en rojo.

06:16.160 --> 06:19.000
Y diré 'dirección'.

06:19.160 --> 06:23.790
La instrucción 'cambiar' va a aceptar 'dirección' y va a verificar 'dirección'.

06:25.430 --> 06:37.600
Y dentro de aquí diremos 'caso' 'adelante' que significa verificar 'dirección' si 'dirección' es igual a 'adelante',

06:37.820 --> 06:42.410
Entonces 'whatHappens' es igual

06:42.900 --> 06:45.210
'Te encuentras con un monstruo;'

06:48.490 --> 06:49.360
'descanso;'.

06:49.390 --> 06:54.750
Explicaré más 'break' justo después de terminar el resto de las declaraciones de casos.

06:54.790 --> 07:01.210
Así que las declaraciones de caso como puedes ver son realmente buenas porque puedo copiar y pegar.

07:01.470 --> 07:14.550
Y ahora puedo decir por aquí que diremos 'atrás' y si la dirección es 'atrás' diremos 'Llegaste a casa' si

07:14.550 --> 07:29.320
la dirección es 'correcta' en ese caso diremos 'Has encontrado un río' y si la 'dirección' es 'izquierda' diremos

07:30.670 --> 07:34.050
'Te encuentras con un troll'.

07:35.280 --> 07:39.930
Y finalmente diremos 'predeterminado'

07:43.330 --> 07:49.840
'whatHappens' equivale a 'por favor ingrese una dirección válida'.

07:52.740 --> 07:58.530
Y lo terminaremos con un 'return' 'whatHappens'.

07:58.530 --> 07:58.950
Todo bien.

07:58.950 --> 08:01.170
Eso fue un montón de código.

08:01.170 --> 08:06.080
Vamos a ejecutar este comando primero y luego explicaremos exactamente lo que está sucediendo.

08:06.090 --> 08:07.030
Copia el código

08:08.000 --> 08:10.160
Copia en la consola.

08:10.160 --> 08:11.760
Y ahora tenemos el 'moveCommand'

08:11.840 --> 08:21.940
Y si recuerda que el último video 'moveCommand' ahora existe en el ámbito raíz que es window,

08:21.940 --> 08:22.300
así que dentro de aquí.

08:22.330 --> 08:31.860
Digamos 'adelante', ahora si ejecuto esto obtengo 'Encontraste un monstruo'.

08:32.030 --> 08:36.640
Si regreso ', llegaste a casa'.

08:36.640 --> 08:40.320
Si voy 'a la derecha', 'Encontraste un río'.

08:40.690 --> 08:46.830
Si voy 'izquierda', 'Te encuentras con un troll' y si escribo jibberish

08:50.700 --> 08:51.070
Yo obtengo.

08:51.090 --> 08:53.000
'Por favor, introduzca una dirección válida'.

08:53.980 --> 08:58.510
Para eso son realmente buenas las declaraciones de cambio cuando tienes muchas condiciones.

08:58.510 --> 09:07.470
En lugar de utilizar una instrucción 'if else', 'if else', 'if else', 'if else', 'if else', puede usar una instrucción 'cambiar'

09:08.070 --> 09:10.710
y puedes ver, se lee muy bien.

09:10.710 --> 09:16.760
Esencialmente, lo que está diciendo es crear la variable 'whatHappens' y luego cambiar.

09:16.770 --> 09:23.660
Quiero que revises cualquiera que sea la condición, cualquiera que sea la variable, en este caso esa es la dirección.

09:23.970 --> 09:30.190
Y en el caso, la dirección es igual a 'adelante', haga esto, en caso de que la dirección sea 'atrás', haga esto.

09:30.240 --> 09:33.810
Si es "correcto" haz esto, si está "a la izquierda" haz esto.

09:33.810 --> 09:42.060
Y dice 'predeterminado' es si ninguna de estas condiciones funciona y recuerda que el programa va línea por línea

09:42.060 --> 09:46.260
por lo que comprueba 'adelante', luego marca 'volver' y marca 'derecha' y las verificaciones 'izquierda'.

09:46.280 --> 09:53.940
Y si nada de esos coinciden, entonces dice que puedes simplemente ingresar 'por favor ingresa una dirección válida' y

09:53.940 --> 09:59.700
luego devolvemos 'whatHappenes' para que la función devuelva algo para nosotros.

09:59.710 --> 10:05.460
Ahora, finalmente, ¿cuál es el "descanso" y el "descanso" simplemente dice,

10:06.850 --> 10:12.260
Si 'caso' es 'adelante', asigne 'se encuentra con un monstruo' a

10:12.280 --> 10:18.620
La variable 'whatHhappens' y luego 'break', 'break' es solo decir break out de la declaración switch.

10:18.640 --> 10:24.720
Entonces, en lugar del programa, luego verificando si 'caso' está 'atrás', 'caso' es 'derecho', 'caso' es 'izquierda' o 'predeterminado'.

10:24.850 --> 10:33.550
Si decimos 'romper', el programa se detiene aquí y luego sale directamente de la declaración de cambio

10:33.910 --> 10:34.870
para devolver 'whatHappens'.

10:35.140 --> 10:46.830
Entonces, si realmente lo hago, 'romper' antes de 'lo que sucede', 'te encuentras con un monstruo' y yo copio esto

10:49.680 --> 10:58.820
y volvamos a ejecutar la función, diremos 'moveCommand' es 'forward' note lo que sucede ahora.

10:59.840 --> 11:06.930
Me pongo 'indefinido' porque rompimos el programa y decimos:¡Oh, sí!

11:07.320 --> 11:14.010
Escribió "adelante", pero antes de que podamos asignarle algo a la variable, digo 'romper',

11:14.040 --> 11:21.530
Salgo de la declaración de cambio y devuelvo 'whatHappens' que solo ha sido declarado pero no está asignado.

11:21.530 --> 11:26.630
Así que acabo de regresar 'indefinido'.

11:26.680 --> 11:32.530
Está bien, lo tienes, tus otros dos condicionales y los has cubierto todos en javascript.

11:32.530 --> 11:39.710
Ahora cada uno es bueno para su propio caso individual, pero todos son muy útiles.

11:39.760 --> 11:41.470
Te veré en el próximo
A-Dios.