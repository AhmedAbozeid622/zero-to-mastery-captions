WEBVTT

00:00.910 --> 00:02.810
Y bienvenido de nuevo.

00:02.830 --> 00:10.710
En este video vamos a hablar sobre un concepto importante en javascript llamado 'alcance'.

00:10.840 --> 00:20.890
Ahora, ¿qué es el alcance? scope significa acceso variable, ¿a qué variables tengo acceso cuando se está ejecutando un código?

00:21.710 --> 00:29.600
Por lo tanto, por defecto, en Javascript, se encuentra en el 'alcance de la raíz', que es el objeto 'ventana'.

00:29.600 --> 00:30.410
Déjame mostrarte de lo que estoy hablando.

00:31.700 --> 00:36.560
Si en mi consola hago algo como 'function aa ()'

00:39.820 --> 00:49.160
'console.log ("test")' y cerramos esa función.

00:49.230 --> 00:58.530
Bueno, ahora, la 'función aa' es parte del 'alcance de la ventana'.

00:58.630 --> 01:09.120
Si voy a 'ventana' aquí y abro 'ventana', verás

01:09.330 --> 01:11.250
que la función 'aa' se ha agregado al 'alcance de la ventana'.

01:11.290 --> 01:15.610
Entonces, cuando trabajas en un navegador, esto se denomina 'alcance raíz'.

01:15.610 --> 01:19.600
Entonces el alcance de los padres.

01:19.760 --> 01:28.890
Ahora que hago si hago algo como esto Si voy a 'function bb'.

01:29.680 --> 01:33.930
Y dentro de esta función lo haremos.

01:34.180 --> 01:34.870
la variable 'a' es igual a "hola"

01:39.820 --> 01:47.050
Esta función, si ejecuto esto en la consola,

01:47.230 --> 01:54.460
Si ahora hago 'console.log (a)', eso funcionará.

01:54.550 --> 02:03.280
No porque 'a' solo vive dentro de 'function bb', el alcance está dentro de la función.

02:03.280 --> 02:12.330
Entonces, la única forma en que podemos hacer 'console.log (a)' está dentro de la función para agregar, ¡ay!

02:12.460 --> 02:20.060
Debe intentarlo nuevamente, dentro de la función para agregar 'console.log (a)'.

02:20.070 --> 02:24.000
Entonces, si ejecuto la función,

02:24.060 --> 02:24.930
Tengo 'hola'.

02:25.410 --> 02:32.850
Ahora lo interesante es que las funciones tienen acceso a

02:32.850 --> 02:34.110
cualquier variable en el alcance de la raíz.

02:34.380 --> 02:51.080
Entonces, por ejemplo, si hago 'variable (var) b equal, ¿puedo acceder a esto?' Will 'function bb' tiene acceso a esto?

02:51.250 --> 03:05.920
Porque como sabes, 'window.bb' existe y la variable 'b' vive en el objeto ventana.

03:05.960 --> 03:13.990
Entonces ambos tienen el mismo padre. Déjame mostrarte lo que quiero decir,

03:13.990 --> 03:15.760
copiándolo y poniéndolo en la consola

03:15.940 --> 03:22.180
Ahora dentro de 'function bb' si hacemos 'console.log (b)'

03:27.450 --> 03:39.780
Bueno, tenemos acceso a esto

03:39.860 --> 03:40.170
OK, ¿y si hago algo en la línea de la variable (var) 'b' puedo acceder a esto?

03:40.170 --> 03:45.150
Yo 'b' es igual a "hola", si copio esto.

03:45.280 --> 03:47.940
Y ahora lo hago

03:48.020 --> 03:50.230
'console.log (b)' Bueno, yo tengo,

03:50.230 --> 03:56.840
¿Puedo acceder a esto porque no he ejecutado la función pero si ejecuto la función 'bb ()'.

03:57.020 --> 03:57.890
Ahora si lo hago.

03:57.890 --> 04:02.330
'console.log (b)'

04:02.420 --> 04:03.190
Me salgo 'Hola'.

04:03.470 --> 04:08.860
Porque 'b' es la misma variable.

04:09.290 --> 04:14.550
Ok, hagamos algo un poco más complejo.

04:14.880 --> 04:23.540
Entonces, sabiendo lo que sabemos, sabemos que este es el alcance de la raíz en nuestro caso es la ventana.

04:23.540 --> 04:25.150
Dentro de aquí podemos declarar una variable.

04:25.210 --> 04:27.480
'diversión' diremos que es igual a cinco.

04:28.280 --> 04:30.290
Y también declararemos

04:32.840 --> 04:35.550
una función, lo llamaremos 'funFunction'.

04:35.870 --> 04:41.940
Y dentro de esta función tan pronto como creamos estos corchetes '{}', hemos creado un ámbito infantil aquí.

04:46.280 --> 04:55.170
Así que aquí diré que variable (var) 'diversión' equivale a 'hellooo' y 'console.log (diversión)' aquí

05:00.410 --> 05:07.650
y crearemos otra función excepto la que se llamará 'funnerfunction'.

05:07.810 --> 05:15.030
Y dentro de esto dirá 'Byee' y lo mantendrá conectado.

05:15.180 --> 05:24.110
Y finalmente crearemos una tercera función y la llamaremos la "función más divertida".

05:24.110 --> 05:32.670
Y aquí eliminaremos la variable y diremos 'AHHHHHH'.

05:32.850 --> 05:40.370
Y en la parte inferior también haremos 'console.log (diversión)'.

05:40.400 --> 05:41.020
Todo bien.

05:41.160 --> 05:42.390
Así que repasemos esto.

05:42.390 --> 05:44.020
Estamos declarando una variable

05:44.130 --> 05:45.440
la diversión es igual a cinco.

05:45.480 --> 05:51.800
Creamos tres funciones y cada una de estas funciones crea su propio alcance

05:54.770 --> 05:58.240
y cada una de estas funciones 'console.log (diversión)'.

05:58.340 --> 06:06.580
Pero lo que significa 'diversión' en cada uno de ellos es diferente según su alcance.

06:07.430 --> 06:18.510
Entonces, el primero lo titulará '1' solo para que sepamos que el segundo dirá '2', 'tercero (3)' y finalmente, aquí

06:18.510 --> 06:22.590
solo podemos decir 'ventana'.

06:22.690 --> 06:24.880
Entonces, ejecutemos esta función y veamos qué sucede.

06:25.800 --> 06:28.730
Mira si puedes adivinar,

06:29.000 --> 06:29.480
lo que está a punto de suceder aquí, está bien.

06:29.610 --> 06:34.970
Entonces tenemos una ventana 5, que significa esta línea aquí.

06:35.200 --> 06:37.700
La variable divertida es '5'.

06:37.720 --> 06:39.770
Nada ha sido ejecutado

06:39.810 --> 06:44.910
Leemos el guión y vemos que la diversión variable es igual a 5, y luego vemos estas funciones pero

06:44.910 --> 06:46.660
ninguno de ellos se ejecuta.

06:46.830 --> 06:55.400
Y ahora si hago 'FunFunction' para ejecutar realmente estos y haremos 'FunnerFunction'.

06:55.650 --> 07:06.920
Y finalmente, la "función más divertida". Copio y pego esto y vuelvo a ejecutar esto

07:06.920 --> 07:09.650
vemos que tenemos la ventana 5, línea 24 que se ejecutó, que es la variable 5.

07:10.070 --> 07:18.350
Ahora dentro de la primera función tenemos la diversión variable igual a "hellooo" porque bueno, hemos creado

07:19.710 --> 07:25.620
un nuevo alcance y dentro de esta función vive una diversión variable que tiene "hellooo".

07:25.640 --> 07:27.940
Entonces eso queda anulado.

07:28.190 --> 07:35.630
Y luego tenemos la segunda función que tiene "Byee" nuevamente lo mismo que arriba porque tenemos un nuevo alcance

07:35.660 --> 07:36.880
una nueva variable.

07:37.050 --> 07:38.480
la diversión es igual a "Buyee".

07:38.870 --> 07:44.410
Y luego, el tercero que vemos que nos divertimos es igual a "AHHHHHH".

07:44.930 --> 07:47.330
Y nuevamente eso se cambia.

07:47.870 --> 07:50.550
Y eso es igual a la diversión.

07:50.690 --> 07:52.550
Aquí está la parte divertida.

07:52.580 --> 07:56.330
Si ahora hago 'console.log (diversión)'

07:59.610 --> 08:12.670
ahora es igual a 'AHHHHHH' porque en la tercera función hemos modificado

08:12.720 --> 08:13.550
diversión que es esta variable para igualar a "AHHHHHH".

08:14.000 --> 08:22.480
Una cosa que quiero mostrarte es que en las primeras dos funciones no podré acceder a la variable 'diversión'

08:22.480 --> 08:29.750
en el ámbito raíz porque básicamente los he sobrescrito dentro de 'funFunction' y 'funnerFunction'

08:30.810 --> 08:35.010
'diversión' equivale a algo que es su propio significado.

08:35.010 --> 08:40.890
Entonces, dentro de esta función, la diversión equivale a "hellooo" dentro de la función de funner. La diversión equivale a "Byee".

08:41.190 --> 08:49.590
Y pase lo que pase, no tendremos acceso al ámbito raíz y esto se llama conflicto de nombres,

08:49.590 --> 08:56.610
donde nombramos las cosas de la misma manera, algo que vive digamos en el alcance principal

08:56.610 --> 08:57.120
y perderemos el acceso a ella.

08:58.070 --> 09:04.710
Entonces, para finalizar este punto, simplemente borremos esto y repasemos lo que está sucediendo aquí.

09:04.800 --> 09:08.640
Así que borremos esto también y diremos solo 'console.log' aquí.

09:09.260 --> 09:16.090
Cuando alguien ejecuta 'FunnestFunction' ejecutamos esto y Javascript respira diversión en el registro de la consola.

09:16.530 --> 09:18.660
Bien divertido, ¿verdad?

09:18.660 --> 09:22.060
¿La conocemos? y miramos el alcance aquí.

09:22.060 --> 09:22.830
Miras esta función.

09:22.840 --> 09:25.840
Oye, ¿sabes qué es "divertido"?

09:25.930 --> 09:32.840
Y la función dice:"Lo siento amigo, realmente no sé 'diversión', pero pregúntale a mi padre.

09:33.070 --> 09:37.110
Entonces ahora entramos fuera de la función.

09:37.210 --> 09:38.890
En este caso, el alcance de las raíces.

09:38.890 --> 09:42.650
Ahora decimos ¿oye, sabes "diversión"?

09:42.700 --> 09:44.830
Y ellos son como, Yah yah! tenemos una diversión variable.

09:44.830 --> 09:46.170
Es igual a cinco.

09:46.570 --> 09:51.000
Entonces ahora 'console.log' puede registrar 5.

09:51.180 --> 09:59.760
Pero si la 'diversión' no existe, preguntamos a los padres y el padre dice:Lo siento, no tengo idea de qué es 'diversión'.

09:59.810 --> 10:03.410
Entonces obtenemos, bueno obtenemos un error.

10:03.470 --> 10:07.060
Entonces, el último control es siempre el alcance de la raíz

10:07.190 --> 10:09.410
En nuestro caso, el objeto ventana, si no podemos encontrarlo.

10:09.410 --> 10:11.360
Obtenemos este error en la consola.

10:11.360 --> 10:12.630
Siempre vemos

10:12.830 --> 10:15.560
¡Lo siento! tu variable amiga no existe.

10:15.650 --> 10:19.340
Creo que la inventaste y eso es todo por alcance.

10:19.340 --> 10:22.390
Tengo un ejercicio divertido para ti justo después de este video.

10:22.400 --> 10:25.030
Pruébalo y te veré en el próximo.

