WEBVTT

00:01.490 --> 00:02.700
Dar una buena acogida.

00:02.840 --> 00:05.050
Esta es la parte que se vuelve realmente emocionante.

00:05.360 --> 00:11.230
Puede usar JavaScript para escuchar eventos y eso en función de lo que hace el usuario.

00:11.240 --> 00:19.900
Ahora, ¿qué quiero decir con eventos? Los eventos son cosas como hacer clic, ingresar con el mouse o desplazarse sobre algo

00:20.470 --> 00:24.170
o que el usuario intente algo en una barra de búsqueda.

00:25.560 --> 00:31.310
Entonces podemos escuchar estos eventos y reaccionar ante ellos usando JavaScript.

00:31.320 --> 00:36.100
Déjame enseñarte como. Tenemos todas las listas de compras del video anterior.

00:36.510 --> 00:39.310
Y si agrego un botón aquí.

00:42.060 --> 00:47.530
Y solo diremos Click Me, guardar y actualizar.

00:47.590 --> 00:50.800
Tenemos el botón Click Me.

00:50.830 --> 00:57.340
También he creado un archivo JS de puntos de script aquí en la misma carpeta que el índice HTML y obviamente

00:57.340 --> 00:58.130
queremos agregarlo.

00:58.180 --> 01:08.070
Así que lo haremos justo en la parte inferior como hemos mencionado en videos anteriores y podemos incluirlo haciendo referencia a él a través

01:08.070 --> 01:16.070
de la fuente y lo llamaremos Escritura pensada solo para hacer referencia al nombre en la secuencia de comandos.

01:16.110 --> 01:19.420
Ahorremos ahora aprendiendo lo que hemos aprendido.

01:19.430 --> 01:22.460
Podemos seleccionar este botón rápido.

01:22.460 --> 01:25.830
Probemos esto si queremos seleccionar el botón.

01:25.850 --> 01:38.600
Puedo decir que el elemento dot get document por nombre de etiqueta y diremos button para que seleccione el botón por nosotros.

01:38.620 --> 01:43.580
Bien, ¿cómo podemos escuchar el hecho de que un usuario puede hacer clic en este botón?

01:45.900 --> 01:51.770
Lo que tenemos algo llamado eventos y lo que son y están vinculados.

01:51.780 --> 01:59.550
La referencia aquí es que hay un montón de eventos que un navegador web nos permite escuchar.

01:59.550 --> 02:06.360
Entonces, si miras aquí, tenemos eventos del mouse como el mouse movido del mouse sobre un clic doble clic.

02:06.360 --> 02:10.400
Tenemos pulsación de teclas y muchos otros eventos.

02:10.740 --> 02:16.710
Pero los más comunes y lo único que verá el 90 por ciento de las veces son eventos de mouse y

02:16.710 --> 02:17.750
eventos de teclado.

02:17.790 --> 02:23.450
Entonces, si miramos aquí tenemos un clic para que podamos escuchar el clic.

02:23.610 --> 02:24.500
Cómo podemos hacer eso.

02:25.530 --> 02:36.360
Bueno, en mi guión Paul, voy a decir documento o llamémoslo botón igual a documento

02:36.600 --> 02:44.240
punto obtener alimentos de Diagne y seleccionará el botón.

02:44.440 --> 02:54.690
Ahora que tenemos la referencia al botón, ahora puedo decir que el botón Daut tenía el detector de eventos

02:54.690 --> 03:01.380
y este es un método que podemos usar y acepta dos parámetros.

03:01.380 --> 03:03.910
El primero es el evento.

03:03.980 --> 03:12.040
En nuestro caso, estamos escuchando el evento click y el segundo parámetro es la función o lo que queremos

03:12.040 --> 03:14.440
hacer en función del clic.

03:14.500 --> 03:16.270
Entonces, en nuestro caso,

03:19.030 --> 03:24.700
solo podemos decir hacer clic en el registro de puntos de la consola.

03:24.790 --> 03:32.890
Entonces, estamos diciendo que tenía un detector de eventos para este botón que seleccionamos cada vez que el usuario hace clic en

03:32.890 --> 03:39.370
Deseo ejecutar esta función y esta función es hacer clic en el registro de la consola.

03:39.460 --> 03:40.560
A ver si eso funciona.

03:40.720 --> 03:41.600
Y refrescarse.

03:41.620 --> 03:49.770
Y vemos que tenemos botón agregar evento de escucha no es una función y eso se debe a

03:49.830 --> 03:55.830
que recordar Obtener elementos por nombre de etiqueta devuelve una matriz de botones.

03:55.830 --> 04:07.870
Entonces, si copiamos y pegamos esto, vemos que para acceder al botón tenemos que ir a 0 para acceder al primer elemento de

04:07.870 --> 04:09.060
la matriz.

04:09.060 --> 04:12.670
Entonces ese es un error muy común que la gente comete.

04:12.670 --> 04:19.130
Entonces, asegúrese de que si obtiene este error, probablemente sea porque está tratando de usar un método

04:19.130 --> 04:24.300
en una matriz y necesita usar ese método en el elemento real OK.

04:24.430 --> 04:27.550
Permítanme cerrar eso y arreglar esto para

04:30.830 --> 04:39.170
decir que el primogénito perfecto Voy a guardarlo un poco más pequeño para que pueda ver y actualizar y puedo

04:39.170 --> 04:46.820
abrir la consola y ver qué sucede cuando hago clic clic clic clic clic clic clic OK .

04:46.880 --> 04:47.620
Entonces está funcionando.

04:47.620 --> 05:00.410
Estamos escuchando el evento de clic muy, muy bien. También puedo escuchar algo como mi centro y otro

05:00.800 --> 05:04.180
oído aquí y refrescarme.

05:04.280 --> 05:06.680
Puedes ver aquí que tan pronto como lo hago,

05:09.590 --> 05:10.960
la mayoría registra el evento.

05:11.210 --> 05:22.290
También puedes hacer una actualización con el mouse y cada vez que salgo me sale ese evento.

05:22.460 --> 05:23.270
Muy genial.

05:23.450 --> 05:26.500
Así que hay un montón de ellos todos vinculados a esto.

05:26.510 --> 05:28.000
Para que pueda comprobarlo usted mismo.

05:28.010 --> 05:33.280
Pero como dije, los eventos del teclado y del mouse son lo que le gustaría ver.

05:33.560 --> 05:38.990
Mirando esta lista, creo que podemos mejorarla.

05:39.020 --> 05:47.480
Creo que deberíamos tener una entrada y un botón donde podamos escribir algo y agregarlo a la

05:47.480 --> 05:49.410
lista de compras.

05:49.510 --> 05:51.000
Así que intentaré hacer eso.

05:51.360 --> 05:56.380
Y voy a borrar este código y quiero guardar y actualizar.

05:56.920 --> 06:04.390
Y también vamos a cambiar algunas cosas aquí en lugar de hacer clic en el

06:05.320 --> 06:16.280
botón que queremos decir Panter y obtendremos esta clase de Cantor y también necesitamos un implícito que voy a eliminar esta etiqueta p y

06:16.280 --> 06:23.790
en su lugar No tengo excusas de cómo voy a decir y poner texto de tipo.

06:24.240 --> 06:26.070
Recuerdas que ese es el valor predeterminado.

06:26.120 --> 06:33.480
Y también podemos agregar un marcador de posición de atributo para ingresar elementos.

06:33.500 --> 06:41.130
Entonces, si guardo y actualizo, tengo un marcador de posición y puedo escribir lo que quiera en este

06:41.130 --> 06:41.910
momento.

06:42.800 --> 06:43.900
Realmente no hacen nada.

06:43.940 --> 06:50.240
Idealmente, cuando hacemos clic en Intro, se agrega al final de la lista.

06:50.430 --> 06:51.440
Entonces, ¿cómo podemos hacer eso?

06:52.390 --> 06:55.410
Primero vamos a necesitar seleccionar estos elementos.

06:55.540 --> 07:02.110
Entonces, lo único que realmente me gusta hacer es asegurarme de que tengamos buenos nombres de clase o ID

07:02.110 --> 07:04.690
para estos elementos para poder tomarlos fácilmente.

07:04.720 --> 07:14.050
Así que definitivamente queremos tomar el botón que tiene una clase sobre enter, pero en realidad me gusta usar Id porque será realmente muy rápido para

07:14.060 --> 07:18.810
el navegador web tomar una Id porque solo hay una de ellas.

07:18.970 --> 07:22.320
En cuanto al rendimiento, aunque es muy minúsculo,

07:22.450 --> 07:23.200
ayuda.

07:23.200 --> 07:25.880
Así que voy a cambiar el Id de enter.

07:26.150 --> 07:32.990
Y también queremos obtener la entrada del usuario para poder darle un Id de entrada del usuario.

07:34.120 --> 07:42.400
Ahora abramos nuestro archivo de script dot JS y pensemos en las pocas cosas que queremos seleccionar.

07:42.510 --> 07:52.750
Queremos seleccionar la entrada y el botón para poder hacerlo firmando

07:52.990 --> 07:59.620
en el documento variable dot getElementById.

07:59.730 --> 08:02.070
Y aquí solo podemos decir Antar.

08:02.070 --> 08:08.910
Recuerde que firmamos esa identificación y la entrada será un documento.

08:08.940 --> 08:21.040
Obtenga ayuda y por id. Haremos una entrada del usuario aquí y queremos agregar un detector de eventos al botón.

08:21.160 --> 08:22.680
Entonces hagamos eso.

08:22.840 --> 08:35.260
Voy a decir que el botón Dot tenía escucha de eventos Queremos escuchar el evento de clic y queremos realizar la acción

08:35.290 --> 08:38.780
de la función por ahora.

08:38.860 --> 08:45.100
Antes de entrar en el código real, siempre es bueno probar lo que hemos escrito hasta

08:45.100 --> 08:50.760
ahora, así que solo vamos a hacer clic en el registro de la consola.

08:51.010 --> 08:56.970
Vamos a guardar, abrir la consola y actualizar.

08:57.120 --> 09:00.320
Y si hago clic, clic funciona correctamente.

09:00.370 --> 09:02.380
Todo se ve bien hasta ahora.

09:02.380 --> 09:04.880
Idealmente, podemos ingresar algo aquí.

09:05.050 --> 09:08.860
Y cuando hago clic en ingresar, se agrega al final de la lista.

09:10.640 --> 09:12.970
¿Cómo podemos hacer eso? Pensemos en esto.

09:13.070 --> 09:22.420
Lo primero que queremos hacer es que necesitamos crear otra alineación para que cualquier cosa que ingresemos en

09:22.420 --> 09:30.690
la parte inferior de la vela pueda usar algo llamado método de elemento de creación.

09:32.030 --> 09:43.910
Por lo tanto, podemos hacer que el aliado variable sea igual al documento. Crear elemento nuevamente. Otro método que el documento nos da un final

09:43.910 --> 09:47.390
aquí, solo decimos qué elemento queremos crear.

09:47.440 --> 09:53.980
En nuestro caso será una lista que un aliado puede ahora mentir.

09:53.990 --> 09:56.730
Acabamos de crear eso que vive en este mismo Bowl.

09:56.750 --> 09:59.620
Queremos adjuntarlo al final de la lista.

10:00.630 --> 10:06.850
Nuevamente, el objeto de documento nos da algo llamado append child.

10:06.890 --> 10:17.960
Entonces, si hago una mentira que agregue child ahora aquí para agregar a child si recordamos todo nuestro diagrama

10:17.960 --> 10:26.170
del dormitorio, vemos que cada elemento tiene un texto que se llamará nodo.

10:26.480 --> 10:32.310
Entonces necesitamos agregar una nota de texto, hagámoslo aquí.

10:32.410 --> 10:43.630
Tendremos que hacer algo llamado documento crear nodo de texto y luego aquí solo podemos decir probar.

10:43.650 --> 10:50.850
Así que ahora hemos adjuntado pruebas al aliado que acabamos de crear.

10:50.850 --> 11:02.360
Nuevamente volviendo a nuestro diagrama, he creado un elemento aliado y he agregado el texto de prueba.

11:02.510 --> 11:09.420
Entonces, lo último que debemos hacer es adjuntar esto a la lista desordenada.

11:09.430 --> 11:20.950
En este momento, lo que hemos hecho es haber creado un aliado que dice pruebas.

11:21.160 --> 11:26.790
Pero esto en realidad no está relacionado con nada, solo vive en nuestro programa.

11:26.800 --> 11:30.920
Pero necesitamos adjuntarlo a la lista desordenada.

11:31.730 --> 11:38.410
Y la forma en que lo hacemos es que tomamos la lista desordenada y luego la agregamos.

11:38.420 --> 11:50.250
Así que de nuevo vamos a seleccionar un selector de consultas de puntos de documentos de lista instados y

11:53.290 --> 11:56.030
los seleccionaremos a todos.

11:56.230 --> 11:57.970
Y ahora podemos decir

12:00.950 --> 12:02.550
que quiero

12:05.440 --> 12:12.570
adjuntar, así que adjúntale un niño. Bueno, eso es mentira cuando lo creamos.

12:13.470 --> 12:14.540
Así que veamos eso en acción.

12:14.540 --> 12:17.000
Voy a guardar y actualizar.

12:17.250 --> 12:18.540
Voy a cerrar la consola.

12:18.580 --> 12:23.440
Voy a presionar enter eso.

12:23.630 --> 12:24.650
Esta funcionando.

12:25.100 --> 12:26.500
Déjame refrescarlo de nuevo.

12:27.950 --> 12:28.850
Ahí tienes.

12:29.240 --> 12:32.520
Así que esto está funcionando y hemos aprendido algunas cosas nuevas aquí.

12:33.330 --> 12:36.750
Una es que podemos crear un elemento.

12:36.750 --> 12:43.070
Así que solo le damos la etiqueta que queremos crear, pero este elemento debe hacerlo.

12:43.110 --> 12:47.880
Bueno, si desea mostrar algo, debe tener algún tipo de texto dentro.

12:47.970 --> 12:50.440
Entonces eso es esto.

12:50.490 --> 12:57.200
Aquí y la forma en que funciona el modelo de objeto de documento es que para crear un texto, debe

12:57.380 --> 13:02.140
crear una nota de texto y poner lo que desee dentro de él.

13:02.630 --> 13:08.690
Ahora hemos creado el suministro, pero tenemos que adjuntarlo a algo que es parte de la vista real en

13:08.690 --> 13:09.470
este momento.

13:09.470 --> 13:19.620
En nuestro caso, queremos adjuntarlo a la lista desordenada y usar un hijo secundario que lo agrega como hijo, estos

13:19.620 --> 13:22.210
tres son bastante útiles.

13:22.420 --> 13:24.640
Así que solo tendrás que practicarlos y recordarlos.

13:25.430 --> 13:28.350
Pero tenemos algo trabajando aquí que es bueno.

13:29.340 --> 13:36.980
Pero idealmente podemos poner algo que ingresamos aquí y no solo una prueba estática.

13:37.050 --> 13:38.520
Entonces, ¿cómo podemos hacer eso?

13:38.800 --> 13:48.800
Ya tenemos la entrada capturada y la forma en que obtenemos el valor de una entrada es la entrada.

13:50.180 --> 13:58.700
Daut, ya no necesitamos los corchetes, es input dot thali y podemos probarlo aquí.

13:58.720 --> 13:59.710
El diálogo de Konsole

14:07.500 --> 14:08.430
se actualizó.

14:08.460 --> 14:17.260
Si hago clic en Entrar, me sale el saludo y también debería adjuntarse a la parte inferior aquí.

14:21.230 --> 14:21.640
OKAY.

14:22.120 --> 14:27.790
Entonces, tenemos una lista básica de cosas por hacer, podemos ingresar cosas y respuestas rápidas.

14:27.910 --> 14:35.750
Pero, ¿qué sucede si está vacío y hago clic en Intro en DC que sigue agregando cosas?

14:35.850 --> 14:44.520
Idealmente, podemos omitir que si la entrada está vacía, enter no debería hacer nada de la manera que lo hacemos.

14:44.550 --> 14:47.820
Bueno, parece que una declaración condicional podría ser útil aquí.

14:47.920 --> 14:52.000
Podemos hacerlo si el valor de entrada es.

14:52.240 --> 14:54.440
Bueno, ¿qué podemos hacer aquí para probar?

14:54.790 --> 15:02.680
Si recuerda que tenemos una propiedad de longitud completa en las cadenas, la propiedad

15:02.740 --> 15:08.500
de longitud nos dice cuántos caracteres tiene una cadena.

15:08.540 --> 15:16.520
Por lo tanto, podemos hacer algo en ese sentido para decir si pone un valor a todo lo que es mayor que cero.

15:17.590 --> 15:26.860
Entonces vamos a mover esto aquí.

15:27.070 --> 15:28.090
De lo contrario bien.

15:28.230 --> 15:31.640
De lo contrario, realmente no necesitamos hacer nada.

15:31.730 --> 15:36.600
Simplemente dejaremos que ese evento de clic ocurra sin ninguna acción.

15:36.720 --> 15:44.700
OK, veamos que en acción puede guardar y actualizar y no haré nada y presionar ENTER

15:45.150 --> 15:46.650
nada, presionar enter.

15:47.070 --> 15:51.720
Pero si escribo algo, lo agrega a la lista.

15:51.800 --> 15:57.290
Pero aquí hay otro problema que puedo seguir agregando para siempre.

15:57.300 --> 16:01.340
Idealmente, después de ingresar algo, todo se aclara.

16:01.390 --> 16:09.840
Permítanme actualizar y aquí, ¿qué podemos hacer al final de todo esto donde podemos decir y ponerlo

16:09.840 --> 16:14.080
en valor es igual a una cadena vacía?

16:16.050 --> 16:23.790
Después de crear el nuevo aliado y agregarlo a la lista desordenada, quiero que el valor de entrada ahora esté completamente vacío,

16:23.790 --> 16:25.160
una cadena vacía.

16:25.950 --> 16:28.120
Vamos a guardar y actualizar.

16:28.330 --> 16:34.620
Probemos ese hola, ingrese rápidamente y mire eso.

16:34.650 --> 16:39.570
Ahora tengo que escribir algo nuevo nuevamente.

16:41.590 --> 16:46.680
Todas las cosas correctas comienzan a verse mejor, pero es un poco molesto que tenga que seguir haciendo clic.

16:46.790 --> 16:52.230
Sería bueno también poder presionar Enter nuevamente si miramos los eventos.

16:52.230 --> 16:55.770
También tenemos eventos de teclado y pulsación de teclas.

16:55.770 --> 17:00.100
Bueno, como su nombre indica, escucha algún tipo de pulsación de tecla.

17:00.280 --> 17:05.900
Y afortunadamente para nosotros solo podemos escuchar la tecla enter o la tecla de retorno.

17:07.290 --> 17:09.580
Ahora, ¿cómo hacemos eso?

17:09.840 --> 17:10.970
Vamos a intentarlo primero.

17:11.020 --> 17:20.090
Bueno, solo copie y pegue esto y esta vez en la entrada que voy a decir en lugar del evento Click, voy a

17:20.150 --> 17:22.210
decir presionar la tecla.

17:22.220 --> 17:27.950
Así que estamos escuchando el evento de pulsación de teclas y queremos hacer exactamente lo mismo que hemos estado

17:28.420 --> 17:29.930
haciendo para que funcione.

17:29.930 --> 17:32.890
Entonces, ¿cómo sabemos cuándo se suprime la tecla Intro?

17:34.000 --> 17:42.260
Tendremos algo llamado códigos de caracteres y es que podemos escuchar qué tecla se escribió y cada una está asociada

17:42.260 --> 17:45.260
a un código con ese número.

17:45.290 --> 17:51.620
Entonces, de nuevo en este sitio web que está vinculado, puedo presionar una tecla aquí y me diré

17:51.980 --> 17:57.010
exactamente qué código tiene, así que si presiono Intro, obtengo el código 13.

17:57.170 --> 18:03.920
Entonces, estamos escuchando un código clave 13, pero nuevamente, ¿cómo accedemos a eso?

18:03.980 --> 18:06.130
Abre la consola aquí.

18:06.170 --> 18:14.530
Le mostraré que la forma en que lo hacemos es que escuchamos algo llamado punto de evento que voy a hacer

18:14.530 --> 18:15.610
para registrar

18:19.090 --> 18:26.890
esto ahora y aquí voy a comentar el software para que pueda ver cada vez que un evento Oyentes añadidos.

18:26.890 --> 18:32.540
Presionamos la tecla y esta función también recibe un parámetro automáticamente.

18:32.980 --> 18:34.300
Ese es el evento.

18:34.360 --> 18:37.700
Entonces podemos llamarlo podemos llamarlo evento.

18:37.720 --> 18:49.500
En mi caso, lo llamaré evento y ahora, cuando el usuario presiona una tecla, le da a esta función un evento de la descripción de ese evento que sucedió en

18:49.500 --> 18:55.070
realidad. La consola de Leisure registra el evento y ve de qué se trata.

18:55.110 --> 19:05.970
Voy a actualizar y decir mantener pulsada la tecla y ver que tengo el evento del teclado y aquí obtengo un montón de información sobre

19:05.970 --> 19:11.240
el evento que incluso recibí el momento en que presioné la tecla.

19:11.340 --> 19:18.760
Pero lo que es realmente importante aquí es que vemos

19:18.760 --> 19:33.900
que hay un código clave y también que ambos 107 si presiono Enter, vemos que el código clave es 13, que es 13.

19:34.060 --> 19:36.090
Vamos a intentarlo.

19:36.330 --> 19:52.580
Voy a decir ahora que si el valor de entrada es mayor que cero y si el código de clave de punto es igual a 13, agregue el elemento

19:53.150 --> 19:55.230
a la lista.

19:55.460 --> 19:57.790
Vamos a guardar y actualizar darle una oportunidad.

19:58.070 --> 20:05.970
Voy a decir que las listas de compras necesitarán pantalones o Precentor así.

20:07.280 --> 20:10.900
Y eso es para Jojo, lo agrega a

20:13.660 --> 20:21.530
la lista, todo se ve bien, pero hay un problema que tengo aquí y es que tenemos muchos

20:21.580 --> 20:22.900
códigos repetidos.

20:22.900 --> 20:24.780
Esto parece realmente innecesario.

20:24.790 --> 20:31.630
Y como dije antes, uno de los principios de ser desarrollador es seco, lo que significa que

20:31.630 --> 20:33.100
no se repita.

20:33.100 --> 20:35.320
Esto no es muy extenso o no lo es.

20:35.320 --> 20:40.810
Parece que solo estamos copiando y pegando código e imagina que si tuviéramos un montón de eventos, esto sería

20:40.810 --> 20:42.220
solo un archivo masivo.

20:42.340 --> 20:48.130
Así que extraigamos algo de la lógica y le mostraremos cómo podemos hacer algo llamado refactorización que hace que

20:48.130 --> 20:50.620
el código se vea un poco mejor.

20:50.620 --> 20:57.910
Una cosa que podemos hacer es que se ve en nuestro IF y estamos haciendo lo mismo, que es verificar que

20:57.910 --> 21:01.570
la longitud del valor de entrada sea mayor que cero.

21:02.020 --> 21:12.480
Entonces, si podemos agregar una función llamada y poner longitud completa y, como su nombre lo indica, verifica y pone

21:13.570 --> 21:21.420
ese valor en longitud, pero recuerde que como función necesitamos devolver algo de lo contrario.

21:21.480 --> 21:26.920
Bueno, vamos a ejecutar esta función y va a decir que indefinido e indefinido no puede ser indefinido a más

21:26.920 --> 21:27.750
de cero.

21:27.750 --> 21:29.250
Eso no tiene sentido.

21:29.280 --> 21:33.880
Así que devuelve el lenth.

21:33.900 --> 21:43.080
Entonces, nuevamente, hemos extraído eso para que podamos decir y poner lenth run que funciona, cualquiera de los retornos

21:43.080 --> 21:47.930
es mayor que cero y haremos lo mismo aquí también.

21:51.310 --> 21:58.090
Ahora que es un cambio menor, pero ahora tenemos algo que podemos usar en todas partes cada vez que creamos un

21:58.090 --> 21:59.470
nuevo oyente de eventos.

21:59.470 --> 22:00.940
¿Qué más podemos limpiar?

22:00.940 --> 22:06.130
Parece que todo este bloque de código se repite aquí.

22:07.090 --> 22:20.550
Entonces, nuevamente, podemos llamar a una función crear elemento de lista aquí, simplemente podemos eliminar este código agregado aquí y ahora podemos

22:24.060 --> 22:26.130
decir crear este

22:30.660 --> 22:39.410
elemento y nuevamente eliminar esto y decir crear este acuerdo, solo guardemos y veamos cómo

22:42.230 --> 22:45.640
funciona todo en este momento.

22:45.760 --> 22:54.660
Desea actualizar, asegúrese de que la consola no me dé ningún error y voy a decir Shell y, si

22:54.660 --> 22:55.470
presiono

22:58.090 --> 22:59.320
enter, todo funciona.

22:59.320 --> 23:04.040
Y en caso de que todo esté vacío, no puedo agregar nada.

23:04.040 --> 23:04.590
Todo bien.

23:04.590 --> 23:06.450
El código se ve bien.

23:07.360 --> 23:09.070
Se lee bastante bien.

23:09.920 --> 23:18.430
Lo último que tal vez quiero hacer es que en lugar de tener la función aquí, también puedo extraer eso.

23:18.460 --> 23:23.830
Puedo decir la función agregar lista después y solo podemos

23:28.910 --> 23:36.800
decir Copiar esta función y darle una palmadita en su y ya no necesitamos esta función.

23:40.730 --> 23:53.570
Y ahora solo podemos decir agregar la lista después de hacer clic y también podemos tener una lista de teclas de función después de

23:53.590 --> 23:55.570
presionar la tecla.

23:55.650 --> 23:58.650
Y aquí está la parte difícil.

23:58.700 --> 24:05.430
Ahora tenemos que copiar esto.

24:05.610 --> 24:12.290
Pero antes de dejar esta función, verá que necesitamos recibir un evento con esto.

24:12.480 --> 24:17.960
Entonces tiene que recibir un parámetro porque necesitamos esa información del evento.

24:17.970 --> 24:28.140
Entonces, nuevamente, cuando pasemos ese evento, eliminemos esta función y tengamos el código Tukey del evento.

24:28.240 --> 24:31.760
Veamos si todo funciona como se esperaba.

24:32.920 --> 24:36.730
Voy a guardar la actualización.

24:36.910 --> 24:42.300
Vea si hay algún error en la consola y presione agua.

24:42.790 --> 24:47.330
Eso es jugo de agua tiene jugo.

24:47.500 --> 24:52.080
Y si no presiono nada o no intento nada, todavía funciona.

24:52.120 --> 24:56.210
Miremos este código una vez más y veamos qué sucede.

24:56.230 --> 25:05.220
Comenzamos seleccionando los elementos que nos interesan y notamos aquí que no estamos constantemente cada vez que los necesitamos

25:05.230 --> 25:08.800
diciendo que el documento obtiene Al Lombardi.

25:09.100 --> 25:10.790
Estamos cobrando esto.

25:10.810 --> 25:14.830
Entonces, al principio, cuando se ejecuta el script, decimos: oye, recuerda esto

25:14.830 --> 25:17.520
Lo usaré y lo guardaré en bonos.

25:17.800 --> 25:18.950
Y lo mismo con Bud.

25:18.970 --> 25:20.640
Lo mismo con la lista desordenada.

25:22.030 --> 25:28.840
Luego tenemos un montón de declaraciones de funciones, pero estas nunca se ejecutan porque solo dicen oye, tenemos

25:29.080 --> 25:32.530
esta función pero nadie las ha ejecutado todavía.

25:32.720 --> 25:39.340
Y el programa va al final y dice oye, no tengo un escucha para klick si alguien hace clic

25:39.670 --> 25:42.250
en el botón para ejecutar esta función.

25:42.590 --> 25:49.200
Y si alguna vez alguien presiona la tecla en la entrada, llame a esta función.

25:49.330 --> 25:56.290
Y ahora, cada vez que hago clic en esto, se activa y pasa aquí y dice: hey tiene una longitud

25:56.290 --> 25:59.050
amplia mayor que cero si es así.

25:59.050 --> 26:01.740
Crea un elemento de lista.

26:01.990 --> 26:03.400
Y aquí está.

26:03.400 --> 26:10.500
Y si alguna vez tengo una tecla presionada, verifica si la entrada es mayor que cero.

26:10.750 --> 26:19.600
Luego verifico si presiono la tecla Intro y luego creo un elemento de lista y esto se ve bastante

26:19.630 --> 26:20.470
limpio.

26:20.560 --> 26:23.820
Cualquiera puede entrar si conoce un poco de JavaScript.

26:23.830 --> 26:29.350
Puedes leer lo que está sucediendo solo desde el código y eso es algo que realmente

26:29.350 --> 26:32.200
quieres esforzarte por lo que no quieres repetir.

26:32.200 --> 26:40.490
Desea almacenar en caché estas consultas para que no usemos demasiada energía para el navegador.

26:41.550 --> 26:49.450
Y tenemos todo desglosado en funciones que son muy, muy simples.

26:49.690 --> 26:50.990
Eso es todo por ahora.

26:51.010 --> 26:57.340
Agregue todos los elementos de la lista de compras que necesite y nos vemos en el próximo video. Adiós.
