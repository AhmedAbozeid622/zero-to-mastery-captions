WEBVTT

00:01.230 --> 00:02.620
Hola a todos.

00:02.700 --> 00:09.090
Ahora estamos listos para yes 10 o Xmas script 20 19.

00:09.120 --> 00:09.900
Está bien.

00:09.900 --> 00:10.620
Todos los años.

00:10.650 --> 00:14.460
Intentan constantemente mejorar el lenguaje y eso es javascript.

00:14.460 --> 00:18.370
Y ahora ESPN es el último.

00:18.410 --> 00:23.750
Entonces, ¿qué nuevas características obtenemos en esta nueva versión de JavaScript.

00:24.650 --> 00:27.890
Bueno, por suerte para ti no hay demasiados.

00:27.920 --> 00:38.290
Comencemos con mi favorito y se llama plano y plano es un método que podemos usar

00:38.530 --> 00:40.610
en una carrera.

00:40.640 --> 00:50.470
Permítame mostrarle lo que quiero decir, supongamos que tengo una variable de matriz que contiene una matriz muy emocionante de

00:50.470 --> 00:57.640
1 2 3 4 5 si ahora ejecuto la matriz de puntos planos.

00:57.680 --> 01:02.050
Copiemos este código y ejecútelo aquí.

01:02.100 --> 01:03.570
Qué piensas tú que sucederá.

01:04.140 --> 01:09.400
Pues absolutamente nada volvemos a una nueva matriz.

01:09.420 --> 01:17.540
Parece pero se ve exactamente igual, pero aquí es donde Flight se vuelve emocionante.

01:17.550 --> 01:20.350
Imagine si esto tuviera matrices anidadas.

01:20.430 --> 01:29.190
Entonces, por ejemplo, dos y tres donde su propia matriz y luego cuatro y cinco también eran una matriz anidada dentro de

01:29.190 --> 01:30.950
una matriz más grande.

01:31.170 --> 01:36.900
Si ahora copio esto y llamemos a esta matriz para averiguarlo.

01:36.930 --> 01:42.330
Copia esto y pégalo aquí. Hey, mira eso.

01:42.530 --> 01:46.160
Obtenemos una nueva matriz que se aplana.

01:46.340 --> 01:50.700
Es decir, ya no hay matrices anidadas.

01:50.920 --> 01:58.040
Muy bien, sigamos adelante y qué sucede si tenemos una matriz 3 y la matriz

01:58.190 --> 02:09.570
3 está aún más anidada de lo que teníamos antes, digamos que tenemos una dos tres como esta y luego tal vez tengamos una cinco

02:10.230 --> 02:14.270
que esté bien anidada bastante profunda como ese.

02:14.310 --> 02:21.450
Entonces, ahora tenemos una matriz, hay otra matriz y dentro de ella hay otra matriz.

02:21.510 --> 02:23.110
¿Qué crees que pasará aquí?

02:23.410 --> 02:27.360
Desea copiar y pegar ejecutar este código.

02:27.380 --> 02:28.420
Todo bien.

02:28.580 --> 02:36.550
Entonces obtengo una nueva matriz pero vemos que en realidad no hay una matriz completamente plana.

02:36.560 --> 02:44.970
En cambio, tenemos uno, dos, tres, pero luego cinco solo se aplanó un nivel, por lo que

02:45.150 --> 02:48.370
esencialmente solo se eliminaron estos corchetes.

02:48.380 --> 02:54.470
Ahora lo interesante con flat es que podemos decirle cuántas capas volar en la matriz.

02:54.620 --> 02:59.590
Entonces, si volvemos a nuestro ejemplo y aquí, el valor predeterminado era 1.

02:59.660 --> 03:01.370
Pero si cambiamos

03:04.260 --> 03:13.220
esto a dos ahora, copiemos y peguemos, actualicemos y volvamos a ejecutarlo para ver que tenemos una matriz completamente plana.

03:13.800 --> 03:20.680
Entonces, aquí puedo decirle cuántas veces quiero volar o cuántas capas quiero volar en la matriz.

03:20.750 --> 03:20.990
Todo bien.

03:21.000 --> 03:23.580
Pero tengo un ejemplo realmente emocionante para ti.

03:23.580 --> 03:25.620
Prepárate para esto.

03:25.650 --> 03:30.510
Felicitaciones, te acabas de convertir en el propietario de Jurassic Park.

03:30.510 --> 03:39.600
Tienes un parque con todas estas criaturas antiguas y el t rex aquí es extremadamente peligroso.

03:39.600 --> 03:40.180
Es por eso.

03:40.200 --> 03:48.090
Bueno, está en su propia área contenida del parque con muchas barricadas alrededor porque no queremos que el t

03:48.090 --> 03:50.090
rex se vuelva salvaje.

03:50.190 --> 03:52.710
Pero aquí está el problema.

03:52.790 --> 03:55.190
Eres un chico malo en Jurassic Park.

03:55.190 --> 04:02.610
Si te preguntara, ¿cómo puedes flanquear completamente esta matriz? ¿Cómo lo harías?

04:03.570 --> 04:04.560
Pausa el video.

04:04.560 --> 04:05.400
Piénsalo.

04:05.400 --> 04:07.070
Listo para la respuesta.

04:07.080 --> 04:16.980
Bueno, podemos hacer Jurassic Park dot flat y luego es posible que desee contar cuántas matrices están anidadas

04:16.980 --> 04:20.730
aquí, pero aquí hay un truco.

04:21.830 --> 04:31.870
Tal vez podría hacer 50, veamos qué sucede si copio esto, hagamos esto un poco más grande.

04:31.990 --> 04:33.480
Refresco aquí.

04:33.580 --> 04:35.190
Copia y pega esto.

04:35.230 --> 04:36.930
Veamos qué pasa.

04:37.060 --> 04:40.940
Y Jurassic Park debería ser Jurassic Park.

04:40.960 --> 04:42.430
Copiemos esto de nuevo.

04:42.460 --> 04:46.060
Vamos a refrescarnos

04:46.090 --> 04:47.070
Todo bien.

04:47.170 --> 04:52.220
Todas las barricadas han caído y los animales se están volviendo locos.

04:52.370 --> 04:56.800
Y elegí 50 al azar porque sabía que 50 no lo eran.

04:56.870 --> 05:02.720
Bueno, ¿cuántas matrices anidadas tenemos ahora en el ejercicio después de este video?

05:02.860 --> 05:10.600
Te mostraré un pequeño truco genial para asegurarme de que podamos financiar el máximo nivel, pero eso es para

05:10.600 --> 05:11.680
el ejercicio.

05:11.720 --> 05:20.440
Otra cosa realmente útil que puedes hacer con flat es decir que obtienes un montón de entradas y

05:20.440 --> 05:30.130
estas entradas de tus usuarios entran y tal vez obtengamos a Bob y Sally ingrese su nombre, pero luego también

05:30.130 --> 05:38.440
recibimos un montón de entradas que son completamente vacío con quizás Cindy al final aquí usando plano.

05:38.440 --> 05:47.870
De hecho, podemos desconectar las entradas y limpiar nuestros datos para poder decir que las entradas están planas como esta.

05:48.100 --> 05:58.000
Y si copio y pego este aspecto, me limpia los datos, lo cual es realmente muy bueno.

05:58.070 --> 05:58.550
Todo bien.

05:58.550 --> 06:10.980
La siguiente característica de ESPN es el mapa plano y el mapa plano, como su nombre lo indica, nos permite usar una función plana

06:11.910 --> 06:17.280
y la función o método de mapa en una matriz.

06:17.370 --> 06:19.680
Así que hagamos algo divertido aquí.

06:19.740 --> 06:25.100
Digamos que tenemos el Parque Jurásico nuevamente y esta vez vamos a usar un mapa plano.

06:25.140 --> 06:32.220
Entonces, digamos Jurassic Park y llamaremos a esta nueva variable.

06:32.290 --> 06:33.650
Hagamos concepto.

06:33.800 --> 06:35.210
Parque jurásico.

06:35.420 --> 06:40.020
Caos y este caos tendrá.

06:40.020 --> 06:44.230
Mientras que la matriz de Jurassic Park que teníamos arriba.

06:44.270 --> 06:46.160
Hagamos esto un poco más grande.

06:46.370 --> 06:49.730
Y ahora podemos usar un mapa plano para hacer algo interesante.

06:51.110 --> 07:01.670
Puedo decir que por cada objeto que nos vamos a divertir obtendremos una criatura y esta criatura que use las

07:01.670 --> 07:06.730
funciones de flecha obtendrá una criatura más el T-Rex.

07:06.740 --> 07:10.310
Así que voy a copiar el T-Rex por aquí.

07:10.430 --> 07:16.910
Así que cada criatura obtendrá un T-Rex como vecino, lo cual no es bueno.

07:16.910 --> 07:23.840
El T-Rex se los comerá a todos, es el T-Rex, no pueden carnívoros. No estoy seguro de que tengas que buscarlo en Google

07:23.840 --> 07:24.850
por tu cuenta.

07:25.240 --> 07:25.760
Todo bien.

07:25.820 --> 07:36.710
Entonces, tenemos el mapa plano del Parque Jurásico, así que estoy aplanar el Parque Jurásico y luego mapear sobre esta matriz

07:36.840 --> 07:42.170
aplanada y hacer una especie de función de mapa.

07:42.920 --> 07:53.230
Entonces, veamos qué sucede si ahora copio esto y lo pego si ahora miro qué es el caos de Jurassic Park

07:53.410 --> 08:04.680
y presiono enter, oh, mira, tenemos tx vecinos con todas las criaturas y, si bien es un caos absoluto y jurásico Park flat

08:04.740 --> 08:11.940
map nos permite usar la función básica del mapa y luego aplana el resultado

08:12.030 --> 08:14.980
a una profundidad de uno.

08:15.000 --> 08:16.500
Muy bien, sigamos adelante.

08:16.590 --> 08:19.030
El siguiente es uno muy muy simple.

08:19.050 --> 08:22.970
Digamos que recibe un correo electrónico de usuario y un correo electrónico de usuario.

08:22.980 --> 08:29.880
Bueno, se ingresó un poco incorrectamente, por lo que obtenemos un montón de espacios y luego

08:30.000 --> 08:39.200
tenemos a Eddie the Eagle en gmail dot com que recibimos del usuario o tal vez también tenemos un correo electrónico de usuario.

08:39.660 --> 08:50.610
Y esta vez, Johnny Dangerous en G. METRO. dot com ingresa su información pero nuevamente tenemos

08:50.610 --> 08:52.580
algunos espacios en blanco.

08:52.690 --> 08:53.930
Qué podemos hacer.

08:53.980 --> 09:04.890
Bueno, con la nueva característica de iOS 10, simplemente podemos decir que el inicio de recorte de puntos del correo electrónico

09:04.890 --> 09:17.600
del usuario comienza en una cadena y recortará el comienzo y el correo electrónico del usuario también puede decir recortar y el final de la cadena.

09:17.830 --> 09:20.800
Así que vamos a consolar el diálogo, registre esto

09:24.300 --> 09:33.460
y veamos qué sucede si copio esto y nos aseguramos de declarar estas variables, así que tenga cuidado y asegúrese de que pueda oler correctamente el

09:33.490 --> 09:34.600
correo electrónico.

09:34.600 --> 09:39.220
Si copio esto ahora y lo ingreso aquí, no

09:42.230 --> 09:48.870
sé si puede verlo, pero ahora mis cadenas no tienen espacios en blanco.

09:49.040 --> 09:57.890
Si reviso el correo electrónico del usuario aquí, verá que el espacio en blanco todavía está allí, pero el nuevo inicio

09:58.820 --> 10:04.720
de correo electrónico del usuario de cadena generado no tendrá espacios en blanco.

10:04.840 --> 10:08.840
Bonito y fácil.

10:08.890 --> 10:10.750
Muy bien, estamos volando a través de estos.

10:10.780 --> 10:11.760
Que sigue.

10:11.770 --> 10:13.650
Solo nos quedan unos pocos más.

10:13.720 --> 10:15.320
En realidad quedan dos más.

10:15.400 --> 10:18.570
El siguiente se llama entradas de formulario.

10:18.760 --> 10:23.950
Transforma una lista de pares de valores clave en un objeto.

10:23.950 --> 10:29.260
Déjame mostrarte lo que quiero decir, aclaremos esto y solo comentemos.

10:29.260 --> 10:30.440
Todo esto.

10:30.880 --> 10:36.650
Tal vez llevarlo al fondo y centrarse en este.

10:36.770 --> 10:48.630
Imaginemos que tenemos algunos perfiles de usuario que recibimos, pero estos perfiles de usuario están formateados de manera

10:48.630 --> 10:49.560
incorrecta.

10:49.560 --> 10:56.850
Entonces, digamos una matriz y dentro de una matriz tenemos los perfiles de usuario de un juego.

10:56.850 --> 11:07.330
Entonces tenemos que llamarlo Comandante Tom como el nombre del jugador y el Comandante Tom tiene 23 años.

11:07.360 --> 11:20.700
A continuación tenemos una serie de Derek Zealander y Derek Zealander, digamos 40, hagamos esto un

11:20.700 --> 11:23.960
poco más grande.

11:24.110 --> 11:34.190
Y finalmente, tenemos una matriz de Hansel y Hansel tiene 18 años, así que tenemos estos perfiles de usuario, pero como carrera no son realmente

11:34.250 --> 11:36.100
útiles en este momento.

11:36.110 --> 11:44.720
¿No sería genial poder convertirlos en un objeto donde cada nombre de usuario esté asociado con una H.

11:45.320 --> 11:48.460
Bueno, esto es exactamente para lo que se utilizan las entradas.

11:48.740 --> 12:03.320
Simplemente hacemos forma de punto de objeto o de entradas para que las entradas y las entradas reciban una matriz

12:03.320 --> 12:05.150
como esta.

12:05.150 --> 12:13.320
Así que hagamos perfiles de usuario aquí y veamos qué sucede pelear.

12:13.340 --> 12:14.210
Copia este

12:17.050 --> 12:18.350
código y pégalo aquí.

12:20.100 --> 12:21.270
Oye mira eso.

12:21.480 --> 12:24.940
Tenemos un objeto ahora con el comandante Tom.

12:24.940 --> 12:26.030
Veintitres.

12:26.040 --> 12:34.320
Derek Zealander tiene una clave y un valor de 40 y Hansel tiene una clave de Hansel y un valor de dieciocho.

12:34.440 --> 12:41.700
Ahora, el nombre puede desencadenar algo mientras está viendo esto porque en sí ocho hablamos

12:42.570 --> 12:45.370
de algo llamado entradas correctas.

12:45.720 --> 12:54.860
Las entradas de puntos de objeto nos permitieron hacer exactamente lo contrario.

12:54.880 --> 13:04.540
Entonces, por ejemplo, si esto ahora era un objeto, si hago entradas de objeto en este objeto ahora.

13:04.540 --> 13:07.150
Copiemos y peguemos las

13:09.770 --> 13:13.100
actualizaciones. Obtuve exactamente lo que tenía originalmente.

13:13.130 --> 13:16.570
Entonces, de las entradas, el nombre de las entradas simplemente proviene.

13:16.640 --> 13:18.880
Bien objeto entradas de puntos.

13:18.950 --> 13:19.310
Todo bien.

13:19.310 --> 13:19.800
Todo bien.

13:19.910 --> 13:21.310
Una última, lo prometo.

13:21.310 --> 13:22.500
Y luego terminamos.

13:22.640 --> 13:34.600
La última parte es una actualización de una característica que tenemos en JavaScript, que es el bloque try catch

13:34.600 --> 13:36.330
como este.

13:36.390 --> 13:42.810
Ahora, este bloque de prueba es algo de lo que vamos a hablar mucho más cuando ingresemos a la

13:43.170 --> 13:45.530
parte asincrónica de JavaScript del curso.

13:45.780 --> 13:53.730
Pero esencialmente el bloque try y cache en JavaScript nos permite probar una pieza de código y si

13:53.730 --> 13:56.350
hay algún error para detectarlos.

13:56.400 --> 14:09.560
Entonces, por ejemplo, si escucho, digamos cuatro más cinco y ejecuto este código, hago clic en Ejecutar y obtengo

14:09.670 --> 14:10.430
nueve.

14:10.590 --> 14:15.970
Es exactamente lo mismo que nosotros escribiendo cuatro más cinco.

14:15.980 --> 14:23.810
La única diferencia es que dentro de este bloque de tribu le estamos diciendo a JavaScript. Hey, intente esto y si hay

14:23.810 --> 14:29.110
algún error en la línea tres aquí, haga algo dentro del bloque de caché.

14:29.750 --> 14:44.580
Así que podría decir, por ejemplo, el registro de puntos de la consola que cometió un error y ahora, si lo hago, digamos verdadero o verdadero más alta fidelidad,

14:45.090 --> 14:56.010
copie y pegue esto y ejecute este código, me vuelvo verdadero debido a algo que hemos visto antes que es la

14:56.010 --> 14:57.830
coerción de tipo.

14:58.350 --> 15:07.470
Así que probó esto en javascript que es javascript válido porque se convierte en verdadero en una cadena y lo combina

15:07.470 --> 15:08.500
con alto.

15:08.640 --> 15:12.230
Pero si decimos hacer una variable que no hayamos visto antes.

15:12.240 --> 15:21.770
Entonces, en lugar de cierto, digamos que tenemos un disparo variable de bob, esto llego al bloque de caché que dice que cometiste un error

15:22.040 --> 15:29.990
porque mientras esto ocurre a través de un error y tan pronto como arroja un error, atrapa y aquí está la

15:29.990 --> 15:30.710
cosa.

15:30.710 --> 15:39.050
En realidad, vio una nueva característica aquí en ESPN porque en el día anterior al sí 10

15:39.050 --> 15:47.280
para que este código realmente se detectara, tenía que pasarle un objeto o parámetro de error.

15:47.280 --> 15:49.050
Entonces podría haber llamado a esto lo que quiera.

15:49.110 --> 15:55.850
Así que tuve que cometer un error como este para poder decir error.

15:56.040 --> 16:08.080
Entonces, si copio esta actualización y le damos a Bob aquí para que nos equivoquemos, lo confundiré, pero también me daré cuenta del

16:08.080 --> 16:12.150
error, que es un error de referencia.

16:12.250 --> 16:13.420
Bob no está definido.

16:14.260 --> 16:21.970
Entonces, antes de tener que pasarle un parámetro, de lo contrario, todo este bloque de código, incluso si funcionaba correctamente, en realidad

16:22.390 --> 16:25.840
sería un error porque no le pasamos el parámetro.

16:25.840 --> 16:32.260
Sí Stan, tenemos una actualización en la que no estás obligado a usar ese parámetro si no quieres.

16:32.290 --> 16:37.210
Nuevamente, esto es algo que cubriremos más adelante en el curso cuando hablemos

16:39.260 --> 16:44.190
sobre JavaScript asíncrono, oh chico, que parecía mucho pero quiero decir que no llovió demasiado.

16:44.330 --> 16:46.760
Agradable y fácil agradable y simple.

16:46.760 --> 16:48.670
Nos vemos en el próximo video.

16:48.670 --> 16:49.130
Adiós.
