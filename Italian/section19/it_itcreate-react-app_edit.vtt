WEBVTT

00:01.340 --> 00:02.130
Ben tornato.

00:02.180 --> 00:06.380
È ora di creare la nostra app Robo Friends per iniziare.

00:06.500 --> 00:08.850
Bene, apriamo il nostro terminale.

00:08.870 --> 00:11.050
Ormai dovremmo sentirci a nostro agio.

00:11.480 --> 00:17.960
Per questa sezione, consiglio vivamente di codificare e seguire i

00:17.960 --> 00:23.310
processi, perché imparerai molto meglio da solo.

00:23.360 --> 00:24.530
E come ho promesso.

00:24.530 --> 00:28.750
È abbastanza facile e alla fine avremo una bellissima app.

00:28.850 --> 00:35.450
Ma per coloro a cui piace solo guardare e lavorare in seguito, ti fornirò i file finali dell'app

00:35.540 --> 00:38.190
Robo Friends alla fine di questa sezione.

00:40.150 --> 00:40.590
OK.

00:40.860 --> 00:41.940
Quindi non abbiamo ancora niente.

00:41.970 --> 00:43.470
Siamo sul desktop.

00:43.470 --> 00:52.940
Dobbiamo effettivamente creare una cartella di progetto e dobbiamo installare reagire.

00:52.940 --> 01:01.490
Ora, se ricordi in NPM potremmo installare reagire e averlo come parte dei nostri pacchetti nel pacchetto. json - Ma c'è di nuovo uno

01:01.500 --> 01:02.350
strumento

01:02.530 --> 01:07.480
perché le app di reazione sono così comuni.

01:07.480 --> 01:15.320
C'è uno strumento che ci consente di creare subito un'app di reazione con tutti i nostri file già inseriti.

01:15.370 --> 01:18.050
Si chiama crea reattiva

01:20.580 --> 01:21.280
app.

01:21.680 --> 01:29.780
Questo strumento è un pacchetto globale che si desidera installare da NPM e crea un progetto iniziale che contiene

01:29.810 --> 01:36.270
un web pack che contiene babel in modo da poter utilizzare le ultime funzionalità JavaScript.

01:36.620 --> 01:41.860
Contiene lanugine e debug che non abbiamo ancora esaminato.

01:41.990 --> 01:46.880
Crea tutta questa infrastruttura per te così subito che puoi iniziare a scrivere l'app

01:46.880 --> 01:51.720
ed è un ottimo strumento che molte persone usano, quindi installeremo create-reagire-app.

01:51.740 --> 01:55.880
Se ricordi che semplicemente facciamo npm install dash g

01:59.110 --> 02:04.130
e questo ci darà di nuovo create-reagire-app se ricevi questi errori.

02:04.160 --> 02:07.220
Ricorda sempre di fare sudo

02:14.550 --> 02:20.920
ora che abbiamo create-reagire-app, semplicemente diciamo creare-reagisci-app e il nome della nostra app.

02:20.940 --> 02:25.390
Nel nostro caso lo chiameremo Robo Friends.

02:29.180 --> 02:36.010
Vedi che sta installando un sacco di cose di cui abbiamo bisogno.

02:36.400 --> 02:44.260
Sembra che sia un successo creato da Robo Friends nella mia directory e ti dà anche

02:44.290 --> 02:52.600
alcuni buoni comandi npm start npm run build npm test npm run eject ma ci arriveremo più avanti.

02:52.600 --> 02:55.940
Vediamo cosa abbiamo nella nostra cartella desktop.

02:57.120 --> 03:01.250
Abbiamo Robo Friends che è già stato creato per noi.

03:01.650 --> 03:03.270
OK andiamo su cd.

03:05.000 --> 03:14.690
E ora, se lo faccio, sembra che abbiamo un sacco di cartelle e file come il pacchetto. json che sono già stati creati per noi e

03:14.690 --> 03:18.150
moduli di nodi quanto è fantastico.

03:18.170 --> 03:23.790
Installa già reagisce e tutte le dipendenze di cui abbiamo bisogno.

03:23.930 --> 03:28.830
È un dato di fatto che se andiamo sul desktop vediamo la cartella qui.

03:28.970 --> 03:31.690
Quindi trasciniamolo su Sublime Text.

03:31.880 --> 03:36.740
Aprilo e cambierò le schermate in modo da poterle

03:40.280 --> 03:42.190
vedere entrambe contemporaneamente.

03:47.680 --> 03:56.180
Ora, prima di mostrarti cosa c'è nella cartella, vediamo che se andiamo al pacchetto. Json vediamo le dipendenze che abbiamo

03:56.180 --> 03:57.530
reagito.

03:57.530 --> 04:04.880
Abbiamo qualcosa che si chiama reagire-dom e reagire-script e abbiamo anche un sacco di script che hanno

04:04.970 --> 04:07.160
già creato per noi.

04:07.160 --> 04:10.850
Abbiamo iniziato a costruire test ed espellere.

04:11.010 --> 04:16.710
Cominciamo con start perché sembra che start legga gli script di reazione e avvii

04:16.710 --> 04:18.210
il nostro server.

04:18.210 --> 04:19.790
Quindi sto per

04:26.870 --> 04:35.990
dire che npm start guarda che abbiamo sul nostro localhost un'app di reazione di esempio in modo che tutto funzioni.

04:36.030 --> 04:40.200
Non abbiamo dovuto fare altro che eseguire solo due comandi.

04:40.470 --> 04:41.220
Molto bello.

04:41.400 --> 04:41.680
OK.

04:41.700 --> 04:46.530
Vediamo cosa ha creato per noi la creazione di una reazione.

04:46.530 --> 04:52.660
Abbiamo un readme che è solo un'informazione che se ricordi quando lo inseriamo su github

04:52.710 --> 04:53.820
questo verrà

04:53.840 --> 05:01.040
visualizzato nella cartella del progetto che abbiamo un pacchetto. JSON che ha di nuovo senso.

05:01.280 --> 05:03.500
Ti spiego cosa significano le dipendenze.

05:03.530 --> 05:04.710
nel prossimo video.

05:04.940 --> 05:12.110
Ma vediamo che gli script che ci vengono forniti e tutti usano script di reazione.

05:12.410 --> 05:16.540
Ora gli script di reazione sono ciò che rende

05:16.580 --> 05:22.960
così fantastica la creazione di app-reattiva invece di noi che installiamo cose come webpack e babel.

05:22.970 --> 05:29.330
Ti ricordi quanta configurazione abbiamo dovuto fare per far funzionare ES6 JavaScript.

05:29.480 --> 05:36.170
E poi usiamo anche browserify per raggruppare i file JavaScript e reagire bene gli script

05:36.170 --> 05:42.940
fa tutto per te e utilizza l'ultimo e il più grande di cui non dobbiamo preoccuparci.

05:42.950 --> 05:49.820
Quindi consente alle persone di creare app davvero molto veloci e puoi usare l'espulsione se finisci per voler

05:49.820 --> 05:53.610
personalizzare gli script di reazione e andare da solo.

05:54.020 --> 06:00.710
Quindi, man mano che il tuo progetto diventa sempre più grande, puoi sempre espellere e personalizzare la tua app, è il modo migliore per

06:00.710 --> 06:02.450
iniziare un progetto di reazione.

06:02.450 --> 06:06.920
È gestito dal team di Facebook ed è davvero molto buono.

06:08.580 --> 06:09.060
OK.

06:09.230 --> 06:16.910
Vediamo anche che c'è un blocco dei pacchetti. file json e questo è un file che viene generato automaticamente

06:16.910 --> 06:18.390
dal pacchetto. json

06:18.620 --> 06:26.000
Si assicura che i numeri di versione delle dipendenze siano bloccati in modo che se do questo progetto a

06:26.000 --> 06:33.350
chiunque altro in tutto il mondo, ci assicuriamo che le versioni siano corrette in modo che funzioni al

06:34.130 --> 06:35.300
100% delle volte.

06:36.370 --> 06:40.900
Abbiamo anche qualcosa chiamato git-ignore e ha un punto davanti.

06:40.900 --> 06:42.600
In realtà si chiama un file dot.

06:42.850 --> 06:47.230
E prima di eseguire git e spingere questo progetto su github.

06:47.560 --> 06:54.460
Bene controlla questo file e se vede qualcosa qui che non dovrebbe includere, dice automaticamente di

06:54.460 --> 06:56.030
ignorare questi file.

06:56.200 --> 07:01.720
Quindi ricorda come ho detto che i moduli del nodo non vogliamo inviarlo a un repository perché bene abbiamo un pacchetto. JSON crea un lavoro inutile e aspetta

07:01.720 --> 07:08.950
di spingere di nuovo bene il nostro progetto. Non ci interessa la cartella dei moduli di nodo, non ci

07:08.950 --> 07:13.780
interessa la cartella di copertura, che di nuovo riguarda i test, non è

07:13.780 --> 07:14.870
necessario coprirlo.

07:15.100 --> 07:18.430
Inoltre, non ci importa delle cartelle di build.

07:18.450 --> 07:25.940
E un paio di altri genera automaticamente questo per noi, non abbiamo bisogno di toccarlo.

07:26.120 --> 07:32.810
Quindi abbiamo ovviamente i nostri moduli di nodo e puoi vedere qui ce ne sono

07:32.840 --> 07:36.940
molti che di nuovo creano-reagiscono-app per noi automaticamente.

07:36.990 --> 07:41.850
Abbiamo anche una cartella pubblica e qui tutto dovrebbe essere familiare.

07:41.850 --> 07:48.730
Abbiamo un indice. HTML abbiamo qualcosa chiamato manifest. json È una nuova funzionalità

07:49.070 --> 07:56.750
che consente alle persone di scaricare un collegamento sul tuo sito Web e di avere un'icona sul desktop.

07:56.750 --> 07:58.640
Ma di nuovo non dobbiamo preoccuparci.

07:58.760 --> 08:06.620
E poi abbiamo favicon. ico che è la piccola icona che appare in alto

08:06.620 --> 08:13.060
qui e puoi cambiarla con qualunque cosa. file ico che desideri e ci sono strumenti online per generarli per te.

08:13.070 --> 08:14.970
Ancora una volta qualcosa di cui non dobbiamo preoccuparci.

08:16.520 --> 08:21.240
E infine abbiamo la cartella src che è la cartella di origine.

08:21.400 --> 08:25.090
Questo è dove avviene tutta la reazione magica.

08:25.370 --> 08:29.640
Se guardi l'indice. js quello è il file di script principale.

08:29.660 --> 08:37.100
Stiamo effettuando alcune importazioni che ricordi di importare solo script diversi e stiamo semplicemente dicendo questa nuova

08:37.100 --> 08:40.720
sintassi che non abbiamo mai visto prima.

08:40.730 --> 08:45.310
Il documento dell'app di rendering ReactDOM ottiene l'elemento per ID.

08:45.320 --> 08:46.890
OK lo sappiamo.

08:47.000 --> 08:55.420
Quindi stiamo afferrando un elemento di ID root e stiamo dicendo l'app di rendering ReactDOM.

08:55.700 --> 09:02.120
Se andiamo all'indice. il file html che vediamo qui e hanno

09:02.130 --> 09:11.580
dei commenti davvero belli che puoi leggere vediamo che all'interno del corpo c'è solo un div questo file noscript è nel caso in cui un browser

09:11.580 --> 09:13.260
non stia usando JavaScript.

09:13.260 --> 09:15.660
Ancora una volta non dobbiamo preoccuparci di questo.

09:15.690 --> 09:18.360
Viene fornito di default perché è una buona pratica.

09:18.630 --> 09:23.960
Ma nel corpo abbiamo solo questo div con ID root e nient'altro.

09:23.980 --> 09:26.160
Eppure quando andiamo alla nostra app lo vediamo.

09:26.370 --> 09:28.270
Beh, c'è sicuramente qualcosa lì.

09:28.360 --> 09:33.310
C'è almeno del testo qui e almeno un logo lì. Quindi tornando qui.

09:34.550 --> 09:37.010
Senza conoscere alcuna reazione possiamo dirlo.

09:37.170 --> 09:37.840
OK.

09:38.300 --> 09:48.820
Stiamo afferrando questa radice ID nell'indice. js file e stiamo dicendo che vogliamo rendere questo componente dell'app

09:49.300 --> 09:54.750
e questo è ciò che chiamiamo sintassi JSX che vedremo in seguito.

09:54.910 --> 09:59.030
Questa app è il modo di reagire per dire che questo è un componente di reazione.

09:59.050 --> 10:06.240
E voglio che tu renda sullo schermo nel corpo questo in modo che

10:06.550 --> 10:13.550
io possa davvero cambiarlo in Bene, possiamo dire h1 Hello World.

10:14.120 --> 10:18.760
Hello World h1 E ora, se lo salvo,

10:19.680 --> 10:29.520
noterai che la reazione lo compila automaticamente per noi, quindi non devo aggiornarlo e guardarlo sul

10:29.520 --> 10:32.490
nostro sito web abbiamo Hello

10:32.670 --> 10:33.860
World.

10:35.280 --> 10:36.490
Molto bello.

10:36.510 --> 10:39.450
Ancora una volta un'altra cosa grandiosa di create-reagire-app

10:39.450 --> 10:43.670
Ti dà anche avvisi che dice che l'app è definita ma mai usata.

10:43.680 --> 10:48.920
Quindi, se vado qui, sì, sto importando l'app ma non la utilizzo mai.

10:48.930 --> 10:56.740
Quindi nel nostro terminale riceviamo anche ottimi consigli su come migliorare l'app.

10:57.010 --> 10:57.490
OK.

10:57.750 --> 11:02.160
L'ultima cosa che voglio mostrarti prima di entrare nella prossima sezione in realtà iniziamo a

11:02.160 --> 11:05.800
scavare nel codice come puoi vedere la colorazione è un po 'fuori.

11:05.820 --> 11:12.280
E questo perché Sublime Text non capisce davvero cosa sta succedendo qui.

11:13.790 --> 11:21.080
Se lo cambiamo in Babel JavaScript, ci vai.

11:21.230 --> 11:26.720
Otteniamo la bella sintassi e tutto sembra a posto.

11:27.660 --> 11:28.500
Perfezionare.

11:28.560 --> 11:33.260
Abbiamo impostato la nostra app Voglio che tu cambi il tag qui in

11:33.270 --> 11:33.900
Hello

11:33.900 --> 11:37.540
World Per ora solo per assicurarmi che tutto funzioni.

11:37.660 --> 11:43.880
Ma per ora hai una configurazione nel prossimo video che esamineremo il resto dei file

11:43.880 --> 11:47.270
e inizieremo a costruire il nostro primo componente.

11:47.300 --> 11:48.430
Sarà molto divertente.

11:48.470 --> 11:49.410
Ci vediamo in quello. Ciao ciao
