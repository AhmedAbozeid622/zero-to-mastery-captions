WEBVTT

00:01.280 --> 00:02.510
Ben tornato.

00:02.750 --> 00:08.870
Voglio prendere un video per andare su qualcosa che potrebbe far inciampare molte persone

00:08.870 --> 00:19.830
quando iniziano per la prima volta con React. Ricorda, React è solo una libreria di livelli di vista. Quindi React consente solo

00:19.920 --> 00:29.720
di costruire interfacce utente basate sui componenti. E ha alcune soluzioni, come la sua gestione dello stato locale, e un modo

00:29.720 --> 00:34.040
semplice per gestire gli eventi per rendere possibili interazioni sul nostro sito.

00:35.440 --> 00:40.110
Ma alla fine della giornata, è una semplice libreria che aiuta con la vista.

00:40.360 --> 00:48.430
Una volta che inizi a creare applicazioni su larga scala, devi aggiungere React.

00:48.700 --> 00:55.630
Il potere di React deriva da questa capacità di virare su nuove funzionalità, nuove librerie ad esso. Per personalizzarlo, a proprio

00:55.630 --> 00:59.520
piacimento con la tua app.

00:59.660 --> 01:08.270
Quindi, man mano che le applicazioni crescono o inizi a lavorare per una grande azienda, vedrai che usano

01:08.360 --> 01:14.810
altri strumenti in cima a React. E volevo andare oltre, alcuni di quelli che sono i più comuni,

01:14.810 --> 01:16.270
comuni a vedere là fuori.

01:16.300 --> 01:20.710
Per prima cosa abbiamo 'REACT ROUTER' e questo è per il routing.

01:20.890 --> 01:29.080
Quindi, cambiando pagine e cambiando percorsi nel nostro URL, è praticamente lo standard, quando si tratta di qualsiasi progetto React

01:29.080 --> 01:30.190
e Redux.

01:30.520 --> 01:32.930
Quindi altamente raccomandato.

01:33.100 --> 01:35.010
Molto facile da usare.

01:35.320 --> 01:36.650
Molto facile da imparare.

01:36.700 --> 01:39.640
Ti ci vorrà un giorno e tu puoi sceglierlo abbastanza facilmente.

01:41.160 --> 01:49.650
Hai anche cose come librerie di utilità. E queste sono librerie che si aggiungono agli attuali strumenti javascript,

01:49.770 --> 01:52.440
che si ottengono fuori dagli schemi.

01:52.440 --> 01:56.740
Quindi pensaci come funzioni aggiunte a javascript.

01:56.950 --> 01:58.720
I più popolari sono 'Ramda'.

01:58.810 --> 02:06.080
Se vuoi davvero mantenere l'ideologia della programmazione funzionale, una libreria davvero buona. E c'è anche il "Lo dash" più popolare,

02:06.100 --> 02:16.690
che ti offre di nuovo degli strumenti extra che puoi usare con javascript. Vuoi anche pensare allo styling

02:16.820 --> 02:20.570
con React.

02:20.630 --> 02:27.380
E ancora, c'è un numero di strumenti che le persone usano per lo styling. C'è "glamour" che mi piace

02:27.380 --> 02:28.170
davvero.

02:28.250 --> 02:35.480
Ci sono "componenti stilizzati" che sono molto belli e molto simili a "glamour".

02:35.570 --> 02:38.520
E poi ci sono cose come "moduli CSS".

02:38.630 --> 02:46.490
Diciamo che questi tre sono probabilmente i migliori da usare se vuoi affrontare un modo più intelligente per gestire gli

02:46.580 --> 02:47.830
stili in React.

02:47.870 --> 02:50.300
E ancora, questi sono abbastanza facili da raccogliere.

02:50.300 --> 02:52.720
Puoi passare un giorno su di loro e prenderne il controllo.

02:53.860 --> 02:57.490
Successivamente, abbiamo qualcosa chiamato "gatsby dot js (gatsbyjs)".

02:58.060 --> 03:02.980
E questo è davvero molto buono per i siti web statici in React.

03:02.980 --> 03:06.340
Quindi questo è semplice sito web basato su testo.

03:06.460 --> 03:08.920
In realtà, se vai alla

03:18.840 --> 03:28.110
documentazione di React, la loro documentazione viene effettivamente pubblicata con "gatsby dot js (gatsbyjs)", perché sono semplicemente semplici pagine di

03:28.860 --> 03:29.640
testo.

03:29.760 --> 03:31.310
Funziona davvero molto bene.

03:33.430 --> 03:35.710
Poi c'è anche "Next

03:35.750 --> 03:41.510
dot js", estremamente popolare per le app di rendering lato server.

03:41.740 --> 03:45.490
E questo è qualcosa di cui parleremo quando arriveremo alla sezione lato server. E realizzeremo in

03:45.490 --> 03:52.330
realtà un semplice 'Avanti. l'app di js Ma molto popolare e lo

03:52.330 --> 04:00.040
consiglio vivamente se stai costruendo qualcosa di lato server. Probabilmente la prossima cosa è conosciuta per React e ho scelto due opzioni qui, ma ce ne

04:00.040 --> 04:01.230
sono così tante là fuori.

04:01.230 --> 04:05.920
React è davvero molto buono perché siamo in grado di costruire componenti riutilizzabili.

04:05.970 --> 04:12.270
Quindi, se costruisco un componente di calendario davvero interessante, posso metterlo online e altre persone possono semplicemente

04:12.270 --> 04:15.800
prendere quel componente e usarlo anche nei loro progetti.

04:16.770 --> 04:23.610
Quindi alcuni di quelli più grandi sono componenti "materiali", "materiali ui", che di nuovo puoi usare.

04:23.820 --> 04:33.940
E c'è anche la libreria 'semantic ui' che ha un sacco di componenti React che puoi usare.

04:34.050 --> 04:41.760
Ancora una volta, un altro fantastico motivo per usare React è, questi componenti che le persone condividono. E puoi semplicemente aggiungere al

04:41.760 --> 04:44.510
tuo sito web.

04:44.670 --> 04:49.810
E poi finalmente ci sono strumenti che rendono Redux migliore, più efficiente.

04:49.980 --> 04:56.310
Hai cose come, 'riselezione', che vedrai nella maggior parte dei progetti di Redux che aiutano

04:56.310 --> 05:01.620
con qualcosa chiamato selettori, e migliorare le prestazioni delle tue app.

05:01.650 --> 05:09.240
Hai anche cose come 'Redux-Saga' che, che gestisce azioni asincrone in Redux.

05:09.240 --> 05:16.080
Quindi, pensalo come redux-thunk ma sovralimentato. Così come le cose diventano sempre più complesse,

05:16.080 --> 05:18.510
hai sempre più azioni

05:18.510 --> 05:23.040
asincrone, potresti voler iniziare a guardare cose come "Saga di Redux".

05:23.040 --> 05:25.840
È un po 'complicato impararlo prima.

05:26.100 --> 05:28.500
E ci sono persone che lo amano e lo odiano.

05:28.500 --> 05:32.650
Ma sicuramente qualcosa che cerca di risolvere il problema di cosa facciamo quando

05:32.670 --> 05:36.200
iniziamo a ottenere applicazioni sempre più grandi e più grandi.

05:36.510 --> 05:43.950
E poi, hai anche qualcosa di simile a "IMMUTABLE" js, che puoi usare come libreria per assicurarti che il tuo

05:43.950 --> 05:49.260
stato rimanga immutabile e lo faccia valere tra i tuoi team di sviluppatori.

05:50.300 --> 05:57.310
Ora, non mi aspetto che tu conosca ognuno di questi e utilizzi ognuno di questi nei tuoi progetti.

05:58.420 --> 06:04.510
In effetti, voglio metterli in guardia contro di loro. E ogni volta che aggiungi qualcosa, chiediti, ne

06:04.510 --> 06:05.710
ho davvero bisogno?

06:05.710 --> 06:08.390
Qual è il vantaggio che sto ottenendo da questo?

06:09.640 --> 06:17.020
Perché aggiungere qualsiasi libreria al nostro progetto, aggiunge peso extra, aggiunge javascript extra che dobbiamo consegnare

06:17.020 --> 06:17.960
al cliente.

06:18.340 --> 06:26.140
Quindi assicurati, se stai aggiungendo una di queste cose, che hai una ragione giustificabile che migliora

06:26.230 --> 06:29.370
effettivamente il valore del tuo prodotto.

06:30.290 --> 06:32.820
E aiuta anche con lo sviluppo.

06:32.840 --> 06:38.930
Quindi, quando pensi al valore, non pensare solo a clienti e utenti che pensano anche ai team

06:38.930 --> 06:44.970
di sviluppatori e alle persone con cui lavori. Trarranno beneficio se aggiungete "IMMUTABLE" js alla base di codice.

06:45.260 --> 06:52.730
Oppure, è la curva di apprendimento extra e la frustrazione che, che gli sviluppatori potrebbero avere usando "IMMUTABLE",

06:53.060 --> 06:57.170
merita le garanzie che potrebbe aggiungere al tuo progetto.

06:58.010 --> 07:05.780
Tuttavia, volevo sottolineare che, come sviluppatore senior, considera sempre i pro ei contro, se hai bisogno

07:05.780 --> 07:13.940
di qualcosa e se hai bisogno di qualcosa, davvero analizzare, qual è lo strumento migliore per il lavoro.

07:13.940 --> 07:15.280
Mi sento come se avessi rotto un disco.

07:15.290 --> 07:22.700
L'ho già detto numerose volte, ma è un concetto davvero importante. Quindi non aggiungere 'IMMUTABLE' js perché lo hai letto in

07:22.880 --> 07:26.470
un post del blog, quindi tutti ne sono entusiasti.

07:26.480 --> 07:32.480
Ogni progetto è diverso, quindi devi essere in grado di prendere queste decisioni per te stesso, per il tuo progetto per

07:32.510 --> 07:33.940
il tuo team di sviluppatori.

07:35.690 --> 07:40.100
Va bene, basta parlare da me, ci vediamo nel prossimo. Ciao ciao
