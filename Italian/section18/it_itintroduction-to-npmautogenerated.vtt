WEBVTT

00:02.210 --> 00:10.700
NPM è stato creato per consentire agli sviluppatori di condividere il codice JavaScript che hanno scritto. In questo modo qualsiasi sviluppatore in tutto il mondo

00:10.790 --> 00:16.660
può prendere il codice di qualcun altro che può risolvere il suo problema.

00:17.780 --> 00:23.780
Questo crea una grande base di conoscenze di script che le persone possono costantemente aggiornare,

00:23.780 --> 00:26.330
migliorare e sviluppare. È un dato

00:26.330 --> 00:32.140
di fatto, è molto raro che un'app o un sito Web in questi giorni siano costruiti esclusivamente da zero.

00:32.990 --> 00:39.140
Usando l'intelligenza collettiva possiamo prendere pezzi di codice che sono davvero buoni e costruirci sopra per

00:39.140 --> 00:40.950
creare il nostro prodotto.

00:41.710 --> 00:48.070
Ad esempio, usando JavaScript puoi scrivere applicazioni di realtà virtuale ma non devi

00:48.070 --> 00:50.120
capire tutto da solo.

00:50.140 --> 00:56.980
Qualcuno là fuori ha già lavorato sulla possibilità di utilizzare JavaScript VR Quindi usi il codice di quella persona per iniziare

00:56.980 --> 00:58.200
il tuo progetto.

00:58.270 --> 01:01.190
Parliamo di come funziona NPM.

01:02.650 --> 01:05.490
NPM è simile a questo.

01:05.560 --> 01:13.180
Un sito Web con una barra di ricerca assomiglia a Google, ma qui puoi cercare ciò

01:15.210 --> 01:23.180
che chiamiamo Pacchetti e questi pacchetti si trovano nel registro NPM e questo registro tiene traccia dei file

01:23.180 --> 01:25.130
che sono stati inviati.

01:25.180 --> 01:33.100
Chiunque può inviare questi file chiamati pacchetti o moduli e contengono due cose; Un file JavaScript e

01:33.100 --> 01:35.640
un pacchetto. file json.

01:35.680 --> 01:43.010
e il pacchetto. Il file json che non hai mai visto prima è un

01:43.280 --> 01:45.020
metafile che descrive questo pacchetto.

01:45.230 --> 01:54.540
Quindi puoi vedere qui che questo registro NPM è solo un registro di tutti questi file JavaScript che altre persone

01:54.570 --> 01:55.770
hanno scritto.

01:56.850 --> 02:03.090
E l'idea è di avere piccoli file JavaScript che facciano una cosa davvero molto bene in modo che altre persone

02:03.270 --> 02:03.950
possano usarla.

02:05.140 --> 02:16.820
Quindi componi o combini diversi pezzi di codice e diversi pacchetti sul tuo progetto per aggiungere funzionalità e non devi riscrivere qualcosa

02:17.660 --> 02:22.400
che è già stato scritto da un'altra persona.

02:23.110 --> 02:29.980
Quindi, come puoi vedere qui, diciamo che una persona che ha appena scritto un file JavaScript è

02:29.980 --> 02:30.970
davvero utile.

02:30.970 --> 02:39.100
Beh, pensano che altre persone potrebbero essere in grado di usarlo, quindi lo spingono nel registro NPM e usando

02:39.100 --> 02:46.670
la barra di ricerca qui qualcuno può trovare il tuo pacchetto, forse stanno cercando un file di script

02:46.720 --> 02:52.460
che crea un elenco di array per le persone interessate ai gatti.

02:52.570 --> 03:02.100
Bene, allora sono in grado di trovare questo file e scaricarlo dal registro NPM sul proprio computer.

03:02.170 --> 03:05.140
Quindi parliamo dei vantaggi di questo.

03:06.470 --> 03:11.360
Bene, ottieni esperienza dagli altri, forse non sai tutto, forse gli altri sono

03:11.370 --> 03:13.560
meglio di te in questa

03:13.630 --> 03:18.280
certa cosa e usi bene quella conoscenza collettiva per usare il loro codice.

03:19.180 --> 03:21.580
Ma c'è anche un aspetto negativo di questo.

03:21.780 --> 03:24.770
Non tutti i pacchetti sono un buon codice.

03:24.840 --> 03:34.080
Chiunque può mettere i propri file su NPM e si stanno anche aggiungendo più byte al progetto, il che aumenta ulteriormente

03:34.080 --> 03:36.210
le dimensioni del progetto.

03:36.210 --> 03:43.940
Se hai tutti questi file nel tuo progetto, beh, ci sono molti file e ognuno

03:43.940 --> 03:47.820
dovrà essere inviato dal server al browser.

03:48.050 --> 03:54.110
E come sapete dalle sezioni precedenti, vogliamo ridurre al minimo le dimensioni del nostro progetto, quindi

03:54.250 --> 04:01.540
abbiamo creato app Web veloci e c'è un'arte per trovare buoni pacchetti NPM e vi abituerete dopo un po 'di

04:01.540 --> 04:02.300
esperienza.

04:04.270 --> 04:08.380
Quindi non preoccuparti. Ora vedi anche qui che ho qualcosa chiamato filato.

04:08.690 --> 04:15.320
thread utilizza ancora il registro NPM ma potresti vederlo ogni tanto, proprio come NPM.

04:15.370 --> 04:19.010
È uno strumento per prendere le cose dal registro NPM.

04:19.030 --> 04:26.560
Non ne parleremo in questo corso, ma tieni presente che sia il filato che l'NPM sono molto simili.

04:26.560 --> 04:32.800
Se ne impari uno, allora conosci l'altro, quindi non temere se senti parlare di un

04:32.800 --> 04:38.470
progetto che utilizza filati anziché NPM. Ora puoi navigare in NPM e trovare cose.

04:38.790 --> 04:42.840
Ma di solito ci sono tre tipi di pacchetti.

04:43.060 --> 04:46.640
Uno sono i pacchetti che è possibile utilizzare sul browser.

04:46.640 --> 04:52.390
Quindi sul front-end, in modo che sia possibile scaricare JQuery da NPM.

04:52.850 --> 04:58.010
Puoi scaricare tutti i tipi di script che ti aiutano con il flusso di lavoro del front-end.

04:58.030 --> 05:04.330
Il secondo tipo sono quelli che ti danno nuovi comandi che puoi usare sulla riga di comando e ti mostrerò un

05:04.330 --> 05:06.760
esempio che più avanti in questa sezione.

05:06.790 --> 05:15.100
E infine il terzo tipo di pacchetto NPM è una volta che puoi usare su Node. js sul back-end.

05:15.100 --> 05:21.640
E questo potrebbe sembrare spaventoso per te ma non preoccuparti quando arriviamo al Nodo. Nella sezione js, ti mostrerò alcuni dei pacchetti Node

05:21.640 --> 05:25.240
che puoi usare, ma è praticamente la stessa cosa di JavaScript.

05:25.480 --> 05:29.610
È un dato di fatto che NPM sta per Node Package Manager.

05:29.620 --> 05:35.200
Inizialmente è stato creato per il nodo ma era così buono e così popolare che ora puoi usarlo anche per

05:35.200 --> 05:36.220
il Front End.

05:36.930 --> 05:38.820
Ma è sempre la stessa cosa.

05:38.820 --> 05:40.430
Funziona tutto allo stesso modo.

05:40.530 --> 05:43.330
Come ho detto prima, sono solo degli

05:43.350 --> 05:49.710
script che sei in grado di usare che altre persone hanno scritto e li useremo molto in questo corso.

05:49.710 --> 05:53.730
Ora potresti chiederti, perché stiamo imparando questo.

05:53.790 --> 05:57.600
e questo corso? Voglio dire, è davvero così importante?

05:57.960 --> 06:00.710
Sì, in realtà ci sono tre cose da fare.

06:00.810 --> 06:06.570
Ora quando inizi un progetto e lo vedrai in ogni singolo progetto.

06:06.570 --> 06:09.690
Uno è che, beh, hanno un file HTML,

06:09.820 --> 06:12.610
un file CSS o un file JavaScript.

06:12.960 --> 06:18.660
Potrebbero averli: potrebbero avere molti di questi, ma tutti i progetti hanno quelli in particolare quelli

06:18.660 --> 06:19.820
basati sul web.

06:19.830 --> 06:27.060
Devi anche avere il tuo progetto su github e usare il controllo del codice sorgente come Git. Nessuno memorizza il proprio progetto sul proprio

06:27.060 --> 06:28.260
computer.

06:28.260 --> 06:31.820
Lo hanno sempre con il controllo del codice sorgente.

06:31.950 --> 06:39.090
E infine gestisci dipendenze che sono pacchetti scritti da altre persone. Con NPM usando il

06:39.300 --> 06:41.480
pacchetto. file json.

06:41.490 --> 06:48.300
Quindi in questa sezione lavoreremo su questo e finiremo il nostro set up di come appare un

06:48.300 --> 06:52.520
tipico progetto e sappiamo come fare i primi due, giusto?

06:52.770 --> 06:58.650
Ora nei prossimi due video ti mostrerò come iniziare a usare NPM per scaricare file

06:58.650 --> 07:01.900
e usare il pacchetto. json per gestire quei file.

07:02.250 --> 07:07.060
È una parte critica del flusso di lavoro di uno sviluppatore. Quindi ci vediamo nel prossimo. Ciao ciao.
