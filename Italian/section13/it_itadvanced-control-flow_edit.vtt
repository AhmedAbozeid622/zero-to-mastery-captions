WEBVTT

00:01.010 --> 00:09.890
Fino a questo punto abbiamo appreso l'istruzione 'if', l'istruzione 'if else' e l'istruzione 'else if' E se ricordi

00:09.890 --> 00:17.660
la struttura della nostra sezione, non abbiamo menzionato questi due per i condizionali javascript.

00:17.660 --> 00:19.660
Quindi affronteremo quelli oggi.

00:20.060 --> 00:24.190
Come puoi vedere ne abbiamo altri due da superare ma non aver paura.

00:24.290 --> 00:27.360
Questi non introdurranno nulla di nuovo.

00:27.360 --> 00:33.170
Esistono diversi modi per eseguire il flusso di controllo, ma non faranno nulla che un'istruzione if else semplice

00:33.330 --> 00:34.560
non possa fare.

00:34.940 --> 00:43.790
Tuttavia, ci sono casi in cui sarà molto più facile fare questi due, se facciamo qualcosa con la

00:43.790 --> 00:45.490
frase "if else".

00:45.920 --> 00:47.330
Quindi proviamoli.

00:47.360 --> 00:50.870
La prima cosa di cui parleremo è l '"operatore ternario".

00:50.870 --> 00:56.150
Sembra qualcosa del genere, "condizione?

00:58.740 --> 01:02.310
'espressione uno (expr1) o espressione due (expr2).

01:06.230 --> 01:10.820
E questa è la sintassi. Dice: è vero o falso?

01:11.000 --> 01:14.790
Se è vero, fornire questo valore (expr1).

01:15.170 --> 01:17.870
Se è falso fornire questo valore (expr2).

01:18.230 --> 01:27.260
Lascia che ti mostri un esempio di questo, avrà una funzione chiamata 'isUserValid' che accetta un valore

01:29.570 --> 01:34.190
booleano (bool) e restituirà semplicemente il valore booleano.

01:36.190 --> 01:48.670
Ora qui possiamo dire che la risposta variabile equivale a "isUserValid" e diremo "vero" per ora il punto interrogativo

01:48.670 --> 01:50.090
(? )

01:50.290 --> 01:54.820
Quindi, se è vero, dirò "È possibile inserire",

01:58.300 --> 02:03.630
altrimenti dirò "Accesso negato". Consentitemi di renderlo un po 'più piccolo

02:03.850 --> 02:06.600
in modo da poterlo vedere.

02:06.820 --> 02:12.790
Quindi di nuovo tutto ciò che stiamo dicendo è se questo è vero, quindi fai questa espressione ("Puoi inserire")

02:12.790 --> 02:15.960
Se questo è falso, fai questa espressione ("Accesso negato").

02:16.110 --> 02:19.300
Quindi basta copiarlo nella console e vedere cosa succede.

02:21.520 --> 02:27.780
Se corro "anwer", Whoops lo scrivo in modo sbagliato, "rispondi".

02:28.790 --> 02:33.570
Ottengo, "È possibile inserire" perché l'utente è valido (isUserValid) è

02:33.580 --> 02:34.600
vero.

02:34.640 --> 02:47.030
Ora, se ho cambiato questo per dire "falso", beh in quel caso otterrò "Accesso negato" Facciamo un po 'più di

02:47.030 --> 02:49.040
una risposta complicata.

02:49.100 --> 02:58.870
Possiamo dire variabile (var) "automaticAnswer" e possiamo dirlo e lo farò su una nuova riga solo in

02:59.050 --> 03:08.880
modo che tu possa vedere "Il tuo numero di conto è", "isUserValid" e diremo semplicemente qualcosa del genere.

03:08.880 --> 03:10.140
'falso' per ora.

03:10.140 --> 03:16.680
Quindi, poiché abbiamo queste parentesi, avremo un'espressione dentro di noi che possiamo valutare in modo da poter

03:16.680 --> 03:18.990
dire che l'utente (isUserValid) è valido.

03:19.020 --> 03:23.280
Se l'utente è valido dirà '1234'.

03:23.420 --> 03:28.940
In caso contrario, diremo "non disponibile".

03:31.780 --> 03:37.830
Se lo copiamo e incolliamo qui, nella nostra console e possiamo vederlo meglio.

03:37.870 --> 03:39.880
Vediamo, se l'utente

03:39.880 --> 03:42.610
è valido (vero) Vogliamo dire '1234'.

03:42.640 --> 03:45.070
Se non è quindi "non disponibile".

03:45.070 --> 03:54.490
Quindi, se eseguo questo e ora guardo la risposta automatica, ottengo bene "Il tuo numero di conto non è disponibile", perché questo

03:54.700 --> 03:56.920
valore utente è "falso".

03:56.920 --> 04:08.190
Ma se faccio 'vero' bene in quel caso il tuo numero di conto è '1234'.

04:08.210 --> 04:14.120
Ora potresti notare che questo in realtà non è così diverso

04:14.120 --> 04:18.170
da quello che hai fatto, "condition

04:21.600 --> 04:27.260
condition" è stata chiamata condizione e dirà "if isUserValid" return.

04:27.290 --> 04:28.490
'Puoi

04:31.510 --> 04:33.670
inserire' e

04:36.450 --> 04:55.330
hai fatto 'altro' 'return Accesso negato' questa funzione qui, 'condizione', se dico variabile (var) 'risposta2' uguale a 'condizione'.

04:55.570 --> 04:56.790
Vediamo cosa succede.

04:59.380 --> 05:09.680
Copia questi due, eseguili e ora se guardo la "risposta" ottengo "Puoi entrare" se ottengo la

05:09.690 --> 05:13.120
"risposta2" ottengo "Puoi entrare".

05:13.290 --> 05:18.280
Ora è esattamente la stessa cosa oltre a un po 'di errori di ortografia da parte mia.

05:19.630 --> 05:28.710
Ma vedi che un modo è molto più bello, è solo una bella riga semplice. Un operatore ternario è davvero buono per questi "se

05:28.710 --> 05:36.060
altro" dove c'è un controllo per una condizione e ci sono due possibili espressioni che ne

05:36.060 --> 05:36.790
derivano.

05:38.410 --> 05:44.350
Bene, impariamo, il prossimo, che è l'istruzione 'switch'.

05:45.390 --> 05:46.290
Questo è quello divertente.

05:47.350 --> 05:49.750
Quindi un'affermazione s'witch sembra qualcosa del genere.

05:49.770 --> 05:53.980
E ora possiamo creare un gioco semplice per dimostrare come funziona.

05:54.070 --> 05:58.720
Posso dire la funzione 'moveCommand'.

05:59.350 --> 06:05.120
E diremo che accetta il parametro 'direction' all'interno di questa funzione.

06:05.130 --> 06:12.790
Dirò variabile (var) 'whatHappens' e diremo 'switch'.

06:12.810 --> 06:13.850
Si noti che è una parola chiave.

06:13.850 --> 06:16.140
Quindi ora è evidenziato in rosso.

06:16.160 --> 06:19.000
E dirò 'direzione'.

06:19.160 --> 06:23.790
L'istruzione 'switch' accetterà 'direction' controllerà 'direction'.

06:25.430 --> 06:37.600
E all'interno qui diremo 'case' 'forward' che significa check 'direction' se 'direction' è uguale

06:37.820 --> 06:42.410
a 'forward', quindi 'whatHappens'

06:42.900 --> 06:49.360
è uguale a 'Incontrare un mostro;' 'rompere;'.

06:49.390 --> 06:54.750
Spiegherò più "break" subito dopo aver finito il resto delle dichiarazioni del caso.

06:54.790 --> 07:01.210
Quindi le dichiarazioni di casi come puoi vedere sono davvero buone perché posso solo copiare e incollare.

07:01.470 --> 07:14.550
E ora posso dire per qui diremo 'indietro' e se la direzione è 'indietro' diremo 'Sei arrivato a casa'

07:14.550 --> 07:29.320
se la direzione è 'giusta' in quel caso diremo 'Hai trovato un fiume' e se la 'direzione' è 'a sinistra' diremo

07:30.670 --> 07:34.050
'Corri in un troll'.

07:35.280 --> 07:39.930
E poi finalmente diremo 'default'

07:43.330 --> 07:49.840
'whatHappens' equivale a 'per favore inserisci una direzione valida'.

07:52.740 --> 07:58.530
E finiremo con un 'ritorno' 'whatHappens'.

07:58.530 --> 07:58.950
Tutto ok.

07:58.950 --> 08:01.170
Era un sacco di codice.

08:01.170 --> 08:06.080
Eseguiamo prima questo comando e poi spiegheremo esattamente cosa sta succedendo.

08:06.090 --> 08:07.030
Copia il codice

08:08.000 --> 08:10.160
Copia nella console.

08:10.160 --> 08:11.760
E ora

08:11.840 --> 08:22.300
abbiamo il 'moveCommand' E se ricordi l'ultimo video 'moveCommand' ora esiste nell'ambito root che è window, quindi qui dentro.

08:22.330 --> 08:31.860
Diciamo solo 'avanti', ora se corro questo ottengo 'Hai incontrato un mostro'.

08:32.030 --> 08:36.640
Se torno "indietro", "sei arrivato a casa".

08:36.640 --> 08:40.320
Se vado "a destra", "Hai trovato un fiume".

08:40.690 --> 08:51.070
Se vado "a sinistra", "Ti imbatti in un troll" e se scrivo in modo bizzarro ottengo.

08:51.090 --> 08:53.000
'Inserisci una direzione valida'.

08:53.980 --> 08:58.510
Questo è ciò per cui le istruzioni switch sono davvero utili quando si hanno molte condizioni.

08:58.510 --> 09:07.470
Invece di usare un'istruzione 'if else', 'if else', 'if else', 'if else', 'if else', puoi usare un'istruzione 'switch' e

09:08.070 --> 09:10.710
puoi vedere, si legge bene.

09:10.710 --> 09:16.760
In sostanza, ciò che sta dicendo è creare la variabile 'whatHappens' quindi passare.

09:16.770 --> 09:23.660
Voglio che tu controlli qualunque sia la condizione, qualunque sia la variabile, in questo caso è la direzione.

09:23.970 --> 09:30.190
E nel caso in cui la direzione sia "avanti", fare questo, nel caso in cui la direzione sia "indietro", fare questo.

09:30.240 --> 09:33.810
Se è 'giusto' fallo, se è 'sinistro' fallo.

09:33.810 --> 09:42.060
E dice che "default" è se nessuna di queste condizioni funziona e ricorda che il programma va riga per riga, quindi controlla

09:42.060 --> 09:46.260
"avanti", quindi controlla "indietro" e controlla "destra" e i controlli "sinistra".

09:46.280 --> 09:53.940
E se nulla di questi corrisponde, allora dice che puoi semplicemente "inserire una direzione valida" e

09:53.940 --> 09:59.700
quindi restituiamo "whatHappenes" in modo che la funzione restituisca qualcosa per noi.

09:59.710 --> 10:05.460
Ora finalmente qual è la 'rottura', la 'pausa' (s) dice semplicemente, se

10:06.850 --> 10:12.260
'case' è 'forward', allora assegna 'incontri un mostro' alla variabile

10:12.280 --> 10:18.620
'whatHhappens' e poi 'break', 'break' è sto solo dicendo di uscire dall'istruzione switch.

10:18.640 --> 10:24.720
Quindi, invece del programma, controlla se 'case' è 'back', 'case' è 'right', 'case' è 'left' o 'default'.

10:24.850 --> 10:33.550
Se diciamo "break", il programma si ferma qui e quindi esce direttamente dall'istruzione switch per restituire

10:33.910 --> 10:34.870
"whatHappens".

10:35.140 --> 10:46.830
Quindi, se lo faccio davvero, "rompi" prima di "whatHappens", "incontri un mostro" e copio questo e eseguiamo

10:49.680 --> 10:58.820
nuovamente la funzione, diremo che "moveCommand" è "forward" e noti cosa succede ora.

10:59.840 --> 11:06.930
Vengo 'indefinito' perché abbiamo rotto il programma entra dicendo: Oh sì!

11:07.320 --> 11:14.010
Ha digitato "forward" ma prima di poter assegnare qualcosa alla variabile dico

11:14.040 --> 11:21.530
"break", esco dall'istruzione switch e restituisco "whatHappens" che è stato dichiarato ma non assegnato.

11:21.530 --> 11:26.630
Quindi ritorno "indefinito".

11:26.680 --> 11:32.530
Bene, ce l'hai, i tuoi altri due condizionali e li hai coperti tutti in javascript.

11:32.530 --> 11:39.710
Ora ognuno è buono per il suo caso individuale, ma sono tutti molto utili.

11:39.760 --> 11:41.470
Ci vediamo nel prossimo
Buh-bye.
