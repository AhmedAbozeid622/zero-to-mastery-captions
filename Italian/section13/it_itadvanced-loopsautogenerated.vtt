WEBVTT

00:00.870 --> 00:07.300
Bentornato, voglio parlarti un po 'del loop javascript.

00:07.430 --> 00:13.760
Vedete, in realtà ho lasciato fuori alcuni altri modi in cui possiamo girare in javascript.

00:13.790 --> 00:23.270
Abbiamo parlato dei nostri quattro loop mentre i loop sono dovuti mentre i loop e ne abbiamo anche parlato per ciascuno.

00:23.510 --> 00:31.040
Ma in realtà ci sono altri due modi in cui possiamo girare in javascript e ti mostrerò

00:31.040 --> 00:33.720
come farlo in questo video.

00:33.730 --> 00:43.940
Ora immaginiamo di avere un cestino e questo cestino è un array che ha anche la nostra lista della spesa.

00:44.030 --> 00:45.880
Diciamo che vogliamo comprare le mele.

00:46.010 --> 00:52.280
Vogliamo comprare le arance e vogliamo anche comprare l'uva perché l'uva è la caramella della natura.

00:52.280 --> 00:53.220
Sono deliziosi

00:54.220 --> 00:59.590
Ora, per consentirci di passare in rassegna questo paniere, sappiamo come farlo nel modo giusto.

00:59.590 --> 01:07.330
Abbiamo imparato a conoscere i quattro loop in cui possiamo fare molto e uguale a zero.

01:07.400 --> 01:16.220
Fintanto che io sono inferiore alla lunghezza del cestino, moriamo uno dopo l'altro.

01:18.520 --> 01:26.530
E meno solo il cestino del registro della console da indicizzare.

01:26.560 --> 01:29.550
Quindi questo è il primo tipo di loop che abbiamo visto.

01:29.950 --> 01:31.540
Se esegui questo

01:34.160 --> 01:38.850
nel browser e premi Invio, vediamo che abbiamo mele, arance e uva.

01:38.930 --> 01:43.040
Va bene, questo è il primo modo in cui sappiamo già come farlo.

01:43.080 --> 01:54.110
Potremmo anche usare il ciclo For Each che è arrivato nuovo e S-5 e lì possiamo solo dire che l'oggetto utilizzerà le funzioni aeree

01:54.130 --> 01:56.140
di cui abbiamo imparato.

01:56.440 --> 01:59.530
E in questa funzione dell'era ho appena cancellato il nostro

02:03.000 --> 02:06.020
blog e sembra molto più pulito di prima.

02:06.030 --> 02:08.280
Se eseguo questa funzione ora ottengo la

02:11.710 --> 02:12.830
stessa cosa.

02:13.060 --> 02:18.970
Stiamo eseguendo il ciclo degli elementi e non ti mostrerò come eseguire il ciclo while e il ciclo

02:18.970 --> 02:25.460
while mentre ne abbiamo parlato, ma ci sono altri due modi in cui possiamo fare il ciclo tra cose e Javascript.

02:25.690 --> 02:35.000
Il primo si chiama four of loop e l'altro è per in loop.

02:35.070 --> 02:39.210
So che la denominazione è un po 'confusa, ma resta con me qui.

02:39.300 --> 02:45.480
Il primo ciclo for funziona in un modo molto simile a questi due.

02:45.600 --> 02:52.780
È quasi come se stiamo combinando questi due insieme e questa è una nuova specifica con ESX Quindi

02:52.780 --> 03:03.380
questa è una nuova funzionalità di Javascript il modo in cui funziona è che iniziamo con un ciclo for e diciamo che l'elemento di Baskett vede che

03:04.660 --> 03:07.750
è la sintassi tagliato bene per me.

03:07.870 --> 03:16.460
È tutto blu e qui diciamo semplicemente di cancellare l'elemento del registro.

03:16.550 --> 03:17.620
Non male, vero.

03:18.770 --> 03:22.210
Stiamo usando la parola chiave for qui ma stiamo dicendo di.

03:22.400 --> 03:26.370
E stiamo solo creando una variabile che possiamo nominare come preferiamo.

03:26.460 --> 03:28.660
Di Baskett che è il nostro array.

03:28.880 --> 03:37.970
E questo lo farà scorrere in modo che se copio e incollo questo qui e premo invio ottengo

03:38.270 --> 03:40.360
la stessa identica cosa.

03:40.590 --> 03:45.630
E come sappiamo nella programmazione, ci sono molti modi di fare le cose e questi sono solo alcuni dei modi in

03:45.630 --> 03:47.790
cui possiamo fare il giro di questo array.

03:48.780 --> 03:51.420
Ma voglio menzionare un termine chiave qui.

03:52.370 --> 04:00.400
Quello che stiamo facendo qui è qualcosa chiamato iterazione su questo array e questa formulazione.

04:00.410 --> 04:02.030
Rendiamolo un po 'più grande.

04:04.050 --> 04:08.090
Questa formulazione è molto confusa all'inizio quando la senti per la prima volta.

04:08.820 --> 04:18.690
Ma leggere significa semplicemente che siamo in grado di passare uno a uno attraverso un elemento come diciamo un cestino che ha

04:18.690 --> 04:27.020
un array uno a uno e guardare questi elementi e iterare può essere fatto in javascript su ciò

04:27.030 --> 04:28.940
che chiamiamo iterabile.

04:29.250 --> 04:38.040
E queste variabili sono qualcosa che javascript ci fornisce che dice hey puoi iterare su questa cosa

04:38.040 --> 04:40.600
e cos'è questa cosa.

04:40.800 --> 04:46.300
Bene in Javascript puoi iterare su array e l'abbiamo già visto.

04:46.470 --> 04:49.610
E anche la forza invece di Baskett.

04:49.620 --> 04:54.000
Se lo trasformo semplicemente in una stringa ed eseguo il ciclo for

04:57.210 --> 05:01.560
qui vedo che sto iterando sulla stringa uno per uno.

05:01.560 --> 05:13.050
Quindi sia le matrici che le stringhe sono iterabili in javascript perché siamo in grado di iterare su singoli elementi

05:13.140 --> 05:24.120
e per tutto ciò ci permette di iterare su questi intervalli, so che la formulazione è davvero molto confusa.

05:24.130 --> 05:29.200
Ma in molti libri tutorial e persino nei luoghi di lavoro sentirai questa parola e

05:29.200 --> 05:30.890
vuoi sapere cosa significa.

05:30.970 --> 05:39.700
Ma parliamo della prossima cosa che il ciclo for il ciclo straniero assomiglia a qualcosa del genere.

05:39.770 --> 05:42.850
E in realtà riportiamolo così com'era.

05:43.010 --> 05:45.680
Quindi non la forza è la sua teoria.

05:46.700 --> 05:52.430
E ho intenzione di commentare o eliminare il loop che conosciamo già.

05:52.650 --> 05:55.650
Solo così abbiamo una spaziatura migliore qui.

05:56.390 --> 06:02.270
Ora il ciclo for in funziona con gli oggetti.

06:02.450 --> 06:12.490
Quindi creiamo un oggetto qui e chiameremo questo oggetto cestino dettagliato in questo cestino dettagliato sarà un

06:12.500 --> 06:15.310
oggetto che contiene mele.

06:15.440 --> 06:21.680
E in realtà la quantità di mele che vogliamo vogliamo cinque mele e avremo anche le arance

06:22.190 --> 06:25.210
e potremmo solo dire che ne abbiamo 10.

06:25.370 --> 06:26.760
Molta vitamina C.

06:26.960 --> 06:29.180
E poi finalmente l'uva e sono deliziosi.

06:29.180 --> 06:31.760
Quindi mille uve per tutti.

06:32.960 --> 06:43.040
Ora con questo Vaska dettagliato ora posso usare un ciclo for e posso dire per l'oggetto in invece di

06:44.270 --> 06:49.620
questo tipo cestino dettagliato e posso dialogare Konsole qui.

06:49.830 --> 06:58.470
In modo che se deseleziono copiamo il cestino dettagliato.

06:58.580 --> 07:00.260
Questo è il nostro oggetto.

07:00.560 --> 07:04.580
E eseguiamo il ciclo for qui.

07:04.580 --> 07:07.770
Nota cosa succede.

07:08.020 --> 07:21.290
Ottengo le mele, le arance, le uve for in che ci permettono di passare in rassegna e vedere le proprietà dell'oggetto.

07:23.120 --> 07:29.320
In modo che io possa controllare ciò di cui ho bisogno per andare a fare la spesa per mele, arance e uva.

07:29.330 --> 07:35.420
Ora ecco la parte difficile e sentirai menzionato molto questo reparto quando parli con i tuoi amici

07:35.420 --> 07:35.950
programmatori.

07:36.260 --> 07:43.970
E può davvero confondere ciò che stiamo facendo qui non sta iterando perché l'iterazione è qualcosa

07:43.970 --> 07:49.980
che possiamo fare con array e stringhe con un oggetto in JavaScript.

07:50.060 --> 07:59.390
Stiamo facendo qualcosa chiamato enumerare tutto il baseball VERRET perché le proprietà di un oggetto sono

07:59.390 --> 08:09.220
quelle che chiamiamo numerabili e un oggetto in javascript è enumerabile se ci permette di vedere le proprietà.

08:09.230 --> 08:12.480
Quindi mele, arance e uva sono innumerevoli.

08:12.530 --> 08:17.910
Cioè possiamo usarlo in un ciclo for per controllarli.

08:18.020 --> 08:20.870
Quindi l'enumerazione è per

08:24.640 --> 08:33.800
oggetti numerabili e iterabili cosa succede se li cambio e se ho cestino qui.

08:33.940 --> 08:37.750
E il cestino dettagliato qui.

08:37.840 --> 08:42.180
Quindi stiamo usando un ciclo for con un oggetto.

08:42.190 --> 08:43.860
Cosa pensi che succederà.

08:44.100 --> 08:44.870
Si.

08:45.130 --> 08:49.890
Ho intenzione di copiare e incollare questo nella nostra console.

08:49.890 --> 08:56.910
Hit Ron e ho un errore dettagliato carrello non è iterabile.

08:56.910 --> 08:57.980
E perché è quello.

08:58.230 --> 08:59.550
Bene, lo sappiamo bene.

08:59.580 --> 09:06.930
Ho detto che in javascript abbiamo un aumento delle stringhe iterabili e gli oggetti nella maggior parte

09:07.590 --> 09:10.230
dei casi non sono iterabili.

09:10.230 --> 09:17.790
Vedete quattro di loob non funziona con gli oggetti perché semplicemente il linguaggio javascript deve

09:18.210 --> 09:26.750
fornire questa proprietà che è chiamata iterabile quando questa proprietà è data solo da array e stringhe e

09:26.750 --> 09:31.170
perché quattro di loop funziona solo con iterable.

09:32.260 --> 09:34.920
Ci darà questo.

09:35.090 --> 09:36.150
Ma che dire qui.

09:36.350 --> 09:40.060
Cosa succede se faccio un ciclo for in sul cestino.

09:40.100 --> 09:41.120
Qual è l'array.

09:41.330 --> 09:49.450
Se copio e incollo questo ed eseguo questo codice, guarda che funziona.

09:49.630 --> 10:00.040
Ottengo 0 1 2 e questo perché sotto il cofano puoi pensare ad array javascript come oggetti.

10:00.040 --> 10:00.500
Destra.

10:00.550 --> 10:04.530
Perché un array ha un indice di 0 1 e 2.

10:04.660 --> 10:18.090
Quindi non possiamo pensare a Baskett come un oggetto che ha proprietà pari a zero pari alle mele.

10:18.280 --> 10:25.660
Abbiamo arance con indice di 2 o indice di uno e quindi indice di due.

10:25.680 --> 10:28.180
Abbiamo le crêpes.

10:28.260 --> 10:38.820
Quindi il ciclo for è e la valutazione Neumar sulle proprietà è 0 1 e 2 che la elenca per noi.

10:39.640 --> 10:41.180
Rendiamolo un po 'più piccolo.

10:42.550 --> 10:48.400
Ma volevo realizzare questo video per te perché molte persone si confondono tra questi due.

10:48.910 --> 10:57.590
E sebbene tu possa passare molto tempo senza mai usare per i loop finali, possiamo usare qualcosa come le chiavi ancorate agli

10:57.590 --> 10:59.860
oggetti che abbiamo visto prima.

11:00.930 --> 11:12.160
O valli o voci o possiamo usare per ogni loop o per loop invece di quattro, è bene conoscere queste differenze perché se le

11:12.160 --> 11:17.800
vedi in una base di codice vuoi capire cosa sta succedendo.

11:18.600 --> 11:25.130
E anche se hai mai sentito qualcuno dire ripetibile o numerabile, hai un'idea della differenza.

11:25.130 --> 11:35.150
Ora per rivedere un ciclo for in su innumerevoli proprietà e nomi di proprietà numerabili di un oggetto,

11:36.310 --> 11:43.210
il ciclo for non funziona con gli oggetti perché non sono iterabili.

11:43.270 --> 11:52.210
Ora ci sono piccoli avvertimenti ed eccezioni a queste regole, ma il 99 percento delle volte dovresti considerare

11:52.210 --> 11:52.920
questo.

11:53.020 --> 12:00.800
Stai utilizzando il ciclo for per gli oggetti e il ciclo for per array e stringhe.

12:00.810 --> 12:02.270
Ci vediamo nel prossimo.

12:02.620 --> 12:02.830
Bob.
