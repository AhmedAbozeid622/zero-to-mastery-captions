WEBVTT

00:00.980 --> 00:05.400
Ciao! Impariamo un po 'di JavaScript.

00:05.400 --> 00:11.160
Apriremo Google Chrome qui e andremo su "Visualizza", (quindi) "Sviluppatore".

00:11.320 --> 00:13.640
E questa volta 'Console JavaScript'

00:13.720 --> 00:22.670
Quindi puoi anche fare 'Opzione CMD + J' e si apre questa console che è se ricordi gli elementi, l'hai

00:22.690 --> 00:23.800
già visto.

00:23.830 --> 00:30.680
Questo è il tuo HTML. La console è dove possiamo scrivere JavaScript. Sulla destra vedrai lo schema

00:30.680 --> 00:33.740
di cui parleremo in questo segmento JavaScript.

00:33.770 --> 00:35.480
Andremo uno per uno.

00:36.050 --> 00:42.760
E alcuni di loro, torneremo a. Ma non preoccuparti, alla fine saprai tutto qui.

00:43.910 --> 00:54.220
Quindi parliamo di JavaScript. JavaScript ha 7 tipi. Puoi pensare ai tipi come valori che

00:54.220 --> 00:55.890
JavaScript può avere.

00:55.900 --> 00:57.330
Cominciamo con il primo.

00:57.970 --> 01:06.260
E questo è 'Numero'. Quindi il tipo "Numero". Bene, in JavaScript puoi fare qualcosa

01:07.970 --> 01:12.880
del genere: guarda quello. La console ci consente di scrivere JavaScript quanto vogliamo.

01:12.880 --> 01:21.160
Quindi scrivendo questo e la console che ci dà una risposta significa che "Sì, questo è JavaScript valido". OK! Cos'altro possiamo

01:21.160 --> 01:25.800
fare? Bene possiamo fare '3

01:26.110 --> 01:30.400
* 5' '15', '12 / 4 ',' 3 '.

01:30.400 --> 01:31.090
È fantastico

01:31.090 --> 01:36.630
Cos'altro possiamo fare? '12 -4 ',' 8 '.

01:36.680 --> 01:37.940
Possiamo farlo?

01:37.940 --> 01:43.580
Possiamo farlo? '(3 + 4) * 2'.

01:43.730 --> 01:47.480
Quindi questo è '7 * 2', '14'.

01:47.610 --> 01:55.070
Si! Funziona! E possiamo persino farlo [%]. E questo è un personaggio speciale che potresti non aver visto

01:55.390 --> 01:56.360
prima che si chiamasse 'modulo'.

01:56.360 --> 01:59.970
E vediamo cosa succede. Mi dà '0'.

02:00.350 --> 02:07.330
Cosa succede se faccio '12% 5 '? Mi dà '2'. Cosa fa questo simbolo - E

02:07.370 --> 02:13.930
rendiamolo più grande in modo da poter vedere chiaramente. E lo cancellerò solo

02:13.940 --> 02:19.490
per vederlo meglio. E posso chiarire qui, con queste parentesi e pulirà tutto per me.

02:19.910 --> 02:29.150
Quindi ancora una volta. Quello che ho fatto è stato "12% 5" e questo mi dà "2". E quello che fa il modulo è

02:29.240 --> 02:38.060
- mi dà il resto. Quindi '12% 5 'è ... Bene, mi dà un resto di '2', perché '5' può andare solo a

02:38.060 --> 02:39.540
'10' e quindi hai il resto.

02:39.560 --> 02:53.760
Quindi, se lo faccio, diciamo '12% 5 'o facciamo' 9 ', ottengo un resto di' 3 '. E stai pensando 'Oh dio! Mi stai solo insegnando la matematica!

02:53.770 --> 02:56.890
'Ma non preoccuparti. Questa è solo una piccola parte.

02:56.920 --> 03:03.040
Voglio solo mostrarti che il primo tipo di JavaScript è un 'Numero' e possiamo fare operazioni su

03:03.220 --> 03:06.470
di loro proprio come può fare la calcolatrice.

03:06.480 --> 03:10.190
Il secondo tipo in JavaScript è una "stringa".

03:12.010 --> 03:19.720
Quindi 'String' è solo testo e tutto ciò che devi fare per far sapere a JavaScript che stai scrivendo

03:19.720 --> 03:22.960
un pezzo di testo è tra virgolette.

03:23.090 --> 03:30.020
Quindi posso solo dire "Bob". Posso dire il mio nome ["Andrei"]. E puoi anche usare virgolette singole.

03:35.350 --> 03:38.220
E questa è una "stringa".

03:38.810 --> 03:40.720
Ma cos'altro possiamo fare con lo String?

03:40.960 --> 03:43.630
Vorrei chiarire questo. Bene,

03:43.640 --> 03:46.070
puoi anche farlo.

03:46.130 --> 03:47.240
Puoi dire "Ciao" +

03:49.830 --> 03:50.640
"Ecco! ".

03:50.730 --> 03:52.070
Cosa pensi che succederà qui?

03:53.350 --> 03:56.210
Vediamo. "Ciao!

03:56.800 --> 04:08.960
"Ma è una parola. Abbiamo bisogno di uno spazio. Quindi dovremmo fare "Ciao" + "lì! ".

04:09.190 --> 04:11.370
E lì abbiamo lo spazio.

04:11.430 --> 04:16.700
OK. Quindi possiamo aggiungere cose. Quindi aggiungi due frasi insieme.

04:17.970 --> 04:23.170
E se lo facciamo. E se facciamo qualcosa del genere.

04:23.280 --> 04:28.260
"Questo non è molto bello" Ho premuto 'Invio'

04:29.860 --> 04:30.920
e.

04:31.090 --> 04:31.780
OK, funziona.

04:31.780 --> 04:32.230
Quello è buono.

04:32.290 --> 04:34.830
Ma cosa succede se uso virgolette singole qui?

04:34.900 --> 04:36.120
Che cosa succede se

04:36.140 --> 04:40.330
vado in questo modo - E ricorda che ho detto che posso usare le virgolette singole in JavaScript.

04:40.690 --> 04:45.650
Bene, vedi le modifiche alla sintassi e ho un piccolo errore.

04:45.790 --> 04:52.430
Bene perché sto usando una virgoletta singola e poi all'interno della stringa sto cercando di usare una virgoletta singola. E ciò accadrebbe anche se uso

04:52.430 --> 04:54.850
le virgolette doppie.

04:54.860 --> 05:01.220
Quindi, se torniamo all'esempio precedente e aggiungo un'altra citazione qui.

05:01.350 --> 05:04.460
Bene, di nuovo, ricevo un errore.

05:04.620 --> 05:07.330
Vorrei chiarirlo.

05:07.400 --> 05:12.060
Come possiamo evitare questo problema? Bene, con una stringa in JavaScript possiamo fare

05:13.650 --> 05:16.240
qualcosa del genere: 'Questo' - Usiamo le virgolette singole.

05:16.230 --> 05:23.800
'This isn \' - E cos'è questo?

05:23.810 --> 05:27.490
'Questo non è molto bello' (errore).

05:27.730 --> 05:31.170
E questa barra rovesciata [\] ha un significato speciale.

05:31.270 --> 05:35.600
"/" Dice "Ehi, qualunque cosa accada dopo,

05:35.670 --> 05:41.720
è un significato speciale. Significa "ignoralo, non dire che questo è un pezzo di corda.

05:41.790 --> 05:43.970
Voglio solo il segno di spunta posteriore. "Quindi

05:44.100 --> 05:45.770
se corro così.

05:45.820 --> 05:48.150
Oops! Ho sbagliato la sintassi qui.

05:48.180 --> 05:49.760
Ovviamente le virgolette devono corrispondere.

05:49.770 --> 05:50.890
Quindi proviamo di nuovo.

05:52.420 --> 05:53.170
Ecco qua!

05:53.200 --> 05:56.190
Questo è molto carino. OK ho un'altra

05:56.290 --> 05:57.320
domanda.

05:57.430 --> 05:59.800
Che succede qui?

06:00.310 --> 06:07.350
10 + "34". Quindi questo è 'Numero' 10 + 'Stringa' di 34.

06:07.420 --> 06:08.440
Vediamo cosa succede.

06:10.450 --> 06:18.480
Hmm ... Strano. Quindi JavaScript lo guardò automaticamente e disse "Hmm, sta aggiungendo un numero e una stringa.

06:18.820 --> 06:22.320
Probabilmente sta cercando di aggiungere delle stringhe ".

06:22.390 --> 06:28.110
Quindi JavaScript converte il numero '10' in una stringa '10' e fa '1034'.

06:28.450 --> 06:29.500
È strano, vero?

06:29.500 --> 06:32.180
È una delle stranezze di JavaScript: ce ne sono alcune.

06:32.320 --> 06:33.770
Devi solo abituarti.

06:34.150 --> 06:34.990
Proviamo qualcos'altro.

06:34.990 --> 06:36.180
Che dire

06:36.420 --> 06:42.290
se faccio 10 - "3"? Premere Invio.

06:42.410 --> 06:43.560
Ho 7.

06:43.780 --> 06:46.120
Cosa sta succedendo qui?

06:46.150 --> 06:56.360
E perché con la stringa, non puoi davvero sottrarre la stringa e voglio dire vediamo se vado "ciao" - "ciao".

06:57.810 --> 07:02.500
Ottengo questo strano simbolo a cui torneremo. Ma questo non funziona.

07:02.500 --> 07:08.320
Quindi ora JavaScript dice "Vado a" - poiché sottrae, suppongo che significhi

07:08.330 --> 07:10.400
il numero "3".

07:10.400 --> 07:12.670
Quindi sta cercando di aiutarti.

07:13.550 --> 07:20.230
Ma! a volte può avere un comportamento inaspettato, quindi idealmente non fai mai cose del genere.

07:20.290 --> 07:25.540
Idealmente, mantieni i numeri con numeri e le stringhe con le stringhe e mantieni le azioni tra i

07:25.540 --> 07:26.430
tipi simili.

07:27.400 --> 07:34.520
Quindi torniamo a questo. Cosa è successo quando ho detto "ciao" - "ciao"? Bene 'NaN' sta per 'Not a

07:34.550 --> 07:39.010
Number' ed è tecnicamente - in JavaScript puoi vedere l'evidenziazione blu qui.

07:39.140 --> 07:41.030
Fa parte del tipo "Numero".

07:41.390 --> 07:47.390
Quindi i numeri possono. Sai che può variare da 1 a 10 a .. Conosci 567.

07:47.420 --> 07:54.820
Ma c'è anche la 'NaN', quando dice 'Ehi, qualunque cosa tu abbia appena scritto non è un numero. 'Quindi anche questo è il

07:54.860 --> 07:56.480
caso.

07:56.480 --> 08:02.470
So che è davvero molto confuso, ma non preoccuparti. Sono solo le stranezze della lingua che stiamo imparando.

08:02.890 --> 08:03.230
OK.

08:03.350 --> 08:06.070
Ti mostrerò un altro tipo di JavaScript.

08:06.440 --> 08:10.000
Prima di arrivare ad alcune cose divertenti nel prossimo video.

08:10.200 --> 08:12.960
Quindi il prossimo è "Booleano".

08:15.080 --> 08:19.980
E il tipo "booleano" è molto semplice. Booleano significa semplicemente "vero".

08:21.380 --> 08:22.680
O 'falso'. Questo è tutto.

08:22.910 --> 08:29.420
E a volte ciò può essere rappresentato come "1" e "0" e per quelli che sanno molto sui computer potresti

08:29.420 --> 08:35.420
sapere che il computer funziona praticamente su "1" e "0" e questo è , ecco da dove

08:35.420 --> 08:35.890
viene.

08:36.780 --> 08:41.250
Ma i booleani sono molto molto utili perché ora possiamo

08:41.250 --> 08:44.040
fare qualcosa come "3> 2".

08:44.390 --> 08:47.820
E dirò "vero": "3" è maggiore di "2".

08:48.060 --> 08:51.780
Se faccio '5> 10'.

08:51.930 --> 08:55.740
diremo "falso": "5" non è maggiore di "10".

08:55.770 --> 09:03.360
Possiamo anche fare '5> = 5'.

09:03.420 --> 09:06.350
Quindi dirò "vero" perché posso fare maggiore o uguale a.

09:06.450 --> 09:13.950
E posso anche fare '5 &lt;= 5'.

09:15.810 --> 09:23.160
E se volessi dire "3 = 3"?

09:23.440 --> 09:24.790
Ho ricevuto un errore

09:24.820 --> 09:26.720
Perché?

09:26.750 --> 09:32.960
Perché in JavaScript se vuoi dire qualcosa è uguale a qualcosa devi

09:33.080 --> 09:37.640
dire '===' '3 === 3' e ottengo 'vero'.

09:37.750 --> 09:41.680
E nel prossimo video ti dirò perché è così.

09:41.710 --> 09:42.850
È molto molto interessante.

09:42.850 --> 09:50.210
Ma per ora ricorda, questo è sempre un punto difficile di cui molti principianti si confondono.

09:50.250 --> 09:57.300
Ricorda solo se stai confrontando due cose, 3 segni di uguale, '==='. L'ultimo che voglio mostrarti

09:57.930 --> 10:03.930
è questo: '3! == 3 '(non è uguale).

10:03.940 --> 10:05.170
Non è confuso?

10:05.170 --> 10:14.770
Quindi, questo sta dicendo '3 non è uguale a 3'? Falso, perché "3" equivale a "3".

10:14.780 --> 10:15.320
Lo so.

10:15.380 --> 10:17.200
Può diventare davvero confuso.

10:17.300 --> 10:21.590
Ma pensa a questo come l'opposto del segno "uguale".

10:21.590 --> 10:27.800
Quindi, per esempio, se faccio '4! == 5 ", diventerò" vero ", perché hai ragione.

10:27.800 --> 10:31.170
'4' non equivale a '5'.

10:31.180 --> 10:39.530
Quindi quello che abbiamo appena appreso sono i confronti JavaScript e sono le cose proprio qui.

10:39.660 --> 10:40.170
Questo è tutto.

10:40.170 --> 10:42.650
Devi solo ricordare questi.

10:42.840 --> 10:45.140
Beh, è stato divertente, vero?

10:45.630 --> 10:47.470
Ma stiamo appena iniziando.

10:48.060 --> 10:50.860
Dopo questo video ti ho lasciato un foglio di esercizi per te.

10:51.090 --> 10:55.440
Prova a trovare le risposte ai problemi, quindi copia e incolla.

10:55.470 --> 10:59.920
Ciascuna delle domande ciascuna, delle linee nella console JavaScript.

10:59.970 --> 11:08.110
Quindi, per esempio, se ho detto, sai, "valuta '3 + 5'", lo copi, lo metti nella console e premi

11:08.110 --> 11:09.440
semplicemente 'Invio'.

11:09.610 --> 11:15.320
E voglio che tu ti senta a tuo agio lavorando con la console e giocando con essa, sperimentando in giro.

11:15.460 --> 11:18.990
E come ho detto: prova davvero a lavorare sui prossimi problemi.

11:19.000 --> 11:24.400
Non ti ho dato molto perché non voglio che tu sia sopraffatto.

11:24.760 --> 11:27.950
Ci sono molte più cose interessanti che stanno accadendo in JavaScript di questo.

11:28.150 --> 11:33.550
E puoi prenderlo abbastanza facilmente. Ma ti incoraggio ad assicurarti di fare gli esercizi.

11:33.790 --> 11:36.900
Ora, puoi prenderli tutti?

11:36.930 --> 11:38.330
In bocca al lupo!

11:38.440 --> 11:40.190
Ci vediamo nel prossimo video.

11:40.190 --> 11:40.710
Ciao ciao
