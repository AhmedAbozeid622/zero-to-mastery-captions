WEBVTT

00:02.180 --> 00:08.210
Ben tornato. Spero che tu abbia fatto una bella pausa dopo il video delle funzioni, perché so che

00:08.210 --> 00:08.930
abbiamo coperto molto.

00:09.410 --> 00:12.510
Questa volta impareremo qualcosa di un po 'più semplice.

00:12.770 --> 00:16.430
E impareremo la nostra prima struttura di dati.

00:16.700 --> 00:19.630
Ora, cos'è una struttura dati?

00:19.640 --> 00:29.000
Fino ad ora abbiamo imparato solo numeri, stringhe, valori booleani, "indefiniti" e funzioni. Ma come li conservi

00:29.000 --> 00:31.460
tutti?

00:31.490 --> 00:37.250
Abbiamo detto che una variabile è come un cassetto della scrivania, ma non vuoi buttare tutto lì

00:37.250 --> 00:42.170
dentro e avere un casino enorme. Oppure non vuoi gettare solo una penna e chiudere quel cassetto.

00:42.170 --> 00:49.560
Idealmente puoi memorizzare più cose, puoi organizzarle. Le strutture dati sono come i supporti del compartimento nella

00:49.560 --> 00:56.680
tua scrivania, un po 'come questa immagine qui. Strutture dati diverse sono brave in cose diverse.

00:56.800 --> 01:03.820
Ad esempio, in questa immagine sembra che il file cabinet sia davvero buono per

01:03.820 --> 01:11.510
trovare cose, perché è in ordine alfabetico. E le strutture di dati ci danno questa capacità

01:11.960 --> 01:17.010
di immagazzinare informazioni e accedervi in un modo che ci è utile.

01:17.120 --> 01:20.840
Quindi impariamo la nostra prima struttura di dati e

01:24.160 --> 01:26.010
che è "Array".

01:26.180 --> 01:32.690
Apriamo la nostra console e abbiamo il nostro

01:33.050 --> 01:53.130
file di script qui e scriveremo il nostro primo array facendo variabili 'list'. E avremo parentesi quadre: 'tigre', 'gatto', 'orso' e facciamo 'uccello'.

01:53.180 --> 01:55.320
Quindi è ancora una variabile.

01:55.610 --> 01:57.530
E vedi stringhe qui.

01:57.530 --> 02:02.400
L'unica cosa diversa sono queste parentesi quadre.

02:03.630 --> 02:10.860
Ma io chiamo questo 'elenco' e sembra un elenco, ma avrei potuto chiamarlo così:

02:10.860 --> 02:12.450
'listOfAnimals' per esempio.

02:13.580 --> 02:17.780
Ma un array, come ho detto, è un modo per organizzare le informazioni.

02:17.950 --> 02:20.140
E questo è organizzato in questo modo.

02:20.140 --> 02:25.860
Ma come lo prendiamo? Come prendiamo uno di questi 4 oggetti dal cassetto della scrivania?

02:26.080 --> 02:31.040
Il modo in cui accedi a un array è - con qualcosa del genere.

02:36.320 --> 02:36.610
OK.

02:36.630 --> 02:45.540
Quindi, nome variabile - parentesi quadre - un numero e - parentesi quadre. Facciamo console. log "e vedere cosa succede.

02:50.330 --> 02:52.420
Ottengo "gatto".

02:53.060 --> 02:57.820
Hmmm, ora, molti di voi potrebbero aver pensato che avremmo ottenuto la "tigre".

02:57.830 --> 03:03.000
Voglio dire "elenco", vogliamo il primo elemento nella "lista".

03:03.020 --> 03:07.830
Forse è così che lo leggi, ma non è così che funziona. Agli sviluppatori di

03:07.880 --> 03:14.510
informatica piace contare da '0'. Quindi '0' è stato il primo numero, quindi '1, quindi' 2 ', quindi' 3 '.

03:14.870 --> 03:17.890
Quindi, iniziamo sempre a contare da '0'.

03:17.900 --> 03:22.580
Quindi, se vuoi ottenere 'tigre' da questo elenco, fai '0'.

03:22.800 --> 03:33.620
E rinfresciamoci e otteniamo la "tigre". Giochiamo con questo nella console. Se copio la 'lista' e la metto

03:33.620 --> 03:34.730
così. OK.

03:40.630 --> 03:42.550
La console in

03:45.550 --> 03:51.780
realtà ci dà un bel registro dell'array. E vediamo che abbiamo: '0' - 'tigre', '1' - 'gatto', '2' - 'orso', '3' - 'uccello'.

03:51.790 --> 04:02.530
Quindi, come puoi vedere, un array è solo un buon modo per elencare gli elementi in un ordine da '0', '1', '2' e '3'.

04:02.530 --> 04:07.300
Che tipo di cose possono contenere gli array o sono solo stringhe?

04:07.500 --> 04:09.190
Beh, non proprio.

04:09.220 --> 04:13.870
Possiamo fare "numeri" variabili.

04:15.370 --> 04:21.420
E avere '1, 2, 3, 4'.

04:21.700 --> 04:33.930
Possiamo avere "booleani" e possiamo avere di nuovo "vero, falso", "vero".

04:35.520 --> 04:37.730
E questa è la parte divertente.

04:37.740 --> 04:43.830
Puoi anche avere 'funzioni' come un array.

04:43.990 --> 04:46.840
Quindi posso fare 'funzione apple':

04:50.720 --> 04:52.070
'console. log (mela)'.

04:57.400 --> 04:59.770
E poi chiudi con le parentesi quadre.

05:01.560 --> 05:13.000
E 'functionList' ora ha un array, nella posizione '0' di 'apple'. Qui è ancora più strano, puoi fare una

05:14.360 --> 05:26.480
variabile, chiamiamola un 'elenco misto' e che può contenere stringhe, può avere numeri, può essere indefinito, puoi

05:26.480 --> 05:29.280
avere valori booleani.

05:29.780 --> 05:33.860
E come ti ho mostrato prima, puoi avere delle funzioni.

05:36.930 --> 05:44.190
E 'mixedList' ora ha un sacco di cose stravaganti.

05:44.210 --> 05:47.960
Ora, questo non è consigliato.

05:47.960 --> 05:53.870
In realtà è un po 'un problema di prestazioni, quando si hanno array con tipi diversi.

05:53.870 --> 05:59.580
Quindi, vuoi mantenerlo lo stesso ma, voglio mostrartelo. Possiamo mettere qualsiasi cosa negli array.

05:59.780 --> 06:07.870
Possiamo anche creare array all'interno di un array.

06:07.950 --> 06:16.510
Vedi, cosa ho appena fatto qui? Abbiamo una matrice, che ha una matrice di "tigre", "gatto", "orso", "uccello".

06:16.620 --> 06:20.040
Quindi, se salviamo questo e aggiorniamo, cosa pensi che accadrà?

06:22.270 --> 06:29.380
Otteniamo un array che ha "tigre", "gatto", "orso", "uccello". Ma abbiamo effettuato l'accesso a "0".

06:30.860 --> 06:32.740
Proviamo di nuovo senza lo "0".

06:32.780 --> 06:34.030
Vediamo cosa succede.

06:35.490 --> 06:42.370
Questa volta otteniamo un array, proprio come dice qui, che contiene un array al suo interno.

06:43.220 --> 06:45.180
Quindi, come possiamo, diciamo, sopportare?

06:45.290 --> 06:54.090
Bene, vorremmo dire, vogliamo il primo array. E poi un'altra coppia di parentesi quadre.

06:54.450 --> 07:04.260
E poiché "tigre" è a "0, 1, 2", vogliamo "2". Oppure dico "tigre" e poi "orso".

07:04.310 --> 07:07.360
Quindi stiamo ottenendo il primo array, questo.

07:07.700 --> 07:13.470
E all'interno di quel primo array vogliamo lo '0, 1, 2' - l'orso '.

07:13.470 --> 07:14.910
Vediamo se funziona.

07:15.780 --> 07:17.550
E poi otteniamo 'orso'.

07:17.850 --> 07:23.740
Ora le matrici sono interessanti perché JavaScript ha metodi predefiniti per loro.

07:23.940 --> 07:32.110
E cosa sono quelli? Per ora pensali come funzioni. Sono funzioni che possiamo usare sugli array.

07:32.240 --> 07:35.620
Non preoccuparti troppo del termine del metodo, ci arriveremo più tardi.

07:35.870 --> 07:37.690
Ma lascia che ti mostri cosa intendo.

07:38.090 --> 07:40.310
Se restituiamo questo 'elenco' così com'era.

07:43.860 --> 07:47.330
Torna a "tigre", "gatto", "orso", "uccello".

07:47.450 --> 07:50.200
Quindi, diamo un'occhiata a 'list', quello che abbiamo in 'list' ora.

07:50.210 --> 07:53.490
Ora abbiamo "tigre", "gatto", "orso", "uccello". OK.

07:53.540 --> 08:02.250
Quindi, vediamo che tipo di metodi possiamo aggiungere all '"elenco". 'list' facciamo 'shift'.

08:02.410 --> 08:03.740
E vediamo cosa fa.

08:03.900 --> 08:08.910
Torno indietro "tigre", ma se guardo la "lista" ora, "tigre" è stata spostata.

08:08.910 --> 08:15.610
Ho spostato l'array per rimuovere la "tigre" e ora tutto si è spostato a sinistra.

08:16.390 --> 08:19.840
Cosa succede se lo faccio 'elenco. pop'?

08:24.550 --> 08:26.200
Ottengo "uccello".

08:26.440 --> 08:34.180
Quindi, se guardiamo la 'lista' ora - è 'uccello' saltato fuori dalla fine dell'array.

08:34.460 --> 08:43.550
E ora ho solo "gatto" e "orso". E se lo facciamo 'elenco. push ', quindi' push '. Deve avere una discussione, facciamo

08:43.570 --> 08:44.600
"elefante".

08:47.550 --> 08:51.250
E ora torniamo al numero '3'.

08:51.400 --> 08:52.850
Potresti indovinare cosa significhi.

08:52.870 --> 08:54.340
E diamo un'occhiata a 'list'.

08:54.480 --> 08:56.890
Ora abbiamo "gatto", "orso" ed "elefante".

08:56.980 --> 09:00.070
Quindi 3 elementi nella matrice.

09:00.250 --> 09:04.310
Ripuliamolo un po 'e ricontrolliamo quello che abbiamo nella "lista".

09:04.420 --> 09:05.470
Perfezionare.

09:05.470 --> 09:07.310
Qual è un'altra cosa che possiamo fare?

09:07.750 --> 09:14.500
Bene, possiamo anche fare un 'elenco. concat'. Per concatenare.

09:15.040 --> 09:19.900
E qui possiamo effettivamente aggiungere un altro array.

09:19.940 --> 09:32.800
Facciamo "ape" e "cervo". Premi "Invio" e ora abbiamo una serie di 5

09:32.870 --> 09:43.760
elementi: "gatto", "orso", "elefante", "ape" e "cervo". E non te l'ho detto, ma quando guardiamo i numeri '0,

09:43.760 --> 09:48.280
1, 2, 3, 4', vengono chiamati 'indice' negli array.

09:48.530 --> 09:53.010
Quindi 'indice' significa: 'gatto' ha un 'indice' di '0', 'orso' - un indice di '1', 'elefante' -

09:53.210 --> 10:00.210
di '2', 'ape' - di '3', 'cervo '- un indice di' 4 '. OK Facciamo un'ultima cosa e

10:01.340 --> 10:09.030
poi puoi andare a fare alcuni esercizi. Come puoi vedere, sono molto divertenti.

10:10.150 --> 10:17.280
Un'ultima cosa che voglio mostrarti è questa: se lo facciamo 'list. ordinare'. Bene, come suggerisce il

10:20.300 --> 10:26.670
nome, ora abbiamo un 'elenco' ordinato. Ma bene, perché abbiamo solo 3 articoli?

10:26.670 --> 10:28.530
Perché non 5?

10:28.860 --> 10:30.300
E questo è un po 'complicato.

10:30.300 --> 10:34.200
Devi, devi esercitarti un po 'con gli array per capirli.

10:34.290 --> 10:39.260
Abbiamo ordinato, il nostro array, ma solo quello originale.

10:39.520 --> 10:46.780
Quello che abbiamo concatenato, quello che abbiamo aggiunto, non l'abbiamo assegnato a una variabile. Quindi ha creato un

10:46.780 --> 10:49.270
nuovo array.

10:49.310 --> 10:59.010
Quindi, ora avevamo 2 matrici esistenti: la "lista", che aveva solo "orso", "gatto" ed "elefante". E un'altra "lista" concat "ape", "cervo", di cui

10:59.020 --> 11:02.060
non abbiamo catturato il valore.

11:02.060 --> 11:09.420
Non l'abbiamo assegnato a una variabile. Per mostrarti copiamolo di nuovo.

11:11.500 --> 11:15.910
E prova questo: la

11:19.530 --> 11:33.810
variabile 'myList' è uguale a OK. Abbiamo questi 5 elementi e facciamo variabili 'myNewList' uguale a myList. concat'.

11:37.010 --> 11:42.830
E faremo un array con 'scimmia'.

11:42.840 --> 11:49.790
Quindi, ora, se guardo "myList", ho 5 elementi: "gatto", "orso", "elefante",

11:49.930 --> 11:51.920
"ape", "cervo".

11:52.380 --> 11:57.850
Ma se guardo 'myNewList' - ho 6 elementi: con 'scimmia' dentro.

11:59.470 --> 12:08.980
Quindi, ci sono alcuni metodi che creano nuovi elenchi: come 'concat'; e alcuni metodi: come 'push' o 'pop', che non

12:09.670 --> 12:13.730
creano un nuovo elenco, basta modificare quello attuale.

12:13.740 --> 12:17.260
Ho alcuni esercizi per te alla fine di questo video.

12:17.280 --> 12:19.050
Questa è una struttura di dati davvero divertente.

12:19.050 --> 12:21.140
Spero che tu sia entusiasta di imparare questo.

12:22.170 --> 12:23.480
Questo è tutto per gli array.

12:23.790 --> 12:29.260
Una volta che hai capito la sintassi e la struttura, questo ha molto potere.

12:30.420 --> 12:35.790
L'ultima cosa che volevo mostrarti era che il

12:41.520 --> 12:51.690
nostro buon amico "W3C", ha un grande elenco di riferimenti su quali metodi hanno gli array.

12:52.140 --> 12:54.950
Quindi, puoi leggerli mentre lavori sugli esercizi.

12:54.960 --> 13:00.060
Ci sono alcune cose, che non ho trattato nel video, che dovrai cercare qui per capire

13:00.450 --> 13:03.500
di cosa hai bisogno per risolvere i problemi.

13:04.510 --> 13:05.980
Ci vediamo nel prossimo.
