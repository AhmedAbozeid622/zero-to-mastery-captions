WEBVTT

00:01.470 --> 00:06.680
Oggi ti guiderò attraverso una tipica giornata degli sviluppatori.

00:06.700 --> 00:10.110
Ora so che ci sono diversi tipi di aziende.

00:10.270 --> 00:16.210
Ma in questo video, ci saranno alcuni concetti principali che molto probabilmente vedrai in tutte le forme di lavoro

00:16.210 --> 00:23.200
che fai come sviluppatore - che si tratti di un'azienda o di una startup o di modelli di lavoro simili che verranno

00:23.200 --> 00:24.570
mostrati come freelance .

00:24.580 --> 00:28.480
E voglio affrontarlo perché suppongo che stai seguendo questo corso perché vuoi diventare

00:28.480 --> 00:31.040
uno sviluppatore o vuoi migliorare le tue abilità.

00:31.150 --> 00:38.500
Ed è importante sapere cos'è un flusso di lavoro corrente e anche cosa aspettarsi di decidere se questo è

00:38.500 --> 00:40.090
per te o no.

00:40.120 --> 00:41.570
Quindi iniziamo.

00:41.620 --> 00:48.430
Sono le 9:00 A. M. ora e come puoi vedere ho creato questo fantastico diagramma

00:48.490 --> 00:55.550
di me stesso che entra in azione, sono le 9:00 A. M. e ho qui quella che chiamo una tavola Trello e posso mostrarti qui di cosa si tratta.

00:55.690 --> 01:01.580
Di solito quando lavori su grandi progetti, al fine di rimanere organizzato, le persone hanno quello che chiamano "stile

01:01.650 --> 01:06.540
Kanban" dove c'è un elenco di cose da fare su cui le persone stanno lavorando.

01:06.550 --> 01:08.340
E poi c'è un elenco Fatto.

01:08.350 --> 01:13.630
Quindi di solito al mattino arrivi e la prima cosa che vuoi fare è assicurarti

01:13.990 --> 01:19.960
che eventuali cambiamenti che sono stati apportati mentre eri a casa o di notte potrebbero avere squadre

01:19.970 --> 01:22.120
all'estero che hanno lavorato mentre dormivi.

01:22.280 --> 01:28.000
Beh, come sai, vogliamo sempre andare a Git Checkout Master

01:30.290 --> 01:32.190
E dovresti

01:32.370 --> 01:34.810
sapere come funziona ormai.

01:34.830 --> 01:37.870
In caso contrario, assicurati di consultare la sezione precedente.

01:37.920 --> 01:42.560
Farei qualcosa come git pull per assicurarmi che tutto sia aggiornato.

01:42.570 --> 01:42.830
Tutto ok.

01:42.840 --> 01:44.880
E ora ho tutto aggiornato.

01:44.880 --> 01:50.130
Vuoi anche vedere se c'è qualcosa su cui forse stai ancora lavorando che non è stato risolto?

01:50.430 --> 01:58.140
Se ricordi dai video precedenti, ho un paio di richieste pull e una è stata quella di conflitto e ce ne ricordiamo

02:00.820 --> 02:08.000
-bene, questo ramo su cui stavo lavorando Marcy mi ha detto che non abbiamo davvero bisogno di quel cambiamento

02:08.000 --> 02:10.350
quindi non ci sono file modificati.

02:10.370 --> 02:15.970
Posso ripulire ciò su cui ho lavorato semplicemente chiudendo le mie richieste pull. Eliminerò questo ramo in modo

02:17.000 --> 02:22.310
che ora tornando al mio flusso di lavoro avrò solo un master su cui sto lavorando.

02:22.310 --> 02:25.270
È tutto aggiornato.

02:25.270 --> 02:27.080
Va bene così bene.

02:27.100 --> 02:30.240
Forse sposterò questo ramo di conflitto a cui stavo lavorando.

02:30.250 --> 02:34.360
Lo sposterò solo per dire e sai che sai che ho finito.

02:34.360 --> 02:41.510
Quindi il team sa che non sto più lavorando su questo ramo. 9:00 A. M. è fatta.

02:41.520 --> 02:49.320
E 10:00 A. M. rotola in giro e di solito ho quaggiù ciò che

02:49.740 --> 02:55.560
accade è qualcosa chiamato stand up in cui i membri del team e tutti coloro che sono coinvolti in un progetto o

02:55.560 --> 03:00.990
qualunque cosa tu stia lavorando si incontrano per ottenere gli aggiornamenti di tutti e di solito tutti stanno in piedi

03:01.080 --> 03:07.950
e vedi qui che lì è un SM che di solito è uno scrum master o un manager o un regista che di solito organizza l'incontro

03:08.160 --> 03:09.480
e assume la guida.

03:09.690 --> 03:14.130
E quello che facciamo tutti è solo dire "hey questo è quello che abbiamo fatto ieri. "" Questo è dove faremo

03:14.130 --> 03:15.860
oggi. "O forse se

03:15.960 --> 03:19.900
sei bloccato su qualcosa e stai riscontrando un problema, forse puoi chiedere ad alcuni membri del

03:21.660 --> 03:26.340
team e di solito in questa riunione hai anche questa persona dall'aspetto spaventoso che è in realtà il PO

03:26.340 --> 03:27.750
che è il proprietario del prodotto.

03:27.750 --> 03:35.010
Quindi è chiunque che potrebbe essere un cliente che ha interessi acquisiti che sono soldi in linea per la costruzione

03:35.340 --> 03:36.800
di questo progetto.

03:36.810 --> 03:43.470
Potrebbe essere il tuo CEO, potrebbe essere chiunque sia il proprietario del prodotto, chiunque voglia assicurarsi che il

03:43.800 --> 03:49.030
loro prodotto sia finito e sia finito in tempo, ma sia anche costruito correttamente.

03:49.050 --> 03:50.050
Questo è il prodotto.

03:50.310 --> 03:53.930
Quindi hai una riunione in piedi veloce e di solito intorno alle 10:30.

03:53.940 --> 04:00.120
Tornerai al lavoro, lavorerai su qualcosa come bug o nuove funzionalità e il modo in cui lo fai è che

04:00.120 --> 04:05.550
torni su una scheda come questa e vedi cosa c'è nella lista delle cose da fare.

04:05.550 --> 04:11.010
E di solito sono tutti piccoli pezzi e sai che diciamo che voglio aggiornare il read

04:11.010 --> 04:16.890
me vecchio trascinalo qui dentro e per far sapere a tutti che sto lavorando per aggiornare la lettura.

04:17.130 --> 04:26.260
Sai, se sto aggiornando il read me, farò qualcosa come 'git branch update-readme' e andrò semplicemente a dare un'occhiata

04:26.460 --> 04:34.560
a quel ramo e inizierò a lavorare su quella funzione o bug qualunque esso sia.

04:37.220 --> 04:40.800
Va bene e diciamo che, sai, ho pranzato.

04:40.850 --> 04:46.700
Sono molto contento di aver svolto molto lavoro e di aver effettivamente completato il mio

04:46.700 --> 04:53.420
compito readme, in tal caso in realtà invierò una PR o una richiesta pull che abbiamo visto

04:53.420 --> 05:00.890
nei video precedenti in cui farò il classico comando 'git add' quindi 'git commit' quindi sarò 'git push' verso

05:00.890 --> 05:09.710
l'alto per github tutti i miei cambiamenti e poi quello che di solito tendiamo a fare è se torniamo a github avremo persone

05:11.770 --> 05:16.780
che come te o altri membri del team che lo vedono.

05:16.890 --> 05:23.170
Ci sono un paio di richieste pull. Esaminiamo una richiesta pull in modo che sia un

05:23.200 --> 05:29.860
codice che forse te stesso o altri hanno fatto e vedo qui che ho una simpatica piccola

05:29.860 --> 05:39.920
persona che è venuta e ha riformattato il nostro generatore di background. Quindi visualizziamo le modifiche ai file e vediamo qui che hanno corretto un

05:39.920 --> 05:45.640
sacco di nostri script in background per includere la nuova sintassi ES6 che è molto bella.

05:45.680 --> 05:48.610
Esaminiamo tutto, se vogliamo commentare, è fantastico.

05:48.830 --> 05:51.180
Ma sai cosa, questi cambiamenti sembrano davvero buoni.

05:51.200 --> 05:55.270
Quindi sto per dire Approva, fai il

05:55.410 --> 05:59.170
segno @ e "Grazie per questo-

05:59.370 --> 06:01.580
-Questi cambiamenti.

06:01.800 --> 06:04.960
Sembra grandioso. Fusione ora. "Quindi ho inviato la

06:08.360 --> 06:09.670
mia recensione e tutto sembra

06:12.700 --> 06:13.660
a posto.

06:13.660 --> 06:18.670
Se ci sono problemi, posso far loro sapere che abbiamo bisogno di un paio di cose riparate, ma qui tutto

06:18.670 --> 06:19.590
sembra a posto.

06:20.740 --> 06:27.850
Alcune aziende lo passeranno a qualcosa chiamato QA con analisi di qualità essenzialmente assicurando che le

06:27.850 --> 06:33.060
modifiche che abbiamo implementato non influiscano sulla nostra app web.

06:33.070 --> 06:34.240
Funziona ancora al telefono.

06:34.240 --> 06:39.740
Funziona ancora su tutti i browser e si assicura che le nostre funzionalità o bug siano corretti.

06:40.980 --> 06:48.800
In modo che ciò accada di solito e se tutto passa, allora woohoo, il nostro PR viene approvato dal nostro team.

06:48.900 --> 06:51.630
Il QA dice che sì, tutto sembra a posto.

06:51.630 --> 06:59.220
Sei contento di quello che hai fatto e del tuo PR e poi puoi finalmente unirti al master e quando fatto ciò

06:59.220 --> 07:04.930
torniamo alla scheda Trello e possiamo solo dire che l'aggiornamento del file Leggimi è terminato.

07:04.950 --> 07:12.500
Il team sa che sei tutto pronto per partire e tutto ricomincia il giorno successivo in cui entri, assicurati che non ci

07:12.500 --> 07:14.030
sia nulla di eccezionale.

07:14.030 --> 07:15.960
Vai alla riunione.

07:16.010 --> 07:20.510
Dai un'occhiata a quel Dos, prendi un pezzo di funzionalità o un bug su cui devi lavorare.

07:20.510 --> 07:21.980
E inizi a lavorarci su.

07:22.190 --> 07:27.590
E so che non sembra molto eccitante dal modo in cui lo sto descrivendo in questo momento, ma

07:27.590 --> 07:28.570
è molto divertente.

07:28.700 --> 07:34.250
Sia che tu stia costruendo un prodotto da solo o che tu sia l'unico proprietario che

07:34.250 --> 07:39.650
stai ancora usando queste tecniche per renderti responsabile solo assicurandoti che i compiti vengano svolti

07:39.650 --> 07:48.050
perché essere uno sviluppatore web si basa sulla suddivisione di grandi compiti come la creazione di Netflix in piccoli blocchi gestibili e ogni giorno

07:48.050 --> 07:52.360
stai solo lavorando un pezzo alla volta per scrivere un po

07:52.370 --> 07:58.180
'di JavaScript, forse un po' di CSS, forse un po 'di HTML, per costruire questo grande prodotto.

07:59.360 --> 07:59.970
E questo è tutto.

08:00.140 --> 08:03.580
È un giorno tipico di uno sviluppatore web.

08:03.680 --> 08:09.170
So che è sempre bene sapere perché ti stai inserendo in alcuni degli strumenti utilizzati dalle aziende e in

08:09.200 --> 08:10.870
alcuni dei flussi di lavoro.

08:10.880 --> 08:14.380
Quindi spero che questo video ti sia stato utile.

08:14.510 --> 08:16.080
Ci vediamo nel prossimo, ciao.
