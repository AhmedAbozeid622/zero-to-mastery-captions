WEBVTT

00:00.920 --> 00:10.160
Ben tornato. Finiamo di impostare le ultime due rotte nel nostro server. Per prima cosa abbiamo "/ profile /: userId"

00:10.160 --> 00:12.420
che è una richiesta GET.

00:12.440 --> 00:18.960
Questo è ciò che vogliamo ottenere all'utente per la sua homepage.

00:19.190 --> 00:22.510
Facciamolo. Ho intenzione di aggiungere un altro percorso.

00:22.670 --> 00:32.030
Questa volta sarà solo una richiesta GET e accetterà '/ profile /' e un 'id' - ricorda che se lo facciamo con questa sintassi [:

00:32.030 --> 00:39.170
id] significa che possiamo inserire qualsiasi cosa nel nostro browser e noi Sarò in grado di afferrare questo

00:39.650 --> 00:43.270
'id' attraverso il 'req. diritti di proprietà di params.

00:43.280 --> 00:45.580
Faremo di nuovo la stessa cosa.

00:45.590 --> 00:46.670
Richiedi, rispondi e

00:49.910 --> 00:52.460
aggiungiamo uno spazio qui per mantenere le cose pulite.

00:54.150 --> 01:06.360
E all'interno di questa richiesta, la risposta vogliamo prima di tutto prendere il parametro 'id', quindi facciamo 'const', 'id'

01:06.840 --> 01:11.190
verrà da 'req. params'.

01:11.450 --> 01:13.700
E cosa dovremmo fare qui?

01:13.700 --> 01:21.380
Bene, al fine di attirare i nostri utenti vogliamo scorrere il nostro database di esempio e trovare il corrispondente "id".

01:21.710 --> 01:27.930
Se corrisponde Vogliamo restituire l'utente.

01:27.940 --> 01:28.170
Tutto ok.

01:28.170 --> 01:29.470
Possiamo evitarlo ancora.

01:29.470 --> 01:36.370
Dobbiamo fare un ciclo "for" qui. Il modo in cui lo facciamo è che possiamo semplicemente fare un 'database. utenti '- anche se mi piace usare'

01:40.180 --> 01:44.800
map 'per questo caso - stiamo solo facendo un ciclo tra gli utenti e non abbiamo davvero

01:44.800 --> 01:49.600
bisogno di creare un nuovo array - è solo un database e vogliamo mantenerlo costante, quindi diremo solo

01:51.240 --> 02:01.210
'forEach ()' e se ricordi che 'forEach ()' scorrerà gli utenti uno alla volta e lo diremo se 'user. id 'che è ciò che otterrà

02:02.670 --> 02:11.390
da quel database equivale a' id 'che abbiamo ricevuto da' params ',

02:11.390 --> 02:23.610
in tal caso, risponderemo con JSON, quell'utente [req. json (utente)] - invieremo all'utente l'identificativo "id" corrispondente,

02:26.440 --> 02:34.180
altrimenti risponderemo con "req. json ('nessun utente del genere') '.

02:38.140 --> 02:45.830
E possiamo anche dire che è uno stato di 404, che significa "non trovato".

02:45.840 --> 02:46.040
Tutto ok.

02:46.050 --> 02:47.440
Vediamo se funziona.

02:47.630 --> 02:57.700
Ho intenzione di salvare tornare al nostro esempio. Bene sappiamo che abbiamo "123" e "124" e poiché il

02:57.740 --> 03:01.410
server è stato riavviato non avremo Ann.

03:01.810 --> 03:04.000
Vuoi prendere '/ profile / 123'.

03:04.410 --> 03:09.830
Se facciamo clic su Invia ottengo "200 OK".

03:09.840 --> 03:10.500
-

03:10.500 --> 03:11.710
Va bene, abbiamo John.

03:11.880 --> 03:20.060
Se faccio '124' ottengo "nessun utente del genere" se torniamo qui - hmm, Sally dovrebbe essere

03:22.780 --> 03:23.860
qui.

03:23.860 --> 03:25.220
Come mai non la stiamo prendendo?

03:28.240 --> 03:30.880
E vediamo qui che qui viene visualizzato un errore: "Impossibile impostare le intestazioni dopo

03:30.970 --> 03:32.890
che sono state inviate. 'Questo perché

03:32.890 --> 03:39.590
stiamo eseguendo il loop in questo modo e invece di tornare dal loop - perché una volta

03:39.590 --> 03:44.480
trovato l'id utente - non abbiamo davvero bisogno di continuare il loop.

03:44.520 --> 03:49.830
Quindi qui dovremmo semplicemente inviare una 'Res Res. json () 'e se

03:49.980 --> 03:57.180
l'utente non viene trovato bene non è necessario farlo nel loop, vero?

03:57.390 --> 04:07.980
Vogliamo dire che per ognuno se questo utente viene trovato 'return res. json () 'e diremo che una variabile' found ', che per

04:09.270 --> 04:16.780
impostazione predefinita è' false 'verrà anch'essa aggiornata con' true 'e dovrà essere una' let 'perché la stiamo

04:20.610 --> 04:26.610
riassegnando quindi 'found' sarà uguale a 'true' se lo troviamo, e so che

04:26.620 --> 04:29.610
ci sono modi migliori per farlo.

04:29.620 --> 04:32.250
Ma ancora una volta penso che questo illustrerà un punto.

04:32.290 --> 04:38.030
Potremmo anche fare una 'mappa' o un 'filtro' per vedere se effettivamente troviamo una persona con un 'id'.

04:38.420 --> 04:42.670
Ma per ora facciamo solo 'if not found' [if (! found)] Quindi

04:42.700 --> 04:48.000
l'opposto di 'found' - in tal caso

04:51.830 --> 05:00.090
risponderemo semplicemente con 'res. Stato (400). json ('not found')

05:00.260 --> 05:01.210
'Proviamo.

05:07.130 --> 05:07.470
Tutto ok.

05:07.490 --> 05:19.150
Prendo Sally. Se vado '123' ottengo John - perfetto e solo per divertimento

05:19.590 --> 05:25.080
registriamo di nuovo Ann. Ho intenzione di premere invio e il suo "id" è "125".

05:25.200 --> 05:30.970
Quindi se torno a "/ profile /" e faccio "125" ottengo Ann.

05:31.060 --> 05:32.470
E quanto è bello?

05:34.600 --> 05:34.990
Eccezionale.

05:34.990 --> 05:42.610
Quindi abbiamo questo endpoint funzionante e ne abbiamo uno ultimo che è l'immagine e

05:42.610 --> 05:47.020
questo volevamo solo aggiornare l'utente per aumentare il conteggio

05:49.890 --> 05:53.130
delle "voci". Ogni volta che inviano

05:53.130 --> 05:55.330
un'immagine, vogliamo aumentare le loro "voci".

05:57.670 --> 06:03.580
Facciamolo creando il nostro endpoint finale che è 'app. post () 'e

06:06.930 --> 06:11.330
lo chiameremo' / image '.

06:11.560 --> 06:19.510
Avremo una richiesta, risposta.

06:19.790 --> 06:26.200
E di nuovo qui dovremo trovare di nuovo l '"id" dell'utente.

06:27.800 --> 06:31.070
Per aggiornare le loro voci.

06:35.860 --> 06:43.080
In questo caso, possiamo semplicemente copiare ciò che abbiamo fatto prima e ogni volta che dobbiamo copiare

06:44.140 --> 06:52.390
bene una sorta di funzione, è un buon momento per estrarla e creare la propria funzione in modo da poterla

06:52.390 --> 06:53.770
utilizzare in entrambe.

06:53.900 --> 06:57.070
Ma per ora basta copiare

07:01.410 --> 07:09.960
e incollare e invece di avere effettivamente "params" nel nostro caso riceveremo "id" dell'utente dal corpo.

07:10.170 --> 07:15.340
E ora vogliamo dire che - vogliamo copiare

07:19.010 --> 07:27.480
anche questa parte inferiore - diremo che se l '"ID" dell'utente corrisponde, in

07:29.100 --> 07:38.450
quel caso risponderemo con l' "utente". voci "e queste" voci "che vogliamo effettivamente aumentare.

07:38.450 --> 07:48.070
Quindi diremo che 'utente. voci ++ "- ricorda che è la forma abbreviata di me che faccio più una e la

07:48.070 --> 07:48.540
riassegna.

07:48.820 --> 07:54.010
Quindi faremo semplicemente "++" e ora le voci dell'utente dovrebbero

07:54.010 --> 07:59.490
aumentare e quindi risponderemo. Se ciò non funziona, se l'utente non

08:00.360 --> 08:05.500
è stato trovato, in tal caso lo terremo così com'è: l'utente non è stato "trovato".

08:06.780 --> 08:12.640
Diciamolo e torniamo a Postman. Diremo '/ immagine'.

08:12.880 --> 08:23.010
E all'interno di questa immagine avremo una richiesta POST, che significa un corpo e possiamo semplicemente passare l

08:23.450 --> 08:24.600
'"ID" dell'utente.

08:25.080 --> 08:29.560
Nel nostro caso diremo "Id": "123", che è l'id di Johns.

08:32.240 --> 08:34.270
E faremo clic su Invia.

08:35.750 --> 08:47.900
Ottengo "1" se clicco di nuovo ottengo "2", "3", "4", "5" e se torno al 'root' che restituisce i nostri utenti

08:47.900 --> 08:57.370
e lo cambio in OTTENO ottengo John con cinque voci e Sally con zero voci.

09:00.090 --> 09:02.080
Facciamo in modo che funzioni anche per Sally.

09:02.120 --> 09:14.340
Se faccio "124" ora ottengo voci di "1" e tornando agli utenti GET ottengo John con cinque voci e

09:14.370 --> 09:20.070
Sally con una voce. Stupefacente!

09:20.250 --> 09:24.200
Ci siamo procurati un bel server API.

09:24.230 --> 09:25.430
Può sicuramente migliorare.

09:25.430 --> 09:32.600
Ci sono alcune cose che ovviamente vogliamo cambiare come "signin" - non solo per John.

09:32.900 --> 09:40.040
Abbiamo qualche ripetizione di codice che forse possiamo estrarre in una funzione.

09:40.260 --> 09:47.970
Ma volevo che avessimo qualcosa che funzionasse e che potessimo usare per consentirci di collegarlo immediatamente al nostro

09:47.970 --> 09:48.680
front-end.

09:51.680 --> 09:58.150
Possiamo finalmente eliminare la nostra sezione commentata in cui abbiamo pianificato l'aspetto della nostra API.

09:59.950 --> 10:01.710
Ottimo lavoro arrivare così lontano.

10:01.810 --> 10:03.670
Vedrò nel prossimo video. Ciao ciao
