WEBVTT

00:01.610 --> 00:02.320
Tutto apposto.

00:02.360 --> 00:10.460
Spero che tutti abbiano avuto la possibilità di risolvere il piccolo enigma dell'Avvento del Codice Babbo Natale che ha qui.

00:10.610 --> 00:18.590
Ora ti mostrerò cosa farei se leggessi questa domanda o se guardassi questo problema logico che

00:18.590 --> 00:24.980
è ancora una volta qualcosa che nelle interviste ti viene chiesto molto.

00:25.130 --> 00:33.410
E ai tuoi giorni di oggi quando risolvi problemi complessi, di solito sono i piccoli pezzi di domande logiche che vengono poste

00:33.410 --> 00:35.190
e che vuoi risolvere.

00:35.600 --> 00:38.320
Quindi passerò attraverso quello che farei.

00:38.330 --> 00:43.130
Non significa che sia l'unico modo, ma cosa farei per risolvere questi problemi.

00:44.520 --> 00:44.880
Tutto apposto.

00:44.910 --> 00:47.520
Ormai avete letto tutti la domanda.

00:47.520 --> 00:57.630
E cosa dobbiamo fare, quindi dopo aver letto la domanda otterrei il mio input di puzzle che ho qui.

00:57.660 --> 01:05.230
Copierò tutto questo e proprio qui ho la mia cartella 'nodo fantastico' senza niente al suo interno.

01:05.310 --> 01:14.830
Ho intenzione di creare un 'Babbo Natale. txt 'file e in questo file di testo, copierò e incollerò le indicazioni.

01:14.860 --> 01:18.400
Bene, non abbiamo idea di cosa stia succedendo.

01:19.810 --> 01:21.290
Lasciami chiudere.

01:21.760 --> 01:29.140
Ora leggendo la domanda la prima cosa che voglio fare è assicurarmi di avere un file di

01:29.950 --> 01:33.750
script che posso eseguire. Tutto apposto.

01:33.750 --> 01:39.610
Ora, prima di iniziare a scrivere codice, tutto nella mia testa deve avere un senso.

01:39.840 --> 01:41.710
E mi piace organizzare le cose.

01:41.910 --> 01:48.570
Quindi la prima cosa che faccio di solito è commentare e dire che - leggendo la domanda sappiamo

01:48.570 --> 01:50.530
che ci sono due parti.

01:50.790 --> 01:53.810
C'è la domanda numero uno.

01:54.030 --> 01:55.660
Domanda numero due.

01:55.840 --> 02:09.670
Quindi ci concentreremo solo sul primo, che è "A che piano finisce Babbo Natale" E la seconda domanda è, beh se andiamo

02:09.740 --> 02:16.800
qui, il primo personaggio che lo fa entrare nel seminterrato.

02:16.820 --> 02:27.150
Quindi vogliamo dire "Quando Babbo Natale entra per la prima volta nel seminterrato".

02:27.170 --> 02:27.560
Tutto apposto.

02:27.560 --> 02:29.680
Quindi ora ho tutto chiaro.

02:29.780 --> 02:32.480
E sappiamo anche che ci sono alcune regole.

02:32.660 --> 02:47.190
Le regole sono queste: questo personaggio significa che "esso" o - non "esso" - "Babbo Natale" dovrebbe salire di un piano.

02:47.320 --> 02:56.680
E so anche che questo personaggio è l'opposto e dovrebbe scendere di un piano. E so che è sciocco, ma è davvero importante

02:56.680 --> 03:02.980
per te scrivere le cose e capire cosa stai facendo e quali sono

03:02.980 --> 03:04.540
i tuoi obiettivi.

03:04.570 --> 03:15.000
Sappiamo che vogliamo risolvere questa domanda utilizzando questi parametri che otteniamo dal nostro input, il che è

03:15.000 --> 03:17.700
per il momento sconcertante.

03:19.450 --> 03:19.660
Destra.

03:19.670 --> 03:25.120
Quindi alla domanda numero uno piace sempre iniziare con una bella funzione e diremo semplicemente.

03:25.120 --> 03:26.870
'domanda 1'.

03:28.650 --> 03:34.930
E all'interno di 'question1' ho intenzione di fare il nostro file di lettura.

03:34.980 --> 03:38.760
Quindi andiamo in cima qui e facciamo.

03:38.790 --> 03:45.040
'const fs = require (' fs ')' Va bene e l'abbiamo

03:45.170 --> 03:49.380
già fatto, quindi dovrebbe essere abbastanza semplice.

03:49.520 --> 03:53.140
fs. readFile Leggeremo

03:53.220 --> 03:58.050
il 'Babbo Natale. txt 'file.

03:59.010 --> 04:04.290
E la santa. Il file txt otterrà un errore

04:07.350 --> 04:10.580
o dei dati e all'interno, ignoreremo 'err' per ora.

04:10.620 --> 04:23.480
Sono sicuro che funzionerà, quindi dirò solo che le "indicazioni stradali costanti" saranno "dati". toString () 'e questo di per sé significa

04:25.120 --> 04:29.780
che la variabile' direzioni

04:30.190 --> 04:35.020
'ora ha le direzioni che vogliamo.

04:35.040 --> 04:38.540
Quindi lasciami solo eseguire per assicurarmi che sia tutto a posto.

04:39.840 --> 04:46.900
E hai visto qui che nulla viene stampato perché questa funzione non è mai stata eseguita, quindi facciamolo.

04:46.920 --> 04:47.610
Stiamo per dire.

04:47.610 --> 04:49.630
'domanda 1()'.

04:49.980 --> 04:51.000
Eseguiamolo.

04:54.140 --> 05:00.990
Sembra che stiamo stampando tutte queste informazioni che è esattamente quello che vogliamo.

05:00.990 --> 05:02.630
Queste sono le indicazioni.

05:02.820 --> 05:09.390
E questa è un'altra cosa. Mi piace fare le cose passo dopo passo, assicurandomi che tutto funzioni prima di scrivere tutto e

05:09.390 --> 05:14.210
poi "uh-oh qualcosa non va, ma non so cosa sia sbagliato. "Faccio un passo alla volta, logicamente

05:14.220 --> 05:21.780
parlando nella mia testa per assicurarsi che abbia un senso. Mentre scrivo, tutto scorre

05:21.780 --> 05:23.010
come

05:23.010 --> 05:25.690
se stessi parlando.

05:25.740 --> 05:33.030
Abbiamo la prima domanda che stiamo leggendo il file (santa. txt) e dal 'santa. txt ', stiamo ottenendo le indicazioni.

05:33.030 --> 05:33.650
Tutto apposto.

05:33.810 --> 05:35.820
Quindi cosa vogliamo fare dopo?

05:36.120 --> 05:41.600
Bene, abbiamo visto nell'output che questi, beh, sono solo una grande stringa.

05:41.610 --> 05:44.320
Ma idealmente possiamo dividerli.

05:44.670 --> 05:50.460
Quindi, se li dividiamo, possiamo analizzare ognuno, uno per uno

05:50.460 --> 06:02.470
come un array, forse possiamo mappare su un array, quindi un modo subdolo per farlo è semplicemente dire 'const direzioniArray' e questo

06:02.470 --> 06:13.460
array di direzioni verrà diviso in array facendo ". dividere "e dividerlo in questo modo.

06:13.580 --> 06:17.180
E c'è solo un piccolo trucco di stenografia.

06:17.570 --> 06:21.500
Quindi di nuovo se consolo. log (indicazioniArray)

06:27.710 --> 06:31.400
'ecco, ho tutto in un array.

06:31.400 --> 06:35.500
Ci sono molti elementi nell'array ma adesso tutto è suddiviso individualmente.

06:35.700 --> 06:41.810
Va bene il prossimo passo. Quindi ho ogni array, quindi vogliamo leggere

06:41.810 --> 06:45.680
ognuno di questi, perché ognuno equivale a 1 o 1.

06:45.740 --> 06:52.820
E vogliamo mappare su questo, vogliamo andare su ognuno di essi, ma stiamo accumulando qualcosa di giusto.

06:52.820 --> 06:57.980
Stiamo dicendo "uno", quindi se abbiamo due piani, questo è "due".

06:58.070 --> 07:02.930
Se ne andiamo uno giù è "uno" - stiamo aggiungendo e sottraendo costantemente.

07:02.930 --> 07:06.560
Quindi in tal caso possiamo effettivamente ridurre.

07:06.860 --> 07:19.260
Quindi, con Reduce, posso dire che "risposta costante" in questo caso sarà "direzioniArray. (ridurre) 'e questa riduzione assume la

07:19.470 --> 07:21.870
prima funzione.

07:21.870 --> 07:30.990
Quindi il primo parametro è una funzione e questa funzione accetta l'accumulatore e farò semplicemente 'acc'.

07:30.990 --> 07:33.600
per ora solo perché è più corto.

07:33.840 --> 07:38.110
E poi il secondo è il valore corrente.

07:38.190 --> 07:43.690
Consentitemi di ridurlo in modo che possiate vedere - e questa è una funzione

07:46.560 --> 07:48.560
che faremo alcune cose qui.

07:48.570 --> 07:53.700
Ma il secondo parametro è quello con cui vogliamo iniziare, nell'accumulatore.

07:53.700 --> 07:55.080
Quindi inizieremo con zero.

07:55.080 --> 08:01.150
Quindi Babbo Natale è al piano zero, al piano terra

08:01.200 --> 08:11.690
- qui dentro possiamo solo dire se il valore attuale - perché ridurre le mappe su ciascuno di questi

08:11.690 --> 08:20.410
elementi e se il valore corrente '===' e diciamo, questo, che è alto 1 piano.

08:20.410 --> 08:29.440
In tal caso, possiamo solo "restituire acc".

08:29.540 --> 08:36.750
'+ = 1', che è una scorciatoia per fare accumulatore più 1.

08:37.160 --> 08:40.770
Quindi questo aggiunge uno all'accumulatore.

08:40.850 --> 08:48.060
Quindi, se il primo elemento è questa parentesi qui, sarà 0 più 1.

08:48.070 --> 08:57.000
Quindi Babbo Natale salirà di un livello e poi diremo 'else if' 'currentValue ===' la

08:57.610 --> 08:59.320
parentesi opposta

09:02.520 --> 09:06.330
')', di quanto facciamo l'esatto contrario.

09:06.330 --> 09:12.490
E andremo al nostro 'return acc - = 1'.

09:12.540 --> 09:13.920
Quindi andrà giù uno Va

09:17.250 --> 09:17.890
bene.

09:18.300 --> 09:22.460
Quindi, solo per curiosità, eseguiamo questo e vediamo cosa succede.

09:22.480 --> 09:32.380
Ho intenzione di "svuotare" ed eseguire questa volta e non otteniamo nulla, perché non abbiamo detto nulla.

09:33.430 --> 09:37.790
Quindi, consenti il log della console alla fine di questo: abbiamo la risposta.

09:37.900 --> 09:42.510
Quindi andiamo solo a console. log '' answer:

09:45.720 --> 09:46.570
'E

09:47.490 --> 09:52.980
diremo che la' risposta: '' o diremo semplicemente 'floor:'

09:53.760 --> 10:00.750
quindi se eseguo di nuovo questo. Uh-oh ho un po 'di errore ed è perché mi sono dimenticato di - vieni qui.

10:00.750 --> 10:01.660
Sciocco me

10:01.710 --> 10:09.490
Facciamolo di nuovo, fammi chiarire e ottengo "floor: 280" e questa è la risposta.

10:09.490 --> 10:11.920
Ecco dove finisce Santa.

10:12.010 --> 10:18.020
Finisce al piano 280 se continua a seguire la direzione fino alla fine.

10:19.230 --> 10:20.490
Molto bello.

10:20.490 --> 10:32.600
Quindi, solo per curiosità, aggiungiamo del tempo per capire quanto tempo ci vuole - e diremo 'console. time 'Oops

10:32.690 --> 10:37.540
Whoa.

10:37.670 --> 10:40.410
La mia piccola scheda non funziona bene oggi.

10:40.520 --> 10:48.370
E diremo "tempo di santa" e questo "tempo di santa" all'interno di questa funzione.

10:48.470 --> 10:58.960
Fino a quando non avremo la risposta, diremo "tempo di santa" - e se eseguo questo, la nostra funzione

10:59.530 --> 11:02.910
esegue quattrocentotrentasette, 0. 437ms Così

11:02.980 --> 11:07.570
veloce, perché non stiamo facendo niente di troppo folle.

11:07.570 --> 11:09.640
Così curioso perché sei arrivato qui.

11:09.640 --> 11:15.110
Tieni presente che questo dipende davvero dal tipo di macchina, dal tipo di macchina su cui ti trovi.

11:15.130 --> 11:20.400
Ma ancora una volta è abbastanza divertente pensare a come strutturare il codice.

11:20.650 --> 11:23.680
Quindi, prima di tutto ha senso.

11:23.740 --> 11:25.030
Funziona bene.

11:25.450 --> 11:32.170
Inoltre, vuoi assicurarti che sia efficiente - e guardando questo.

11:32.200 --> 11:34.820
Non stiamo facendo nulla di troppo inefficiente.

11:35.020 --> 11:42.230
Bene, passiamo alla domanda numero due. E la domanda numero due - facciamo spazio per questo

11:42.230 --> 11:47.270
- la domanda numero 2 chiede quando Babbo Natale entra per la prima volta nel seminterrato.

11:47.270 --> 11:54.650
Quindi sta bene usando questo loop qui - mentre Babbo Natale inizia a prendere la direzione.

11:54.650 --> 11:59.030
Quando l'accumulatore va nel numero negativo.

11:59.170 --> 12:05.030
Ora posso semplicemente copiare e incollare questo nella domanda numero due.

12:06.650 --> 12:10.750
E magari aggiungi un'istruzione 'if' qui.

12:10.910 --> 12:19.120
Forse posso dire "se acc è inferiore a zero".

12:20.170 --> 12:25.730
Allora sai, possiamo dire 'console. registra "la risposta.

12:25.870 --> 12:27.750
E funziona bene.

12:28.620 --> 12:34.550
Ma ancora una volta, pensando alla domanda, questo riduce la possibilità di mappare tutto.

12:34.650 --> 12:40.320
E ricordi che questo è un array piuttosto grande che stiamo creando fuori dalle direzioni.

12:40.350 --> 12:45.900
Quindi se Babbo Natale, alla prima mossa, va nel seminterrato.

12:46.020 --> 12:50.290
E poi esaminiamo ancora ogni elemento dell'array.

12:50.370 --> 12:52.530
È un po 'di tempo sprecato.

12:52.770 --> 12:53.310
Destra.

12:53.310 --> 13:00.750
Quindi vogliamo pensare ai problemi in modi che abbiano senso per noi e siano efficienti; e questo è ancora

13:00.810 --> 13:02.630
qualcosa che vuoi praticare.

13:02.630 --> 13:07.680
Ha senso nella tua testa se dovresti farlo manualmente.

13:07.920 --> 13:17.250
Andresti passo dopo passo attraverso tutto, o ti fermeresti semplicemente quando Babbo Natale entra nel seminterrato

13:17.250 --> 13:19.080
nel numero negativo.

13:19.080 --> 13:21.700
Quindi troviamo un modo migliore per

13:21.720 --> 13:26.280
fare la domanda numero due. Ancora con la

13:26.290 --> 13:41.420
domanda numero due dirò 'function question2 ()', e all'interno qui diremo 'fs. readFile 'ancora una volta.

13:44.490 --> 13:50.550
E questo file letto leggerà '. / Santa. testo'.

13:50.760 --> 13:52.530
Ancora una volta questo è lo stesso di cui sopra.

13:52.650 --> 14:01.800
Quindi lo farò rapidamente, e come la prima parte che è le indicazioni e le inserisce in un array, è

14:01.800 --> 14:08.280
la stessa cosa quindi copierò quello, ottenendo di nuovo le direzioni trasformandole in un

14:08.280 --> 14:10.230
array da dividendolo.

14:10.350 --> 14:18.300
E ora aggiungerò una piccola funzione che penso sia meglio che ridurre in questo caso. Quindi sto per dire 'const

14:18.300 --> 14:24.000
answer = directionsArray. some () 'E un

14:24.200 --> 14:33.960
po' di ciò che farà sarà guardare attraverso l'array, andare passo dopo passo e se trova qualcosa

14:33.960 --> 14:37.600
che corrisponde, smetterà di fare il loop.

14:37.800 --> 14:46.260
Quindi, con 'indicazioni Array. un po ', avrò il valore corrente e questo valore corrente.

14:46.800 --> 14:52.800
Quindi questo è l'oggetto o la parentesi che stiamo ottenendo.

14:54.140 --> 14:55.570
Quindi questo valore attuale.

14:56.000 --> 15:01.250
Ancora una volta lo faremo se istruzione, valore attuale e valore corrente, ne aggiungeremo uno o

15:01.250 --> 15:02.540
ne sottrarremo uno.

15:02.540 --> 15:05.820
Quindi di nuovo copio e incollalo qui.

15:05.820 --> 15:14.160
Ma ancora una volta non abbiamo davvero accesso a questa funzione. E poiché non stiamo davvero usando un riduttore ma

15:14.160 --> 15:19.820
vogliamo tenere traccia di un contatore per vedere quando Babbo Natale entrerà nel seminterrato.

15:19.830 --> 15:24.600
Quindi, al di fuori della funzione, dirò "let accumulator".

15:24.720 --> 15:35.890
Vorrei solo essere più descrittivo questa volta, e diremo 0 e questo accumulatore verrà incrementato in base

15:36.010 --> 15:37.410
alle indicazioni.

15:37.420 --> 15:37.880
Tutto apposto.

15:38.050 --> 15:45.080
Quindi, usandolo, vediamo quale è la mia console. risposta log 'sarà.

15:45.190 --> 15:51.520
Quindi diremo di nuovo 'seminterrato inserito in:' e diremo

15:54.670 --> 16:01.060
'risposta' e lasciami semplicemente rimuovere la domanda 1 per

16:01.060 --> 16:06.860
ora ed eseguire solo la domanda due.

16:07.070 --> 16:12.940
Eseguiamo questo, 'seminterrato inserito in: vero'.

16:13.160 --> 16:19.760
E abbiamo fatto un errore qui perché quello che vogliamo fare da '. un po 'è che vogliamo restituire qualcosa che

16:19.760 --> 16:22.930
vogliamo restituire quando viene raggiunto un obiettivo.

16:22.940 --> 16:26.600
Quindi alla fine diremo "accumulatore di

16:29.060 --> 16:32.930
ritorno" e quando l'accumulatore è maggiore di zero.

16:32.960 --> 16:41.720
Ricorda che return termina la funzione; diremo "Stop qualunque cosa tu stia facendo" e poi finirà

16:41.720 --> 16:43.040
la funzione.

16:43.100 --> 16:48.080
Ma vogliamo sapere quando Babbo Natale entra per la prima volta nel seminterrato.

16:48.080 --> 16:54.490
Quindi questo è un: quale numero di direzioni fa Santa prima di entrare nel seminterrato.

16:54.500 --> 16:57.730
Quindi abbiamo anche bisogno di un contatore.

16:57.840 --> 17:00.390
Quindi questo contatore sarà uguale a zero.

17:00.600 --> 17:03.830
E ho perso un sacco di punti e virgola qui, ma va bene.

17:04.020 --> 17:14.520
E aumenteremo il segnalino ogni volta che passa attraverso un oggetto.

17:14.680 --> 17:23.540
E ora la risposta, beh non questa, ma la risposta sarà il contatore stesso.

17:23.540 --> 17:32.780
Quindi, se faccio counter, save, va bene e eseguiamo questo. E in realtà ho fatto un errore

17:32.780 --> 17:39.740
qui perché è ancora zero perché il contatore viene incrementato dopo l'istruzione return.

17:39.740 --> 17:44.710
Quindi 'currentValue', in realtà chiamiamo questo 'currentItem'.

17:44.750 --> 17:52.630
È molto più descrittivo: 'currentItem'.

17:52.710 --> 17:55.820
Questo viene restituito prima ancora che tu colpisca il contatore.

17:55.890 --> 18:01.570
Quindi, nel nostro caso, diversamente da quanto sopra, non abbiamo davvero bisogno della dichiarazione di ritorno.

18:04.640 --> 18:09.330
Salveremo, scapperemo e il gioco è fatto.

18:09.570 --> 18:14.210
E la risposta in questo caso è millesettecentonovantasette.

18:15.770 --> 18:16.390
Eccezionale.

18:16.400 --> 18:24.260
Quindi di nuovo per provarlo, usiamo il nostro "tempo di Babbo Natale" ora, per copiare dall'alto e lo

18:24.260 --> 18:35.210
metteremo in cima per "console". tempo "e la fine di" console. timeEnd'. Vediamo quanto è veloce quella funzione.

18:35.370 --> 18:38.910
Abbiamo di nuovo abbastanza veloce.

18:38.910 --> 18:47.200
Ma se riducessi, che nel nostro caso è quello che usiamo per la prima domanda.

18:47.200 --> 18:52.470
Quindi passiamo attraverso quello, vediamo che Bene il

18:52.640 --> 18:59.090
primo round di 'console. time ('santa-time') ', che è la

18:59.130 --> 19:12.790
domanda 1 è Lasciami solo aggiungere un q1 qui in modo che possiamo vedere, e q2, aggiungilo per assicurarti che le etichette corrispondano Facciamolo

19:18.460 --> 19:19.940
di nuovo.

19:30.390 --> 19:32.040
Va molto meglio.

19:32.040 --> 19:35.930
Quindi vediamo quella domanda 1.

19:36.050 --> 19:42.540
Sicuramente lungo, corre un po 'più a lungo della domanda 2 perché la prima volta dobbiamo fare il giro

19:42.540 --> 19:43.520
di tutto.

19:43.530 --> 19:47.540
La seconda volta è molto meno tempo. Ancora per divertimento,

19:47.550 --> 19:50.690
com'è come testare i nostri presupposti.

19:50.730 --> 19:52.980
Quindi se la

19:56.000 --> 20:01.160
prima direzione fosse scendere. Vediamo cosa succede.

20:01.160 --> 20:06.890
Va bene, quindi è un po 'più veloce di prima.

20:06.900 --> 20:12.720
Non molto perché stiamo ancora facendo un po 'di calcoli, ma ancora molto più

20:12.720 --> 20:19.600
velocemente che passare attraverso questi molti elementi. Nel caso ti stia chiedendo perché in questo caso

20:19.650 --> 20:23.400
la domanda 2 sia terminata prima della domanda uno e non

20:23.400 --> 20:30.890
negli altri casi, ricorda ancora che Leggi il file è asincrono. Qualunque cosa ritorni prima, viene restituita.

20:30.930 --> 20:31.470
Tutto apposto.

20:31.470 --> 20:33.480
Spero che ti diverta con le sfide.

20:33.670 --> 20:40.800
Se ti è piaciuto, ti consiglio di continuare con l'avvento del codice e, si spera, come gruppo, con la

20:40.920 --> 20:42.010
nostra comunità.

20:42.210 --> 20:49.100
Quando arriva dicembre, siamo tutti pronti a seguire l'avvento del codice per quest'anno.

20:49.170 --> 20:50.730
Ci vediamo nel prossimo. Ciao ciao
