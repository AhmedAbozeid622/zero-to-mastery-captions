WEBVTT

00:00.910 --> 00:01.580
Ben tornato.

00:01.630 --> 00:07.860
In questo video voglio parlare dei tre tipi di moduli che puoi avere in Node.

00:07.960 --> 00:14.670
Abbiamo visto che abbiamo questo tipo di cui già sappiamo qual è un modulo che crei

00:14.710 --> 00:23.770
tu stesso come 'script2' e ha i suoi moduli esportati e gli dai il percorso del file in modo da poterlo trovare.

00:23.790 --> 00:33.910
C'è anche qualcosa chiamato 'moduli integrati' e moduli integrati sono moduli che sono già preinstallati con

00:33.910 --> 00:34.780
Node.

00:35.170 --> 00:43.750
Ad esempio uno dei più popolari è il modulo 'fs' e questo modulo, se consolo

00:48.660 --> 00:52.930
il registro [console. log (c)] è un modulo con ancora una serie di cose.

00:53.250 --> 00:56.030
Ma ti permette di leggere il file system.

00:56.130 --> 01:04.790
Cioè, se avessi un file di testo e volessi leggere il file di testo ed estrarre quante

01:04.790 --> 01:12.830
volte è stata detta la parola 'ciao', puoi scriverlo semplicemente usando il modulo del file system

01:13.490 --> 01:24.610
e usando qualcosa come 'readFile : 'o' readFileSync: 'che produrrà - fai qualcosa come' readFile '- produrrà il contenuto del file e quindi

01:24.760 --> 01:28.480
potrai fare quello che vuoi con esso.

01:29.280 --> 01:39.180
Un altro popolare è il modulo HTTP che come puoi immaginare è il modulo che useremo in

01:39.180 --> 01:45.730
seguito per costruire un server. E puoi leggere su tutti questi moduli, ma quei due sono probabilmente i più popolari.

01:45.730 --> 01:56.020
Nel nostro caso come sviluppatori web siamo davvero preoccupati per quello HTTP che questi moduli sono senza "percorso" -

01:57.240 --> 02:00.260
sono semplicemente esattamente così [("http")].

02:01.100 --> 02:09.130
E infine il terzo tipo di modulo, quello che conosciamo è qualcosa di npm, un pacchetto.

02:09.500 --> 02:16.810
E uno dei miei pacchetti preferiti da usare con Node è qualcosa chiamato 'nodemon'

02:16.810 --> 02:27.070
e nodemon è davvero bello perché se lo deseleziono e installo npm 'install' - e dovrò prima fare 'npm init'

02:27.070 --> 02:33.280
certo che ho un 'pacchetto. json 'file e se passo' -y 'dirà semplicemente sì a tutti i

02:33.700 --> 02:35.260
prompt che ottengo in anticipo.

02:36.460 --> 02:37.240
Ecco qua

02:37.320 --> 02:46.590
Ho il mio 'pacchetto. json ", e ora all'interno di questo" pacchetto. json 'Sto per dire' npm install

02:47.190 --> 02:49.800
nodemon --save-dev 'Se vado a'

02:55.760 --> 02:57.820
pacchetto. json "Vedo

02:57.870 --> 02:58.500
che

02:58.530 --> 03:03.900
ora ho nodemon in" devDependencies "e non l'abbiamo mai visto prima.

03:03.900 --> 03:09.600
Fino ad ora abbiamo fatto '--save' o niente e lo abbiamo inserito automaticamente in

03:10.540 --> 03:14.840
'dipendenze' 'devDependencies' sono dipendenze che usiamo solo quando stiamo sviluppando.

03:14.890 --> 03:22.300
Quando rilasciamo effettivamente questa app o il server non verrà inclusa perché nodeman è solo per - ancora

03:22.360 --> 03:26.300
una volta - il nostro divertimento mentre stiamo sviluppando.

03:26.300 --> 03:28.220
Ora lascia che ti mostri cosa fa Nodeman.

03:28.400 --> 03:33.100
nodemon ora può essere usato perché è in 'node_modules' Se vai

03:33.130 --> 03:35.890
a '. bin 'vedi nodemon qui.

03:36.260 --> 03:42.020
Bene perché è nel pacchetto 'node_modules. bin 'Posso usare il

03:42.460 --> 03:46.880
comando come "start" e dire "nodemon" e

03:50.770 --> 03:59.590
Node è abbastanza intelligente da sapere che se eseguo nodemon andrà a cercare in

03:59.600 --> 04:02.550
". cartella bin e trovala lì; se lo

04:02.810 --> 04:03.750
trova lì, cosa

04:03.790 --> 04:04.870
che fa, eseguirà il comando.

04:05.000 --> 04:06.140
Quindi vediamo cosa succede.

04:07.300 --> 04:16.990
Se lo annullo e faccio 'npm start', riceviamo un po 'di errore perché bene abbiamo alcuni file strani

04:16.990 --> 04:20.970
qui, quindi torniamo al nostro esempio originale.

04:21.010 --> 04:28.640
Salviamo la corsa 'npm start' e abbiamo una 'uscita pulita'.

04:28.810 --> 04:30.860
Ma vedi che qualcosa è ancora in esecuzione.

04:30.970 --> 04:35.590
Se cambio questo ora in 6 e lo salvo,

04:35.590 --> 04:41.710
guarderò quei cambiamenti per me; continua ad ascoltare i cambiamenti e produrrà tutto.

04:41.710 --> 04:51.240
Ancora una volta, se cambio questo, quindi non devo continuare a eseguire lo 'script del nodo. comando di js.

04:51.360 --> 04:52.050
Molto bello.

04:52.050 --> 04:57.210
Quindi useremo molto nodemon ed è una delle mie cose preferite da usare di nuovo in modo da non dover andare

04:57.210 --> 04:58.820
avanti e indietro, avanti e indietro.

04:58.890 --> 05:05.210
E se commetti degli errori bene, ti farà sapere subito.

05:05.270 --> 05:05.520
Tutto ok.

05:05.520 --> 05:06.800
Perfezionare.

05:06.840 --> 05:07.820
Per ora è tutto.

05:07.830 --> 05:09.900
Ci vediamo nel prossimo. Ciao ciao
