WEBVTT

00:00.710 --> 00:01.480
Welcome back.

00:01.670 --> 00:09.430
Let's continue from our previous video to talk about a more advanced workflow and git and github.

00:10.700 --> 00:16.490
Now up to this point both Marcy and I have just been working on over here.

00:16.490 --> 00:19.110
Branch master what does that mean.

00:19.280 --> 00:27.240
Well it says branches but I only see master here and you might have noticed one issue with the way that

00:27.240 --> 00:28.520
we were doing things.

00:28.710 --> 00:34.030
That is if it's my first day on the job and I just changed the title.

00:34.320 --> 00:36.030
But maybe we didn't even want that change.

00:36.030 --> 00:40.650
Maybe that breaks our branding or breaks our app.

00:40.650 --> 00:44.350
But I was able to do it so easily to change it into Master.

00:44.400 --> 00:48.840
Maybe Marcy didn't even know that I've added that change and that's a big problem right.

00:48.840 --> 00:53.830
You don't want to put things into what we call production into what the user sees.

00:54.360 --> 00:59.820
If it's going to break our website if you're a big company like Facebook that could mean millions of

00:59.820 --> 01:07.030
dollars in lost revenue even if you have a bug that lasts a few hours so I'm going to show you a more

01:07.030 --> 01:09.360
realistic workflow that you'll have.

01:09.370 --> 01:12.860
And that is with branching. Let me show you what I mean.

01:14.300 --> 01:18.760
I have over here a visual of what git is really really good at.

01:18.890 --> 01:22.410
Up until now we've been working on what we call master.

01:22.580 --> 01:24.250
That is the master branch.

01:24.250 --> 01:28.270
Think of the master branch as the authority.

01:28.310 --> 01:33.000
This is the right way that our app or our Web site should look.

01:33.010 --> 01:41.660
And up until now when I added the cool background title Well I went from a background generator to

01:42.530 --> 01:47.600
cool generator and then when Marcy changed to capitalized letters.

01:47.600 --> 01:52.820
Then we went to here and we just went in a linear fashion from one end to the other to the other to

01:52.820 --> 01:53.650
the other.

01:54.030 --> 01:56.490
But like I said that is a bit of a problem.

01:56.510 --> 01:59.900
So a better thing to do is what we call branching.

01:59.900 --> 02:06.420
If I wanted to change the title I will create a branch and just call that little feature for example.

02:06.890 --> 02:15.290
And I just work on that branch on my own without affecting the master branch what the user sees.

02:15.540 --> 02:20.950
Only when it's finished when Marcy has reviewed it when we have tested it and everybody on the team

02:20.950 --> 02:21.780
is OK.

02:21.950 --> 02:29.140
Then we bring it back into master and you can see over here with the big feature you can keep going for

02:29.140 --> 02:38.140
a long time on your own branch and only when you're done do what we call merge into Master.

02:38.200 --> 02:39.710
I'm going to show you how that works today.

02:41.360 --> 02:42.280
I'm gonna close this.

02:42.290 --> 02:51.440
And remember our example we have Marcy's computer here with all the files and we have my computer here

02:51.530 --> 02:52.750
with all the files.

02:53.030 --> 03:00.560
We both have our workstations set up and now you see what master in my terminal means and I'll show

03:00.560 --> 03:05.880
you in the notes afterwards how you can have this set up so it tells you what branch you're on.

03:05.900 --> 03:12.770
But we can see that we're both on Master. That's my computer and Marcy's computer is also in Master.

03:12.950 --> 03:18.470
We want to make sure that we're both up to date with the latest github.

03:18.470 --> 03:22.950
So Marcy's going to do git pull and I'm also going to do git pull.

03:26.460 --> 03:33.090
And let's say that I'm now working on a new feature and because it's a better workflow not to work on

03:33.090 --> 03:33.590
master.

03:33.600 --> 03:37.730
And this is a good tip generally don't work on master, always branch off.

03:37.860 --> 03:44.790
If I do git branch they'll show me that well I only have one branch and that is master but we can add

03:44.790 --> 03:57.340
to it we can say git branch new or little feature and now if I do git branch I see that I have little

03:57.340 --> 04:00.970
feature but Master is highlighted because I'm currently on master.

04:01.210 --> 04:11.160
So the way I would go to the little feature branch I'll say git checkout little feature and there you

04:11.160 --> 04:11.390
go.

04:11.400 --> 04:13.140
Switch to branch little feature.

04:13.140 --> 04:21.480
And now I'm on a little feature branch so what I've done is I've branched off of master and now created

04:22.080 --> 04:24.890
little feature.

04:25.100 --> 04:26.830
Let's create a bit of a change.

04:26.840 --> 04:33.770
I'm going to say in the little feature we're going to change the current CSS background title to say

04:34.850 --> 04:36.890
this is the background

04:41.010 --> 04:42.080
I'm going to save here.

04:42.360 --> 04:49.100
And again I do my simple workflow that we did in the last video git status.

04:49.170 --> 04:49.680
I see that.

04:49.680 --> 04:49.990
Yeah.

04:50.130 --> 04:53.630
We have the index.html changed, going to clear so we can see.

04:53.650 --> 05:02.720
So now that we've made this change let's do git add and again just git status to make sure everything

05:02.720 --> 05:03.330
went through.

05:03.470 --> 05:06.090
Yeah we're ready to commit index.html.

05:06.110 --> 05:14.310
So we'll git commit message will be changing text. Perfect.

05:14.330 --> 05:16.020
Let's clear that.

05:16.210 --> 05:21.880
And now again in order to let github know all of the changes we need to do git push.

05:22.160 --> 05:23.900
So we'll do git push.

05:29.960 --> 05:32.930
Lets go to github and see what happened.

05:34.950 --> 05:40.650
We see that now we have this yellow bar that just showed up and says "You recently pushed branches".

05:41.760 --> 05:44.550
So if I click on this green button here compare and pull request

05:47.790 --> 05:54.640
it shows me what changes I have which is I've changed the title and here I can let Marcy know saying

05:54.650 --> 05:59.330
"Marcy I've changed the text."

05:59.800 --> 06:03.450
"What do you think". And I click on Create pull request

06:06.480 --> 06:11.410
and now I have my PR and you see here how it says merge pull request.

06:11.430 --> 06:18.570
Well if we go back to our diagram I've created this little feature and now I'm saying hey Marcy I've

06:18.690 --> 06:20.820
just done this new change.

06:20.820 --> 06:21.750
What do you think.

06:21.780 --> 06:25.200
Is it OK for me to merge it into master.

06:25.380 --> 06:31.230
And what will happen here most likely as Marcy's will come see this pull request.

06:31.230 --> 06:33.180
You can see that we're on the pull request tabs.

06:33.210 --> 06:37.420
So she'll be able to see them and seeing Oh Andrea just did this change.

06:37.620 --> 06:46.860
She'll look through the changes and she'll say Hmm well if she like says she can be like looks good

06:47.910 --> 06:53.240
she can click on start a review and you know what she really likes it so she's just going to approve

07:01.310 --> 07:04.040
Now Marcy or myself.

07:04.040 --> 07:08.630
Usually you don't want to merge your own pull request somebody on the team does it can now just say

07:09.230 --> 07:17.400
Merge pull request confirm merge and there you go some teams like deleting the branch afterwards so you

07:17.400 --> 07:18.890
can just click delete here.

07:21.020 --> 07:26.520
If I go back to the code, well I don't have the branches anymore because I just deleted it.

07:26.780 --> 07:35.110
But in my master if I go to index.html I see this is the background so now Marcy can go

07:35.110 --> 07:37.840
to her project and say git pull

07:40.680 --> 07:47.150
and again she has the latest update.

07:47.160 --> 07:49.970
Now let's talk about some conflicts that can arise.

07:50.130 --> 07:56.840
Now let's say Marcy wants to change something and I also change the same thing and we get our merge conflict.

07:57.210 --> 07:58.450
Let's see what happens.

07:58.470 --> 08:05.570
So let's say Marcy wants to change create a new feature saying we'll call this one big feature and she'll

08:05.570 --> 08:09.780
say git checkout or git branch.

08:09.890 --> 08:17.750
Big feature. She'll say git checkout big feature.

08:19.980 --> 08:23.490
And if I do git branch we see that there's a new branch here.

08:23.580 --> 08:24.820
Let's clear that.

08:24.930 --> 08:30.900
And she'll say here that she wants to change this back to background color or background generator because

08:30.930 --> 08:34.490
all the users are complaining that the title changed and they liked the old title.

08:34.500 --> 08:36.000
So she changed that.

08:36.480 --> 08:42.920
She has done the git add, git commit,

08:45.490 --> 08:54.560
reverting back to old title perfect and then she's gonna do git push.

08:54.670 --> 08:56.540
Oh let's clear the first actually.

08:57.060 --> 09:03.260
And we do git push. A first time you get this you might get this error saying that there's no upstream

09:03.830 --> 09:06.280
you just copy the code that they give you here.

09:10.770 --> 09:11.520
Perfect.

09:11.520 --> 09:12.510
Now if I go back

09:15.300 --> 09:23.400
to background generator I see the big feature pull request over here and just to show you that you can

09:23.400 --> 09:27.790
have multiple commits let's say Marcy decides to oh this is me.

09:27.810 --> 09:30.590
Marcy decides to add an exclamation point here.

09:30.630 --> 09:34.030
She can just say again she saves this.

09:34.130 --> 09:41.000
Let's clear she'll say git add, git commit. You do this a lot.

09:41.000 --> 09:51.140
So you get really really good at git after working in the company for a while and she'll say added exclamation.

09:51.430 --> 09:53.430
That's not what I wanted to do. Git commit.

09:55.950 --> 10:01.440
Commit added exclamation

10:03.810 --> 10:06.050
and she'll do git push again.

10:09.930 --> 10:13.250
And let's go back to github.

10:13.370 --> 10:19.790
If we look at the pull request they'll actually have both of these reverting back to old title and added

10:19.790 --> 10:27.800
exclamation and we see over here both of the changes create the pull request needs changes.

10:27.950 --> 10:28.340
Andrea

10:31.070 --> 10:40.780
so while this pull request is out there I decided to start a new branch called Let's just call it conflict

10:40.780 --> 10:41.490
for now.

10:44.390 --> 10:49.710
And I'll do git checkout conflict.

10:49.830 --> 11:02.720
And now in the conflict branch I decide to change this to just completely remove the cool generator.

11:03.180 --> 11:10.980
I save that again I check my status and index.html file has been changed.

11:11.410 --> 11:18.730
So while this is happening I get Marcey to merge the pull request.

11:18.730 --> 11:23.150
So she's entered it into master, her pull request is in.

11:23.200 --> 11:33.770
And now if I go back to my conflict and I do git status and we have to add these so git add then git commit

11:34.230 --> 11:35.550
I'll just do a short message here.

11:35.590 --> 11:49.750
Just check and now if I go back to master. Oh I have to do git checkout master again before I push my

11:49.750 --> 11:56.140
changes I want to make sure that I have the latest version of master so I'm not changing anything.

11:56.140 --> 12:02.740
I won't have any conflicts so I'll do git pull to get the latest.

12:02.950 --> 12:18.320
And now I go to git checkout conflict branch and I can do this command git merge master.

12:18.400 --> 12:25.490
So I'm saying merge whatever is in master into conflict.

12:25.720 --> 12:34.260
Marcy has been working on the big feature and she's merged it so now Master has the big feature branch but...

12:34.280 --> 12:41.830
I've also created another branch and I've been working on my own on the conflict branch and the conflict

12:41.830 --> 12:47.800
branch doesn't know anything about master so I'm saying hey whatever is in master right now which includes the

12:47.800 --> 12:49.780
big feature that Marcy worked on.

12:50.140 --> 12:53.610
Pull it in and make sure that there's no conflict.

12:53.620 --> 13:00.520
So I do that and oh-oh I get conflict merge conflict in index.html file.

13:00.850 --> 13:08.240
Now if I actually click on sublime text let me open this up so you can see it better oh boy I get this

13:08.840 --> 13:11.750
weird little syntax.

13:12.020 --> 13:18.910
It's overwhelming at first but it's easy to see what happening head is where my branch is at.

13:19.130 --> 13:28.520
And it shows me that here to the end I don't have the h1 anymore but in the master branch we have

13:28.520 --> 13:30.310
background generator.

13:31.290 --> 13:37.730
Now I can talk to Marcy and say hey Marcy do you want to keep the background generator title.

13:37.750 --> 13:40.930
And she'll say yes that was the right thing to do.

13:40.950 --> 13:42.590
Don't change the background.

13:42.600 --> 13:45.500
Well in that case I just remove these lines

13:49.120 --> 13:53.330
and remove this and save now.

13:53.330 --> 13:59.630
If I do git status now OK.

13:59.660 --> 14:01.860
We have the modified status here.

14:01.880 --> 14:05.010
Let me just make this smaller again so you can see.

14:05.120 --> 14:06.890
Let me clear this.

14:07.100 --> 14:12.890
What we do now is we have to do git add again because we've made those changes and we have to do git

14:13.280 --> 14:19.820
commit fixing merge issue.

14:20.020 --> 14:22.150
And I forgot the "m". Let's try that again.

14:28.030 --> 14:31.260
Conflict fixing merge issue.

14:31.270 --> 14:36.160
Let's clear here and do git status.

14:36.290 --> 14:38.420
Nothing to commit, working tree clean.

14:38.480 --> 14:44.810
And if I do git push Well again I get this error but I want to show you this time around if I do git

14:45.080 --> 14:48.090
push origin conflict.

14:51.410 --> 14:53.480
It now works.

14:53.480 --> 14:58.680
Let's go back to github, see what sort of things we have.

14:58.680 --> 15:05.670
We have the conflict branch and if we look at the conflict branch now well there's nothing changed because

15:05.690 --> 15:08.670
we just reverted all my changes so it's completely empty.

15:08.670 --> 15:18.860
There's no changes now so Marcy will be like hey did you mean to, to make this PR?

15:18.960 --> 15:20.150
It's empty.

15:22.030 --> 15:25.880
They all see this message on my PR and I can keep going.

15:25.880 --> 15:30.100
And that's pretty much the workflow that you'll see in git.

15:30.140 --> 15:33.530
I'll leave the commands for you after this.

15:33.740 --> 15:36.360
But it's very very nice to work with.

15:36.410 --> 15:42.170
You learn a few commands and as long as you have this visual model of every time you're working on something

15:42.200 --> 15:47.150
you always create a branch you title it with whatever feature you're working on.

15:47.720 --> 15:56.360
And every once in a while you want to pull master and merge master into your branch to make sure that

15:56.660 --> 16:00.880
you're not missing out on any updates that other developers or team mates have done.

16:01.940 --> 16:09.830
Once you're done with your feature you make a pull request by doing git push and that pull request.

16:09.830 --> 16:15.500
You'll add comments and people will review your file changes and if they want you to make a few changes then

16:15.500 --> 16:22.370
you can do again git add, git commit finally make your changes and then you can merge pull request and

16:22.370 --> 16:25.310
once that's done then everybody else on the team.

16:25.340 --> 16:30.230
There's now a new master so everybody else on the team should do git pull as well.

16:31.210 --> 16:37.300
It does takes a bit of time to get used to but is a really really nice workflow to make sure that everybody

16:37.420 --> 16:44.530
on the team works on the same files same projects without causing any errors and making sure that everybody

16:44.530 --> 16:48.850
collaborates well and that's it.

16:48.850 --> 16:50.280
Hope you found this useful.

16:50.290 --> 16:51.440
I'll see you in the next one.

16:51.700 --> 16:51.940
Bye-bye