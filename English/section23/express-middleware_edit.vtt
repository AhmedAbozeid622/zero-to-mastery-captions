WEBVTT

00:01.450 --> 00:03.440
Welcome back. In this video

00:03.450 --> 00:09.000
I want to talk about an important concept in Express and that is middleware.

00:09.110 --> 00:10.430
Let me show you how it works.

00:10.550 --> 00:20.030
If I run the server here I just have a simple server that sends 'testest', Express has a concept of middleware

00:21.180 --> 00:28.720
and if I do 'app.use()' this is a generic Express middleware that I can enter in here.

00:29.040 --> 00:35.730
And what middleware does is â as the name suggests â as the request is coming in it's going to pass through

00:35.730 --> 00:40.420
this 'use' function and then trickle down to whatever we get:

00:40.420 --> 00:47.430
POST, PUT, DELETE and this middleware is going to do something to the request that we just had in order

00:47.430 --> 00:50.880
to perhaps make it easier to work with down here.

00:52.280 --> 01:02.020
Let's demonstrate that example: 'app.use()' receives 'request', 'response' and then something called 'next'.

01:02.240 --> 01:04.010
And within this function

01:07.830 --> 01:10.710
we will just say 'console.log()'

01:14.390 --> 01:15.000
'<h1>Helllooo</h1>'

01:18.750 --> 01:27.600
If we save and go back here and run localhost, hmmm it's hanging here.

01:27.700 --> 01:31.170
Even if I open up the Console nothing's happening.

01:31.390 --> 01:38.170
If I go back I see that '<h1>helllooo</h1>' gets triggered because I'm console logging it but it never reaches here

01:41.540 --> 01:49.950
well that is because in order for the middleware to keep passing data through it needs to call 'next'.

01:50.340 --> 01:52.720
The third parameter.

01:52.810 --> 01:59.530
So now by calling 'next' if I refresh I receive 'testest'.

01:59.620 --> 02:09.620
So the middleware the way it works is we use 'app.use()' it gets the requests of the website; the

02:09.620 --> 02:10.510
request comes through.

02:10.520 --> 02:12.190
We can do whatever we want with it.

02:12.200 --> 02:17.010
In our case we're not really touching it we're just console logging '<h1>helllooo</h1>' and then we hit next

02:17.030 --> 02:21.740
and then Express keeps running through these [app.get() and app.listen()].

02:21.830 --> 02:26.030
And although you might be thinking why is this useful?

02:26.060 --> 02:31.920
There are many many cases that I'll show you later on while middleware is important, and middlewares

02:31.920 --> 02:40.220
are great scripts that people have pre-written that you can add to your server but you'll see that more

02:40.220 --> 02:40.970
in the next video.

02:40.970 --> 02:47.760
I just wanted to show you the basic concept of middleware: something that receives ahead of time before

02:47.760 --> 02:55.570
we get to the routes, the request, modifies it and then passes the next function to keep it going.

02:56.640 --> 02:58.410
I'll see in the next one. Bye-bye.
