WEBVTT

00:02.900 --> 00:03.840
Welcome back.

00:03.980 --> 00:11.140
I have a fun little challenge for you and this challenge comes from one of my favorite programming websites

00:11.270 --> 00:19.880
on the web and it's called 'Advent of Code' and advent of code happens every December.

00:19.880 --> 00:21.980
Programmers from all over the world ,

00:22.110 --> 00:24.700
doesn't matter what language they write in.

00:24.770 --> 00:31.100
You can do these problems with any language that they want and you're supposed to solve for 24 days

00:31.100 --> 00:32.580
until Christmas

00:32.630 --> 00:35.730
these difficult problems using code.

00:35.930 --> 00:40.910
So we're going to actually do something fun here.

00:41.360 --> 00:43.720
We have the advent of code from 2015.

00:43.740 --> 00:49.100
I know that's a little bit old but I really really like this question.

00:49.100 --> 00:52.160
I think it's going to be really really good practice.

00:53.240 --> 00:59.570
So I'm going to leave for you this challenge, and there's two parts of this challenge.

00:59.570 --> 01:09.250
So think of it as you need an answer to the first part and the second part.

01:09.440 --> 01:15.770
Now I'll share the link to this challenge so you can actually read all the rules and you can even get

01:15.890 --> 01:19.170
the input for your puzzle right here.

01:20.350 --> 01:24.520
And don't worry that looks confusing but once you read the question you will understand why that is

01:25.390 --> 01:28.810
the exciting part is that in the next video.

01:28.960 --> 01:32.430
- but make sure you don't watch it before you finish it! - in the next video

01:32.680 --> 01:40.180
I'm going to show you what I would do if I was solving this logic problem using programming and this

01:40.180 --> 01:45.870
way you can compare what you do versus what I do - doesn't mean that my way is correct.

01:45.880 --> 01:48.990
There are many many different ways to solve problems

01:49.120 --> 01:56.200
when you're programming but as a fun little challenge you're going to figure out the solution to this

01:56.200 --> 02:04.700
problem using our 'fs' module using Node and using JavaScript.

02:04.940 --> 02:11.990
And then I'm going to show you what I do and we're going to see whose code is faster and the way we're

02:11.990 --> 02:14.160
going to compare our code

02:15.140 --> 02:22.030
is, we're going to do something like this inside of our function whatever that function may be.

02:22.100 --> 02:24.900
You're most likely going to read the file

02:25.130 --> 02:28.570
they provide for you which is this over here.

02:30.730 --> 02:39.650
Right after you do that we're going to say 'console.time()' and we can give it any label we want so

02:39.850 --> 02:46.890
just say the fun challenge now console log time.

02:47.100 --> 02:58.340
When we hit this line is going to start a timer and it's only going to end when it sees the

02:58.550 --> 03:02.570
'console.log' or 'timeEnd'.

03:02.810 --> 03:09.640
and we have to give it the same input or the label as the first time we called it.

03:09.730 --> 03:15.650
So 'funchallenge' ...now this way,

03:15.970 --> 03:22.930
well this is what happens if we run it and we get a bit of an error because we're deleting this file which

03:22.930 --> 03:24.540
we don't want to do that.

03:24.670 --> 03:26.990
Let's clear and try that one more time.

03:30.660 --> 03:35.310
funchallenge took 0.319 seconds.

03:35.670 --> 03:44.220
Well that was really really fast because all we're doing is really console logging but using this let's

03:44.220 --> 03:49.830
see how fast your function solves the problem.

03:50.720 --> 03:55.510
And then I'll show you how fast my solution solves the problem.

03:56.060 --> 04:00.960
And we'll have a little bit of a competition. So I'll see you in that one.

04:00.980 --> 04:01.220
Bye-bye
