WEBVTT

00:01.340 --> 00:02.130
Welcome back.

00:02.180 --> 00:06.380
It's time to build our Robo Friends app to get started.

00:06.500 --> 00:08.850
Well let's open up our terminal.

00:08.870 --> 00:11.050
We should be comfortable with it by now.

00:11.480 --> 00:17.960
For this section I really really recommend coding along and following along the processes because you

00:17.960 --> 00:23.310
will learn a lot better by actually doing this yourself.

00:23.360 --> 00:24.530
And like I promised.

00:24.530 --> 00:28.750
It's fairly easy and we'll have a beautiful app at the end of it.

00:28.850 --> 00:35.450
But for those that enjoy just watching and working afterwards I will provide the final Robo Friends

00:35.540 --> 00:38.190
app files for you at the end of this section.

00:40.150 --> 00:40.590
OK.

00:40.860 --> 00:41.940
So we have nothing yet.

00:41.970 --> 00:43.470
We're in the desktop.

00:43.470 --> 00:52.940
We need to actually create a project folder and we do need to install react.

00:52.940 --> 01:01.490
Now if you remember in NPM we could install react and have it as part of our packages in package.json

01:01.500 --> 01:02.350
-

01:02.530 --> 01:07.480
But there's a tool again because react apps are so common.

01:07.480 --> 01:15.320
There's a tool that allows us to right away create a react app with all our files already put into place.

01:15.370 --> 01:18.050
It's called create react

01:20.580 --> 01:21.280
app.

01:21.680 --> 01:29.780
This tool is a global package that you want to install from NPM and it creates a starter project that

01:29.810 --> 01:36.270
contains web pack it contains babel so we can use the latest JavaScript features.

01:36.620 --> 01:41.860
It contains lint and debugging that we haven't really looked at yet.

01:41.990 --> 01:46.880
It creates all this infrastructure for you so right away you can start writing the app and it's a very

01:46.880 --> 01:51.720
very good tool that a lot of people use so we're going to install create-react-app.

01:51.740 --> 01:55.880
If you remember we simply do npm install dash g

01:59.110 --> 02:04.130
and this will give us create-react-app again if you get these errors.

02:04.160 --> 02:07.220
Always remember to do sudo

02:14.550 --> 02:20.920
now that we have create-react-app we simply say create-react-app and the name of our app.

02:20.940 --> 02:25.390
In our case we'll call it Robo Friends.

02:29.180 --> 02:36.010
You see that it's installing a bunch of things that we need.

02:36.400 --> 02:44.260
It looks like it's a success created Robo Friends at my directory and it even gives you some good commands

02:44.290 --> 02:52.600
npm start npm run build npm test npm run eject but we'll get to that later.

02:52.600 --> 02:55.940
Let's see what we have in our desktop folder.

02:57.120 --> 03:01.250
We have Robo Friends that's already been created for us.

03:01.650 --> 03:03.270
OK let's cd into that.

03:05.000 --> 03:14.690
And now if I do ls looks like we have a ton of folders and files such as package.json that were

03:14.690 --> 03:18.150
already created for us and node modules how awesome is that.

03:18.170 --> 03:23.790
It already installs react and all the dependencies that we need.

03:23.930 --> 03:28.830
As a matter of fact if we go to the desktop we see the folder here.

03:28.970 --> 03:31.690
So let's drag this to Sublime Text.

03:31.880 --> 03:36.740
Open it up and I'm going to change the screens around just so we can see

03:40.280 --> 03:42.190
both of these at the same time.

03:47.680 --> 03:56.180
Now before I show you what's in the folder we see that if we go to package.json we see the dependencies

03:56.180 --> 03:57.530
we have react.

03:57.530 --> 04:04.880
We have something called react-dom and react-scripts and we also have a bunch of scripts that

04:04.970 --> 04:07.160
they've already created for us.

04:07.160 --> 04:10.850
We have start build test and eject.

04:11.010 --> 04:16.710
Let's start off with start because well it looks like start reads the react scripts and starts

04:16.710 --> 04:18.210
up our server.

04:18.210 --> 04:19.790
So I'm going to say npm start

04:26.870 --> 04:35.990
look at that we have on our localhost a sample react app so everything's working.

04:36.030 --> 04:40.200
We didn't have to do anything except for run just two commands really.

04:40.470 --> 04:41.220
Very cool.

04:41.400 --> 04:41.680
OK.

04:41.700 --> 04:46.530
Let's see what create-react-app has created for us.

04:46.530 --> 04:52.660
We have a readme which is just information that if you remember when we put it on github

04:52.710 --> 04:53.820
this will display

04:53.840 --> 05:01.040
in the project folder we have package.json which again makes sense.

05:01.280 --> 05:03.500
I'll explain to you what the dependencies mean.

05:03.530 --> 05:04.710
in the next video.

05:04.940 --> 05:12.110
But we see that scripts we're provided for and all of them use react scripts.

05:12.410 --> 05:16.540
Now react scripts is what makes create-react-app

05:16.580 --> 05:22.960
so awesome instead of us installing things like webpack and babel.

05:22.970 --> 05:29.330
Do you remember how much setup we had to do to get ES6 JavaScript working.

05:29.480 --> 05:36.170
And then we also use browserify to bundle the JavaScript files well react scripts does everything

05:36.170 --> 05:42.940
for you and it uses the latest and greatest that we don't need to worry about any of it.

05:42.950 --> 05:49.820
So it allows for people to build really really fast apps and you can use the eject if you end up wanting

05:49.820 --> 05:53.610
to customize the react scripts and go on your own.

05:54.020 --> 06:00.710
So as your project gets bigger and bigger you can always eject and customize your app it is the best way

06:00.710 --> 06:02.450
to start a react project.

06:02.450 --> 06:06.920
It's managed by the Facebook team and it is really really good.

06:08.580 --> 06:09.060
OK.

06:09.230 --> 06:16.910
We also see that there's package-lock.json file and this is a file that automatically is generated

06:16.910 --> 06:18.390
by package.json

06:18.620 --> 06:26.000
It makes sure that the version numbers of your dependencies are locked in so that if I give this project

06:26.000 --> 06:33.350
to anybody else anywhere around the world we make sure that the versions are correct so that it works

06:34.130 --> 06:35.300
100 percent of the time.

06:36.370 --> 06:40.900
We also have something called git-ignore and it has a dot in front of it.

06:40.900 --> 06:42.600
It's actually called a dot file.

06:42.850 --> 06:47.230
And before we run git and push this project on github.

06:47.560 --> 06:54.460
Well it checks this file and if it sees anything in here that it shouldn't include it automatically

06:54.460 --> 06:56.030
says ignore these files.

06:56.200 --> 07:01.720
So remember how I said node modules we don't want to push that to a repo because well we have package.json

07:01.720 --> 07:08.950
and it creates unnecessary work and wait to push our project well again we don't care about

07:08.950 --> 07:13.780
node modules folder we don't care about the coverage folder which again is about testing we don't need

07:13.780 --> 07:14.870
to cover that.

07:15.100 --> 07:18.430
And we also don't care about the build folders.

07:18.450 --> 07:25.940
And a couple of other ones it just automatically generates this for us we don't need to touch it.

07:26.120 --> 07:32.810
We then have well obviously our node modules and you can see over here there is a ton of them that again

07:32.840 --> 07:36.940
create-react-app just builds for us automatically.

07:36.990 --> 07:41.850
We also have a public folder and here everything should be familiar.

07:41.850 --> 07:48.730
We have index.html we have something called manifest.json

07:49.070 --> 07:56.300
It's a new feature that allows people to download a shortcut to your website and have an icon on their

07:56.300 --> 07:56.750
desktop.

07:56.750 --> 07:58.640
But again we don't need to worry about it.

07:58.760 --> 08:06.620
And then we have favicon.ico which is the little icon that shows up at the top over here and you

08:06.620 --> 08:13.060
can change that with whatever .ico file you want and there's online tools to generate these for you.

08:13.070 --> 08:14.970
Again something that we don't need to worry about.

08:16.520 --> 08:21.240
And finally we have the src folder that is the source folder.

08:21.400 --> 08:25.090
This is where all the magic react happens.

08:25.370 --> 08:29.640
If you look at index.js that is the main script file.

08:29.660 --> 08:37.100
We're doing a few imports which you remember we're just importing different scripts and we're just simply

08:37.100 --> 08:40.720
saying this new syntax that we've never seen before.

08:40.730 --> 08:45.310
ReactDOM render app document get element by ID.

08:45.320 --> 08:46.890
OK we know this.

08:47.000 --> 08:55.420
So we're grabbing a element of ID root and we're saying ReactDOM render app.

08:55.700 --> 09:02.120
If we go to index.html file we see here and they have really nice comments that

09:02.130 --> 09:11.580
You can read we see that within the body there is just one div this noscript file is in case a browser

09:11.580 --> 09:13.260
isn't using JavaScript.

09:13.260 --> 09:15.660
Again we don't need to worry about that.

09:15.690 --> 09:18.360
It just comes with default because it's good practice.

09:18.630 --> 09:23.960
But in the body we just have this div with ID root and nothing else.

09:23.980 --> 09:26.160
Yet when we go to our app we see that.

09:26.370 --> 09:28.270
Well there's definitely something there.

09:28.360 --> 09:33.310
There's at least text here and at least a logo there. So going back here.

09:34.550 --> 09:37.010
Without knowing any react we can say that.

09:37.170 --> 09:37.840
OK.

09:38.300 --> 09:48.820
We're grabbing this ID root in index.js file and we're saying we want to render this app

09:49.300 --> 09:54.750
component and this is what we call JSX syntax which we'll get into later.

09:54.910 --> 09:59.030
This app is react's way of saying this is a react component.

09:59.050 --> 10:06.240
And I want you to render on the screen in the body this so I can actually change this to 

10:06.550 --> 10:13.550
Well we can say h1 Hello World.

10:14.120 --> 10:14.520
Hello World

10:18.160 --> 10:18.760
h1

10:19.680 --> 10:29.520
And now if I save this you'll notice that react automatically compiles this for us so I don't have

10:29.520 --> 10:32.490
to refresh and look at that on our website we have

10:32.670 --> 10:33.860
Hello World.

10:35.280 --> 10:36.490
Very cool.

10:36.510 --> 10:39.450
Now again another great thing about create-react-app

10:39.450 --> 10:43.670
It also gives you warnings it says App is defined but never used.

10:43.680 --> 10:48.920
So if I go over here yeah I'm importing App but I'm never using it.

10:48.930 --> 10:56.740
So we also get really really good advice in our terminal of how we can improve the app.

10:57.010 --> 10:57.490
OK.

10:57.750 --> 11:02.160
The final thing I want to show you before we get into the next section we actually start digging into

11:02.160 --> 11:05.800
the code as you can see the coloring is kind of off.

11:05.820 --> 11:12.280
And that's because Sublime Text doesn't really understand what's going on here.

11:13.790 --> 11:21.080
If we change this to Babel JavaScript there you go.

11:21.230 --> 11:26.720
We get the nice syntax and everything looks fine.

11:27.660 --> 11:28.500
Perfect.

11:28.560 --> 11:33.260
We have our app set up I want you to change the tag over here to

11:33.270 --> 11:33.900
Hello World

11:33.900 --> 11:37.540
For now just to make sure that everything is working.

11:37.660 --> 11:43.880
But for now you have a set up in the next video we're going to go through the rest of the files and

11:43.880 --> 11:47.270
actually start building our first component.

11:47.300 --> 11:48.430
It's going to be a lot of fun.

11:48.470 --> 11:49.410
I'll see you in that one. Bye-bye
