WEBVTT

00:01.610 --> 00:02.480
Welcome back.

00:02.480 --> 00:07.490
Now that we've gotten used to this CSSA grid system let's introduce a few more properties.

00:07.880 --> 00:12.630
Now another thing we can do with CSSA great because remember I said it was two dimensional.

00:12.650 --> 00:15.630
That is we can control the rows as well.

00:16.010 --> 00:19.070
So far this is something that fluxbox can do as well.

00:19.400 --> 00:28.880
We can do something like grid template rows now and actually define the way the rows should look as

00:28.880 --> 00:29.240
well.

00:30.550 --> 00:37.030
So let's say I want to do one that's far too far.

00:37.030 --> 00:38.580
What do you think will happen.

00:38.590 --> 00:39.420
Let's see.

00:39.420 --> 00:47.060
I'm going to save and refresh and look at the first row.

00:47.600 --> 00:57.150
Has Wall is one f r but the second row is twice as big as the first one as we can see here.

00:57.150 --> 01:05.160
And because of the way CSSA grid works in the third row because we haven't really added a third column

01:06.030 --> 01:12.060
automatically if there's more items it's going to just start repeating.

01:12.080 --> 01:17.770
So the next row which is the third row will have one half our.

01:17.940 --> 01:19.550
So I can define different things here.

01:19.560 --> 01:27.030
I can say three or four for the third row and let's say 5 F are for the last row.

01:27.200 --> 01:29.280
If I refresh and save.

01:30.440 --> 01:40.660
File Save and refresh your we see that we have our new columns or rows but that looks ugly so let's

01:40.660 --> 01:46.600
just keep it at one f r which is the default.

01:46.650 --> 01:56.130
Now another thing that we can do and you'll see a lot of is the repeat function that we can add to something

01:56.130 --> 01:58.850
like Gred template columns.

01:58.880 --> 02:06.370
So instead of doing this over here I can say repeat brackets.

02:06.620 --> 02:11.300
And now I say how many times I want to repeat something.

02:11.300 --> 02:18.740
So the first number is how many times so let's say three times repeat one half.

02:19.340 --> 02:24.750
So that's like saying one f r one f r 1 and 4 three times.

02:24.870 --> 02:34.020
If I save this and refresh I get one to three if I do four here and I refresh.

02:34.130 --> 02:35.370
I get four.

02:35.600 --> 02:38.500
And you can imagine what happens if we do six.

02:38.570 --> 02:43.210
We just keep repeating things.

02:43.230 --> 02:53.570
Another thing that we can do is the auto property and the auto property just simply means fill in whatever

02:53.570 --> 02:55.480
available space we have.

02:55.910 --> 03:06.580
So if I do something like auto 1 f r to F R and I refresh here you'll notice that the first column doesn't

03:06.580 --> 03:10.530
really have any spaces outside of the emoji.

03:10.990 --> 03:16.550
And Otto can also be thought of as the max size of the content.

03:16.630 --> 03:27.950
If I make this faux let's say have a content of two and I refresh you'll see that the Otto property

03:28.490 --> 03:31.730
automatically resizes to fit the content.

03:31.790 --> 03:38.090
And because this entire layout is on a grid system it will make sure that the ones below it will have

03:38.090 --> 03:39.540
the same size.

03:39.660 --> 03:48.990
If I do one f are here and I refresh you'll see the difference of all we're talking but it's not automatically

03:49.410 --> 03:51.880
scaling this first grid.

03:51.990 --> 04:00.980
Instead it's going to keep the portions that we have and extend anything below it that doesn't fit so

04:01.090 --> 04:08.150
Otto is another really really good feature to use.

04:08.280 --> 04:09.120
But let's fix that.

04:11.160 --> 04:14.170
All right let's tackle a few more properties in the next video.
