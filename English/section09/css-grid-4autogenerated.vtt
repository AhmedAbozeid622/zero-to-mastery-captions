WEBVTT

00:00.630 --> 00:01.500
Welcome back.

00:01.800 --> 00:05.520
Let's talk about individual items now when it comes to CSSA script.

00:05.520 --> 00:12.750
Because up until now we've just used this container and performed operations or changed views to all

00:12.750 --> 00:13.730
the items.

00:13.830 --> 00:18.790
But what if we wanted a bit of a funky grid system that has a different size.

00:19.050 --> 00:24.120
In that case we can just select individual items within this container.

00:24.120 --> 00:31.750
If we go back to our page we see that we have these zones but each zone has different color.

00:31.860 --> 00:38.730
So let's use one of these colors for example green which we have to have to have some special CSSA square

00:38.730 --> 00:47.140
properties so let's have a green class and I'm just going to do it up here instead of at the bottom

00:47.150 --> 00:51.150
just so we can keep all the CSSA great things up the top.

00:52.000 --> 00:59.950
Now for individual items I can say something like a Grid column and say what we wanted to do in terms

00:59.950 --> 01:08.110
of the column grid system and the way this works is we can give it where you start and where it should

01:08.270 --> 01:08.910
end.

01:09.310 --> 01:10.220
What does that mean.

01:10.540 --> 01:24.930
Well if I do a grid column start and I say 1 and then have Grid column end and I give it to and I refresh

01:24.930 --> 01:27.950
the page nothing changes.

01:28.120 --> 01:35.300
What if I do Grid column 3 and I refresh whoa what just happened here.

01:36.930 --> 01:39.900
In order for us to understand what these numbers mean.

01:41.500 --> 01:44.320
Let's open up the developer tools once again.

01:45.090 --> 01:54.600
I'm going to select the items and as we'll see over here we see that we have a grid zone and this fox

01:54.600 --> 02:00.630
is now taking up two grid spaces in the CSSA grid works.

02:00.650 --> 02:06.110
It has a numbering system where the first line over here is one.

02:06.320 --> 02:14.210
The second line over here is two and then this is three.

02:14.290 --> 02:16.810
Let's just make this a little bit bigger to show you

02:20.030 --> 02:21.670
and that's better.

02:21.670 --> 02:26.140
We now have three grid systems or three grid items.

02:26.230 --> 02:27.650
We have a one here.

02:27.670 --> 02:35.410
When the first one begins to where the second one begins and then 3 where the third one begins.

02:35.410 --> 02:41.440
So what we're saying here is that when it comes to columns started one which is right over here and

02:41.440 --> 02:53.520
then and at three so that if I do four here and I refresh you see that it now covers the entire length.

02:53.590 --> 02:56.610
But as soon as we make it a little bit bigger.

02:56.680 --> 03:03.280
Well it only is going to cover the 1 2 3 up to 4.

03:03.530 --> 03:05.960
And if we make it a little bit smaller

03:08.770 --> 03:16.090
you see that because we said 3:59 it doesn't actually make it as responsible as it was before and it

03:16.090 --> 03:22.520
actually extends to make sure that it fills in want to for and there's a shorthand way of doing this

03:22.670 --> 03:28.160
instead of saying good column start Great column and we can just say Great column and then give it the

03:28.160 --> 03:36.480
star number and then slash the number so that if I refresh you see that it's the same thing.

03:36.860 --> 03:41.610
Let's make this a little bit bigger and let's just do three here just to keep it small.

03:43.450 --> 03:43.680
All right.

03:43.690 --> 03:49.980
I'm going to close this and we see that our grid items now have.

03:50.040 --> 03:51.940
Well this looks pretty good actually.

03:51.960 --> 03:58.200
We have the green classes that spanned over more grids.

03:58.240 --> 04:03.930
Now a trick here is that sometimes we just simply don't know what the user is going to see.

04:03.930 --> 04:10.080
And we might want to spend the entire length without having you know the rabbit come in.

04:10.080 --> 04:17.580
And then the frog and the line coming and we can actually do at the end here something like minus 1

04:17.820 --> 04:19.940
which means all the way till the end.

04:20.030 --> 04:24.770
For refresh refresher There you go and make this larger and smaller.

04:24.810 --> 04:30.400
We see that we are saying started one and then keep going all the way until the end.

04:30.620 --> 04:36.510
And CSSA grid minus one signifies the end of the viewport.

04:38.250 --> 04:46.430
So that now we see that we have a nice responsive grid again that just adjusts according to our viewport.

04:46.530 --> 04:49.340
Very very cool now.

04:49.370 --> 04:55.610
Sometimes we don't really know how many grids we're going to have on our page and we also might not

04:55.610 --> 05:03.380
necessarily wanted to spend it all across from beginning to end so useful syntax here is to do something

05:03.380 --> 05:08.560
like spanne to which says span across two grids.

05:08.750 --> 05:13.080
If I refresh here you see that green is spanning across two grids.

05:13.190 --> 05:18.060
If I do three it's going to span across three grids.

05:18.320 --> 05:24.100
And as you can imagine the default is span 1 spanning across one.

05:24.110 --> 05:32.470
But the interesting thing about this is if I do say span 2 and I refresh as this gets smaller

05:37.400 --> 05:44.750
you see that it's always going to span across to make sure that it covers whatever the two grids are

05:45.470 --> 05:49.020
which is once again very useful.

05:49.040 --> 05:53.540
Finally we can also do the same thing with roads.

05:53.840 --> 05:58.160
We do grid rows or grid row.

05:58.280 --> 06:08.780
I can say while we wanted to span to start at let's say one end and at three fight refresh your

06:12.340 --> 06:13.780
well what just happened here.

06:15.770 --> 06:17.200
Well let's take a look.

06:17.210 --> 06:20.130
We started one and ended three.

06:20.270 --> 06:27.560
And because green is also this unicorn over here it automatically moved it all the way up because we

06:27.560 --> 06:29.460
wanted to start at one as well.

06:29.660 --> 06:33.260
And remember our grid system now is row.

06:33.290 --> 06:42.950
And if I open the developer tools and select the grid one starts here then two then three right here

06:42.950 --> 06:43.880
where it ends.

06:44.210 --> 06:50.660
So you have to be careful with the positioning here that this is going to move whatever it needs to.

06:50.900 --> 06:51.980
All the way up to 1

06:54.940 --> 06:59.630
but able to move things around and adjust the rows as well.

06:59.650 --> 07:05.120
Very very cool our grid system is starting to look really really nice.

07:05.460 --> 07:07.110
Let's do a bit more in the next video.
