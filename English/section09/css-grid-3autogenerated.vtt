WEBVTT

00:01.580 --> 00:11.980
Another property that is very important when he comes to see assess grade is justify items and justify

00:11.980 --> 00:16.250
items and the default is right now.

00:16.250 --> 00:17.680
Stretch.

00:17.920 --> 00:27.580
So that if I refresh this nothing's going to change but if I do start and refresh it aligns the contents

00:27.580 --> 00:31.800
in a grid item along what we call the row access.

00:31.840 --> 00:42.110
So the row axes is each row I do and and I refresh we see that there now towards the end.

00:43.040 --> 00:48.880
But a better way to visualize this is to actually use our developer tools.

00:49.220 --> 00:59.970
So if I go to View developer developer tools and we select our grid you see that by clicking on this

00:59.970 --> 01:05.720
pointing icon and hovering over it in Google Chrome we actually see our grid system.

01:06.030 --> 01:09.630
And if I scroll it you see that it actually stays in place.

01:10.780 --> 01:17.360
But you see that we now have our items at the end of our grid system.

01:17.710 --> 01:24.770
Our last item which is to far right over here is justified to the end.

01:25.120 --> 01:33.840
Our second column is justified to the end and we see a bit of a gap here and that is because remember

01:33.840 --> 01:43.710
we have one f r and then the first item because it's auto and the size is according to its content doesn't

01:43.710 --> 01:52.390
really move whether we have and or start here it's already within the maxed space of the grid system.

01:52.650 --> 01:55.910
And just like we have the access around the row.

01:55.950 --> 02:07.430
If I change just to align items and I save and refresh this is hard to see so let's just do five or

02:07.520 --> 02:11.150
300 pixels and refresh your.

02:11.400 --> 02:21.870
We see that a line item is the exact opposite where it's around a column access and we can use start.

02:22.020 --> 02:29.710
And here to move those grid boxes around but most of the time we want this field and we don't want to

02:29.710 --> 02:34.790
move items around so I don't really like using those two properties.

02:34.960 --> 02:36.170
So let's fix that too.

02:36.200 --> 02:39.450
One half our five refresh.

02:39.450 --> 02:41.630
All right we have thinks back to normal.

02:41.700 --> 02:43.960
We're going to close this.

02:44.090 --> 02:50.870
Now the last thing I want to show you inside of this container is my preferred method of actually creating

02:50.870 --> 02:53.580
a grid layout in any web site that I built.

02:54.170 --> 03:02.420
And what I usually like to do is something new that we haven't seen before I usually do repeat and define

03:02.420 --> 03:03.900
here how many rows I want.

03:03.960 --> 03:07.380
Let's say I want three at one that far.

03:07.400 --> 03:10.590
So I want everything to have the same size.

03:11.270 --> 03:13.720
But there's a problem here right.

03:14.150 --> 03:17.410
Because right now this is stretching.

03:17.660 --> 03:27.970
But as soon as we make it too small or too big it's just it's not extremely responsive or it's not 100

03:27.980 --> 03:29.200
percent responsive.

03:29.240 --> 03:37.490
So instead I like using auto fill an autofill just to show you what it does.

03:37.510 --> 03:40.480
If I do something like 300 pixels and I refresh

03:43.440 --> 03:52.490
and now I change the sizing you'll see that our grid system or the column system adjusts auto fills

03:52.890 --> 03:59.550
according to the size of our viewport which is really really nice.

03:59.760 --> 04:03.260
But right now I just said 300 pixels.

04:03.300 --> 04:05.950
So again it's not super super responsive.

04:06.980 --> 04:12.620
So instead we can use something else called the man Max.

04:12.850 --> 04:14.910
And I know this can look confusing.

04:15.740 --> 04:21.380
But if you remember this pattern this is the most common pattern I would say to use when it comes to

04:21.380 --> 04:22.430
CSSA grid.

04:22.640 --> 04:26.510
So once you get used to this you can just copy and paste it and use it everywhere.

04:26.730 --> 04:33.800
And here we want to do is say well the minimum that we want the size of our columns to be let's say

04:33.810 --> 04:36.990
I want the minimum to be 200 pixels.

04:37.010 --> 04:40.350
So that's the smallest it's going to get the max though.

04:40.370 --> 04:43.160
How big do we want these to get.

04:43.190 --> 04:44.720
And this is a common thing.

04:44.750 --> 04:46.360
What do we want as the biggest.

04:46.460 --> 04:55.170
Well just one want our Because as you'll see by doing this they'll will automatically adjust to the

04:55.170 --> 04:56.640
size of the viewport.

04:56.640 --> 05:00.100
Let me just save and show you what I mean by refresh here.

05:00.130 --> 05:01.570
I see I have three here.

05:01.640 --> 05:11.380
It auto adjusts auto adjusts based on our size but you also see that the container itself is also adjusting

05:11.380 --> 05:15.340
in size so that if I go smaller and smaller and smaller

05:19.010 --> 05:26.000
as soon as we head the to 100 pixel minimum it adjusts.

05:26.200 --> 05:35.550
And because we said one f r is the max as soon as the viewport is really very small and goes below 200

05:35.550 --> 05:43.690
pixels it's going to just take up one fraction and in our case it will be the entire screen.

05:44.610 --> 05:54.050
So using this syntax of repeat autofill minimax giving it a minimal we're able to make this completely

05:54.200 --> 05:55.640
responsive.

05:55.640 --> 05:58.630
And as you can see here it's pretty powerful right.

06:01.510 --> 06:07.300
In just a few lines of code we've made this grid system that is completely responsive.

06:07.470 --> 06:13.920
All right up to this point we've just focused on the container but what about the individual items.

06:14.050 --> 06:20.420
What if we want something that's maybe bigger than the other item and we don't want them all symmetrical

06:20.420 --> 06:21.710
like this.

06:21.710 --> 06:22.690
What will we do.

06:23.060 --> 06:24.550
Let's find out in the next video.
