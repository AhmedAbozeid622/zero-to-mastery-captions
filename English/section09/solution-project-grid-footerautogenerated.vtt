WEBVTT

00:02.430 --> 00:04.690
Let's move on to the project grid.

00:05.680 --> 00:12.670
Something that we see a lot of in Web sites whether it's an image gallery or a list of your portfolio

00:12.670 --> 00:13.790
projects.

00:14.110 --> 00:17.450
Grid systems are very important and very common.

00:17.590 --> 00:24.700
And as we know we learned the perfect way to create a great CSSA great right.

00:24.740 --> 00:26.330
So let's see how this will look like.

00:26.480 --> 00:29.010
And my ideal implementation.

00:29.150 --> 00:35.340
First I want to go to the G-mail page and now let's make this a little bit bigger.

00:37.080 --> 00:45.150
In our project grid Div I know I want to use CSX grid so I'm going to create a wrapper around this project

00:45.150 --> 00:48.770
grid so I'm going to have a div

00:52.410 --> 00:59.880
and this div will have a class of some properties that will add CSSA to and just to keep things blue

00:59.880 --> 01:00.610
the way they are.

01:00.630 --> 01:06.600
I'm going to give it that zone blue class that we have below but we're going to make it a CSSA grid

01:06.600 --> 01:08.130
song going to just say Gred

01:11.210 --> 01:14.610
and we can just remove the project grid.

01:16.000 --> 01:21.040
And in here add a couple of sample little projects.

01:21.190 --> 01:28.940
If you remember in our solution file I left for you a couple of images that you can just add like this

01:29.010 --> 01:32.830
so that we have some sort of a project grid.

01:33.020 --> 01:37.620
I'm not going to bore you with me typing all that out because that's something that we've done before.

01:37.730 --> 01:45.830
Just gonna copy and paste a diff here with box zone boxes a class that we haven't added yet but we're

01:45.830 --> 01:53.100
going to create these are going to be the grid items we have Zone which again is something that we've

01:53.100 --> 01:57.590
already defined before and our images.

01:57.600 --> 02:02.770
So if I save this and refresh and let's refresh again.

02:02.770 --> 02:03.280
All right.

02:03.310 --> 02:10.890
This is absolutely hideous does not look pretty at all but at least we have the images provide it but

02:11.100 --> 02:13.980
no employer is going to be impressed if they see this right.

02:13.980 --> 02:16.720
So let's actually make this into a grid system.

02:18.320 --> 02:28.810
If we go back to the style to let's add our grid here and obviously as the name suggests when it comes

02:28.810 --> 02:31.600
to grids CSSA grids is the way to go.

02:32.020 --> 02:35.890
And there's many ways that we can lay things out and that's something that we've already talked about

02:35.910 --> 02:37.760
in our CSSA great videos.

02:38.020 --> 02:40.370
So we're going to keep things simple.

02:40.420 --> 02:44.820
First is we want to actually say hey we're going to use a script.

02:44.920 --> 02:53.380
So we're going to use the grid wrapper class that we created which was this div that wraps all our projects

02:55.740 --> 03:08.430
and will say display grid will say that we want the grid gap to be 20 pixels and then finally the our

03:08.430 --> 03:16.730
favorite property that is grid template columns and so everything is responsive.

03:16.800 --> 03:30.150
We'll say repeat auto fill I will say that the min max we'll be let's say 350 pixels.

03:30.220 --> 03:37.390
So that is the minimum and the maximum will be one f r so that it fills the entire page when it's really

03:37.390 --> 03:38.110
really small.

03:39.740 --> 03:48.180
So that if I save this and refresh rate that still looks pretty hideous doesn't it.

03:48.180 --> 03:53.790
And that's because our images are well they're pretty massive and you see that they're also not all

03:53.790 --> 03:56.660
the same size or they have different padding.

03:56.730 --> 04:04.080
So the way to just fix that quickly and something that you'll see a lot with images is to give them

04:04.080 --> 04:14.490
a width of 100 percent in our case that we can just say box because remember each div has a box class

04:14.490 --> 04:16.400
that we haven't really said anything about.

04:16.560 --> 04:17.990
And then an image.

04:18.030 --> 04:26.240
So using our CSSA selector knowledge I can just say all children of box that are images I want though

04:26.230 --> 04:34.550
with to be 100 percent File Save and refresh.

04:34.570 --> 04:34.990
All right.

04:34.990 --> 04:35.770
That's perfect.

04:35.770 --> 04:42.930
Now you see that each image has 100 percent with that as it fills in the entire piece of the cart.

04:43.720 --> 04:53.260
And if I make this bigger and smaller you see that it adjusts very very cool but still pretty ugly.

04:54.340 --> 04:57.780
But we have the CSSA great working as you can see.

04:58.120 --> 05:04.090
As soon as it's less than 350 pixels it changes the grid system.

05:06.830 --> 05:09.640
So next we want to work on the individual cards.

05:09.920 --> 05:18.180
That is we want to have our box and here we don't really need to add any extra grid properties.

05:18.190 --> 05:22.540
I mean we could if we want but I like the way things look I like everything being symmetrical.

05:22.540 --> 05:26.350
I want all the items in the grid to be the same.

05:26.350 --> 05:36.570
So in here we can just add our simple CSSA properties like let's say a background color and we'll just

05:36.570 --> 05:44.310
give it a color of let's say four four four so that we have this dark color and we definitely don't

05:44.310 --> 05:46.760
want the image just to be this big.

05:47.250 --> 05:55.440
So we'll give it a padding of 130 pixels and maybe some margin as well of 20 pixels.

05:55.710 --> 05:59.900
If I save and refresh that's a lot better.

05:59.990 --> 06:04.880
And remember because we said that the width of the image is 100 percent.

06:05.300 --> 06:07.980
It's going to try and fill the entire box.

06:08.060 --> 06:15.740
But because the box now has padding of 130 both the top the bottom and to the left and right the width

06:15.770 --> 06:18.040
is now just this part.

06:18.080 --> 06:19.290
So that looks a lot better.

06:20.590 --> 06:26.800
And if we look over here we now have a completely responsive

06:29.470 --> 06:30.540
grid system.

06:30.550 --> 06:31.850
How cool is that.

06:32.290 --> 06:35.040
And how simple was that using CSSA grid.

06:35.530 --> 06:40.020
Luckily for us the last thing we need to do is this footer.

06:40.390 --> 06:44.610
And because the footer is at the very bottom it just going to stay at the very bottom.

06:44.860 --> 06:50.830
The only thing that we might want to do is to make sure that the text is centered so in our case we

06:50.830 --> 06:54.070
can just say FOTR and as you guessed.

06:54.170 --> 06:56.090
Yes it's text aligned.

06:56.200 --> 06:57.710
Our best friend.

06:57.720 --> 07:05.240
Center five refresh and make sure that I spelled properly if I save and refresh.

07:05.540 --> 07:13.040
Well that's not going to work because we should change our footer which is div to more of a semantic

07:13.270 --> 07:15.500
a shemale tag of footer.

07:17.200 --> 07:22.360
Now if I save and refresh this is in the center it looks great.

07:22.480 --> 07:29.830
Let's say 0 to mastery because our layout is looking really nice.

07:33.070 --> 07:34.440
And there you have it.

07:34.540 --> 07:36.810
That wasn't that bad was it.

07:38.280 --> 07:39.460
I mean sure.

07:39.600 --> 07:47.820
The first time around that's kind of difficult but the principles that I've showed you here can be transferred

07:47.820 --> 07:49.900
to a lot of Web sites.

07:49.950 --> 07:52.070
I mean this looks pretty ugly.

07:52.110 --> 07:58.560
You're not going to want to visit a Web site that looks like this but when it comes to layout everything

07:58.560 --> 08:01.210
is responsive and nice right.

08:01.320 --> 08:07.320
And you can imagine yourself expanding on this and building a beautiful website.

08:07.440 --> 08:13.110
I wanted to show you this layout system because this is what I would use if I was building a web site

08:13.650 --> 08:19.260
I would start off with the email and create the layout that is responsive.

08:19.440 --> 08:24.660
Because after this all I really need to do is add taxed images and colors.

08:24.660 --> 08:30.430
Maybe some CSSA styles to make it pretty so that you can turn something like this.

08:30.810 --> 08:37.350
That doesn't look good but has the layout implemented into something like this which I mean doesn't

08:37.350 --> 08:44.010
look that great yet but in the next video I want to show you how because we have the layouts set up

08:44.670 --> 08:49.490
we can convert our base layout project into something like this.

08:49.500 --> 08:51.350
And less than five minutes.

08:51.720 --> 08:53.150
So let's do that in the next video.
