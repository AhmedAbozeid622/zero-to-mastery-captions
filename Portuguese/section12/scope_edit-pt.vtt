WEBVTT

00:00.910 --> 00:02.810
E bem vindo de volta.

00:02.830 --> 00:10.710
Neste vídeo, vamos falar sobre um conceito importante em javascript chamado "escopo".

00:10.840 --> 00:20.890
Agora o que é escopo? escopo significa acesso variável, a quais variáveis ​​eu tenho acesso quando um código está em execução?

00:21.710 --> 00:29.600
Portanto, por padrão, em Javascript, você está no 'escopo raiz', que é o objeto 'window'.

00:29.600 --> 00:30.410
Deixe-me mostrar o que estou falando.

00:31.700 --> 00:36.560
Se no meu console eu faço algo como 'função aa ()'

00:39.820 --> 00:49.160
'console.log ("test")' e fechamos essa função.

00:49.230 --> 00:58.530
Bem, agora, a 'função aa' faz parte do 'escopo da janela'.

00:58.630 --> 01:09.120
Se eu for 'window' aqui e abrir 'window' você verá

01:09.330 --> 01:11.250
que a função 'aa' foi adicionada ao 'escopo da janela'.

01:11.290 --> 01:15.610
Então, quando você está trabalhando em um navegador, isso é chamado de 'escopo raiz'.

01:15.610 --> 01:19.600
Então o escopo pai.

01:19.760 --> 01:28.890
Agora, se eu fizer algo assim. Se eu for 'funcionar bb'.

01:29.680 --> 01:33.930
E dentro desta função nós faremos.

01:34.180 --> 01:34.870
variável 'a' é igual a "olá"

01:39.820 --> 01:47.050
Isso funcionará, se eu executar isso no console,

01:47.230 --> 01:54.460
Se eu fizer agora 'console.log (a)' vai funcionar.

01:54.550 --> 02:03.280
Não, porque 'a' só vive dentro de 'função bb' o escopo está dentro da função.

02:03.280 --> 02:12.330
Então, a única maneira que podemos fazer 'console.log (a)' está dentro da função para adicionar, oops!

02:12.460 --> 02:20.060
Deve tentar isso novamente, dentro da função para adicionar 'console.log (a)'.

02:20.070 --> 02:24.000
Então agora, se eu executar a função,

02:24.060 --> 02:24.930
Eu tenho 'olá'.

02:25.410 --> 02:32.850
Agora, o interessante é que as funções têm acesso a

02:32.850 --> 02:34.110
qualquer variável no escopo da raiz.

02:34.380 --> 02:51.080
Então, por exemplo, se eu fizer 'variável (var) b é igual eu posso acessar isso?' O 'function bb' terá acesso a isso?

02:51.250 --> 03:05.920
Porque como você sabe 'window.bb' existe e a variável 'b' vive no objeto window.

03:05.960 --> 03:13.990
Então, ambos têm o mesmo pai. Deixe-me mostrar o que quero dizer

03:13.990 --> 03:15.760
copiando isso e colocando-o no console

03:15.940 --> 03:22.180
Agora dentro de 'função bb' se fizermos 'console.log (b)'

03:27.450 --> 03:39.780
Bem, nós temos acesso a isso

03:39.860 --> 03:40.170
OK, e se eu fizer algo nos moldes da variável (var) 'b', eu posso acessar isso.

03:40.170 --> 03:45.150
Eu faço 'b' é igual a 'olá', se eu copiar isso.

03:45.280 --> 03:47.940
E agora eu faço

03:48.020 --> 03:50.230
'console.log (b)' Bem, eu tenho,

03:50.230 --> 03:56.840
Posso acessar isso porque não executei a função, mas se eu executar a função 'bb ()'.

03:57.020 --> 03:57.890
Agora se eu fizer.

03:57.890 --> 04:02.330
'console.log (b)'

04:02.420 --> 04:03.190
Eu recebo "Olá".

04:03.470 --> 04:08.860
Porque 'b' é a mesma variável.

04:09.290 --> 04:14.550
Ok, vamos fazer algo um pouco mais complexo.

04:14.880 --> 04:23.540
Então, sabendo o que sabemos, sabemos que este é o escopo de raiz no nosso caso é a janela.

04:23.540 --> 04:25.150
Dentro daqui podemos declarar uma variável.

04:25.210 --> 04:27.480
'divertido' vamos dizer igual a cinco.

04:28.280 --> 04:30.290
E nós também declararemos

04:32.840 --> 04:35.550
uma função, vamos chamar de funFunction.

04:35.870 --> 04:41.940
E dentro dessa função, assim que criamos essas chaves {} ', criamos um escopo filho aqui.

04:46.280 --> 04:55.170
Então, aqui dentro, eu direi que variável (var) 'diversão' é igual a 'hellooo' e 'console.log (fun)' aqui

05:00.410 --> 05:07.650
e criaremos outra função, exceto que esta chamará "funnerfunction".

05:07.810 --> 05:15.030
E dentro deste um vai dizer 'Byee' e vai consolar log isso.

05:15.180 --> 05:24.110
E então, finalmente, criaremos uma terceira função e chamaremos isso de 'funnestFunction'.

05:24.110 --> 05:32.670
E aqui dentro vamos remover a variável e vamos dizer 'AHHHHHH'.

05:32.850 --> 05:40.370
E na parte inferior também faremos 'console.log (fun)'.

05:40.400 --> 05:41.020
Tudo bem.

05:41.160 --> 05:42.390
Então vamos passar por isso.

05:42.390 --> 05:44.020
Estamos declarando uma variável

05:44.130 --> 05:45.440
diversão é igual a cinco.

05:45.480 --> 05:51.800
Criamos três funções e cada uma dessas funções cria seu próprio escopo

05:54.770 --> 05:58.240
e cada uma dessas funções 'console.log (fun)'.

05:58.340 --> 06:06.580
Mas o que 'diversão' significa em cada um deles é diferente com base em seu escopo.

06:07.430 --> 06:18.510
Então o primeiro título é '1', então sabemos que o segundo dirá '2', 'terceiro (3)' e, finalmente, aqui

06:18.510 --> 06:22.590
podemos apenas dizer "janela".

06:22.690 --> 06:24.880
Então, vamos executar essa função e ver o que acontece.

06:25.800 --> 06:28.730
Veja se você consegue adivinhar

06:29.000 --> 06:29.480
o que está prestes a acontecer aqui, ok.

06:29.610 --> 06:34.970
Então temos uma janela 5, que significa essa linha aqui.

06:35.200 --> 06:37.700
A variável divertida é '5'.

06:37.720 --> 06:39.770
Nada foi executado.

06:39.810 --> 06:44.910
Nós lemos o roteiro e vemos que diversão variável é igual a 5, e então vemos essas funções, mas

06:44.910 --> 06:46.660
nenhum deles é executado.

06:46.830 --> 06:55.400
E agora, se eu usar 'funFunction' para executá-los, faremos 'funnerFunction'.

06:55.650 --> 07:06.920
E finalmente o 'funnestFunction'. Eu copio e colo isto e executo novamente

07:06.920 --> 07:09.650
vemos que temos a janela 5, linha 24 que foi executada, que é variável 5.

07:10.070 --> 07:18.350
Agora dentro da primeira função temos a variável fun igual a "hellooo" porque bem nós criamos

07:19.710 --> 07:25.620
um novo escopo e dentro desta função vive diversão variável que tem "hellooo".

07:25.640 --> 07:27.940
Então isso é cancelado.

07:28.190 --> 07:35.630
E então nós temos a segunda função que tem "Byee" novamente a mesma coisa que acima porque nós temos um novo escopo

07:35.660 --> 07:36.880
uma nova variável.

07:37.050 --> 07:38.480
divertido é igual a "Comprador".

07:38.870 --> 07:44.410
E então o terceiro que vemos que nos divertimos é igual a "AHHHHHH".

07:44.930 --> 07:47.330
E mais uma vez isso é alterado.

07:47.870 --> 07:50.550
E isso é igual a diversão.

07:50.690 --> 07:52.550
Aqui está a parte divertida.

07:52.580 --> 07:56.330
Se eu fizer agora 'console.log (fun)'

07:59.610 --> 08:12.670
agora é igual a 'AHHHHHH' porque na terceira função modificamos

08:12.720 --> 08:13.550
diversão que é essa variável para igual a "AHHHHHH".

08:14.000 --> 08:22.480
Uma coisa que eu quero mostrar é que nas duas primeiras funções eu não conseguirei acessar a variável 'diversão'

08:22.480 --> 08:29.750
no escopo da raiz, porque eu basicamente os substituí no 'funFunction' e 'funnerFunction'

08:30.810 --> 08:35.010
'diversão' é igual a algo que é seu próprio significado.

08:35.010 --> 08:40.890
Portanto, dentro desta função, diversão igual a "hellooo" dentro da funner fun fun é igual a "Byee".

08:41.190 --> 08:49.590
E não importa o que, nós não teremos acesso ao escopo da raiz e isso é chamado de conflito de nomes,

08:49.590 --> 08:56.610
onde nomeamos as coisas da mesma maneira, algo que vive digamos no escopo pai

08:56.610 --> 08:57.120
e nós perderemos o acesso a ele.

08:58.070 --> 09:04.710
Então, para finalizar este ponto, vamos apenas deletar isso e repassar o que está acontecendo aqui.

09:04.800 --> 09:08.640
Então, vamos apagar isso também e vamos dizer apenas o 'console.log' aqui.

09:09.260 --> 09:16.090
Quando alguém executa o funnestFunction, nós executamos isso e o Javascript respira a diversão do log do console.

09:16.530 --> 09:18.660
Ok, divertido, nós

09:18.660 --> 09:22.060
Nós a conhecemos? e nós olhamos para o escopo aqui.

09:22.060 --> 09:22.830
Você olha para essa função.

09:22.840 --> 09:25.840
Ei, você sabe o que é "divertido"?

09:25.930 --> 09:32.840
E a função diz:Bem, desculpe, amigo, eu realmente não sei "divertido", mas pergunto aos meus pais.

09:33.070 --> 09:37.110
Então agora vamos para fora da função.

09:37.210 --> 09:38.890
Neste caso, o escopo das raízes.

09:38.890 --> 09:42.650
Agora nós dizemos ei você sabe 'divertido'?

09:42.700 --> 09:44.830
E eles são como, Yah yah! nós temos uma diversão variável.

09:44.830 --> 09:46.170
É igual a cinco.

09:46.570 --> 09:51.000
Então agora 'console.log' pode logar 5.

09:51.180 --> 09:59.760
Mas se 'diversão' não existe, perguntamos aos pais e o pai diz:Desculpe, não tenho idéia do que é 'divertido'.

09:59.810 --> 10:03.410
Então ficamos, bem, nós recebemos um erro.

10:03.470 --> 10:07.060
Então a última verificação é sempre o escopo da raiz,

10:07.190 --> 10:09.410
No nosso caso, o objeto da janela, se não podemos encontrá-lo.

10:09.410 --> 10:11.360
Nós recebemos este erro no console.

10:11.360 --> 10:12.630
Nós sempre vemos.

10:12.830 --> 10:15.560
Desculpa! sua variável de amigo não existe.

10:15.650 --> 10:19.340
Eu acho que você inventou e é isso para o escopo.

10:19.340 --> 10:22.390
Eu tenho um exercício divertido para você logo após este vídeo.

10:22.400 --> 10:25.030
Experimente e eu vejo você no próximo.

