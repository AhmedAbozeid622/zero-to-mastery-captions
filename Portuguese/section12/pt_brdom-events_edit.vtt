WEBVTT

00:01.490 --> 00:02.700
Bem vindo de volta.

00:02.840 --> 00:05.050
Esta é a parte que fica realmente emocionante.

00:05.360 --> 00:11.230
Você pode usar o JavaScript para ouvir eventos e com base no que o usuário faz.

00:11.240 --> 00:19.900
Agora, o que quero dizer com eventos? Eventos são coisas como clicar, inserir o mouse ou passar o mouse sobre

00:20.470 --> 00:24.170
algo ou usuário tentando algo em uma barra de pesquisa.

00:25.560 --> 00:31.310
Para que possamos ouvir esses eventos e reagir a eles usando JavaScript.

00:31.320 --> 00:36.100
Deixa-me mostrar-te como. Temos todas as listas de compras do vídeo anterior.

00:36.510 --> 00:39.310
E se eu adicionar um botão aqui.

00:42.060 --> 00:47.530
E diremos apenas clique em mim, salve e atualize.

00:47.590 --> 00:50.800
Temos o botão Clique em mim.

00:50.830 --> 00:57.340
Também criei um arquivo JS de ponto de script aqui na mesma pasta que o índice HTML e, obviamente,

00:57.340 --> 00:58.130
queremos adicioná-lo.

00:58.180 --> 01:08.070
Portanto, faremos isso exatamente na parte inferior, como mencionamos nos vídeos anteriores, e podemos incluí-lo referenciando-o através da

01:08.070 --> 01:16.070
fonte e chamá-lo de Script pensamento apenas para referenciar o nome no script.

01:16.110 --> 01:19.420
Vamos economizar agora aprendendo o que aprendemos.

01:19.430 --> 01:22.460
Podemos selecionar este botão rápido.

01:22.460 --> 01:25.830
Vamos testar isso se quisermos selecionar o botão.

01:25.850 --> 01:38.600
Eu posso dizer que o ponto do documento obtém o elemento pelo nome da tag e dizemos button para selecionar o botão para nós.

01:38.620 --> 01:43.580
OK, então como podemos ouvir o fato de um usuário poder clicar neste botão.

01:45.900 --> 01:51.770
O que temos algo chamado eventos e o que são e estão todos ligados.

01:51.780 --> 01:59.550
A referência aqui é que existem vários eventos que um navegador da Web nos permite ouvir.

01:59.550 --> 02:06.360
Portanto, se você olhar aqui, temos eventos de mouse, como o mouse movido o mouse sobre um clique, clique duas vezes.

02:06.360 --> 02:10.400
Temos pressionamento de tecla e vários outros eventos.

02:10.740 --> 02:16.710
Mas os mais comuns e a única coisa que você verá 90% das vezes são eventos de mouse

02:16.710 --> 02:17.750
e teclado.

02:17.790 --> 02:23.450
Então, se olharmos aqui, temos um clique para que possamos ouvi-lo.

02:23.610 --> 02:24.500
Como podemos fazer isso.

02:25.530 --> 02:36.360
Bem, no meu script Paul, eu vou dizer documento ou vamos chamá-lo de botão igual a

02:36.600 --> 02:44.240
documento ponto, obter elogios de Diagne e ele selecionará o botão.

02:44.440 --> 02:54.690
Agora que temos a referência ao botão, agora posso dizer que o botão Daut tinha o ouvinte de eventos

02:54.690 --> 03:01.380
e este é um método que podemos usar e aceita dois parâmetros.

03:01.380 --> 03:03.910
O primeiro é o evento.

03:03.980 --> 03:12.040
No nosso caso, estamos ouvindo o evento click e o segundo parâmetro é a função ou o que queremos

03:12.040 --> 03:14.440
fazer com base no clique.

03:14.500 --> 03:16.270
Portanto, no nosso

03:19.030 --> 03:24.700
caso, podemos apenas dizer clique no log de pontos do console.

03:24.790 --> 03:32.890
Então, estamos dizendo que havia um ouvinte de evento nesse botão que selecionamos sempre que o usuário clica em

03:32.890 --> 03:39.370
Desejo executar esta função e essa função é o console do clique no log.

03:39.460 --> 03:40.560
Vamos ver se isso funciona.

03:40.720 --> 03:41.600
E refresque.

03:41.620 --> 03:49.770
E vemos que temos o botão adicionar ouvinte de eventos não é uma função e isso ocorre porque

03:49.830 --> 03:55.830
lembre-se de obter elementos pelo nome da tag retorna uma matriz de botões.

03:55.830 --> 04:07.870
Portanto, se copiarmos e colarmos isso, veremos que, para acessar o botão, precisamos ir 0 para acessar o primeiro elemento da

04:07.870 --> 04:09.060
matriz.

04:09.060 --> 04:12.670
Então esse é um erro muito comum que as pessoas cometem.

04:12.670 --> 04:19.130
Portanto, verifique se, se você receber esse erro, provavelmente está tentando usar um método

04:19.130 --> 04:24.300
em uma matriz e precisa usá-lo no elemento atual OK.

04:24.430 --> 04:27.550
Deixe-me fechar isso e corrigir isso

04:30.830 --> 04:39.170
para dizer o primogênito perfeito. Vou economizar um pouco menor para que você possa ver e atualizar e eu

04:39.170 --> 04:46.820
possa abrir o console e ver o que acontece quando clico, clico, clico e clico em OK .

04:46.880 --> 04:47.620
Então está funcionando.

04:47.620 --> 05:00.410
Estamos ouvindo o evento click muito, muito legal. Também posso ouvir algo como meu centro e outro

05:00.800 --> 05:04.180
ouvido aqui e atualizar.

05:04.280 --> 05:06.680
Você pode ver aqui que, assim que eu mais

05:09.590 --> 05:10.960
entro, ele registra o evento.

05:11.210 --> 05:22.290
Você também pode atualizar o mouse leave e toda vez que eu sair, recebo esse evento.

05:22.460 --> 05:23.270
Muito legal.

05:23.450 --> 05:26.500
Portanto, há uma tonelada deles todos ligados a isso.

05:26.510 --> 05:28.000
Então você pode conferir você mesmo.

05:28.010 --> 05:33.280
Mas, como eu disse, eventos de teclado e mouse são o que você gostaria de ver.

05:33.560 --> 05:38.990
Então, olhando para esta lista, acho que podemos melhorá-la.

05:39.020 --> 05:47.480
Acho que devemos ter uma entrada e um botão onde possamos digitar algo e adicionar à

05:47.480 --> 05:49.410
lista de compras.

05:49.510 --> 05:51.000
Então, eu vou tentar fazer isso.

05:51.360 --> 05:56.380
E vou apagar esse código e eu quero salvar e atualizar.

05:56.920 --> 06:04.390
E também vamos mudar algumas coisas aqui em vez de clicar em mim no

06:05.320 --> 06:16.280
botão que queremos dizer Panter e obteremos essa classe de Cantor e também precisamos de um implícito. Vou remover essa tag p

06:16.280 --> 06:23.790
e, em vez disso, das sem desculpas como vou dizer e colocar o texto do tipo.

06:24.240 --> 06:26.070
Você lembra que esse é o padrão.

06:26.120 --> 06:33.480
E também podemos adicionar um espaço reservado de atributo para inserir itens.

06:33.500 --> 06:41.130
Portanto, agora, se eu salvar e atualizar, tenho um espaço reservado e posso digitar o que quiser

06:41.130 --> 06:41.910
agora.

06:42.800 --> 06:43.900
Eles realmente não fazem nada.

06:43.940 --> 06:50.240
Idealmente, quando clicamos em entrar, ele é adicionado ao final da lista.

06:50.430 --> 06:51.440
Então, como podemos fazer isso.

06:52.390 --> 06:55.410
Primeiro, precisamos selecionar esses itens.

06:55.540 --> 07:02.110
Então, a única coisa que realmente gosto de fazer é garantir que tenhamos bons nomes de classe ou IDs para

07:02.110 --> 07:04.690
esses elementos, para que possamos obtê-los facilmente.

07:04.720 --> 07:14.050
Definitivamente, queremos pegar o botão que tem uma classe sobre enter, mas, na verdade, eu gosto de usar o Id, porque será realmente muito rápido para

07:14.060 --> 07:18.810
o navegador da Web pegar um ID, porque há apenas um deles.

07:18.970 --> 07:22.320
Em termos de desempenho, embora seja muito minúsculo,

07:22.450 --> 07:23.200
ajuda.

07:23.200 --> 07:25.880
Então, eu vou mudar o ID de enter.

07:26.150 --> 07:32.990
E também queremos pegar a entrada do usuário para que possamos fornecer um ID da entrada do usuário.

07:34.120 --> 07:42.400
Agora vamos abrir nosso arquivo JS de ponto de script e pensar nas poucas coisas que queremos selecionar.

07:42.510 --> 07:52.750
Queremos selecionar a entrada e o botão para que possamos fazer isso

07:52.990 --> 07:59.620
assinando-os no ponto variável do documento getElementById.

07:59.730 --> 08:02.070
E aqui podemos apenas dizer Antar.

08:02.070 --> 08:08.910
Lembre-se de que assinamos que o ID e a entrada serão documentos.

08:08.940 --> 08:21.040
Obtenha ajuda e por ID. Faremos a entrada do usuário aqui e queremos adicionar um ouvinte de evento ao botão.

08:21.160 --> 08:22.680
Então vamos fazer isso.

08:22.840 --> 08:35.260
Vou dizer que o botão Dot tinha um ouvinte de eventos. Queremos ouvir o evento click e queremos executar a

08:35.290 --> 08:38.780
ação da função por enquanto.

08:38.860 --> 08:45.100
Antes de entrarmos no código real, é sempre bom testar o que escrevemos até

08:45.100 --> 08:50.760
agora, para que apenas o clique no log do console esteja funcionando.

08:51.010 --> 08:56.970
Vamos salvar, abrir o console e atualizar.

08:57.120 --> 09:00.320
E se eu clicar, clique está funcionando direito.

09:00.370 --> 09:02.380
Tudo está bem até agora.

09:02.380 --> 09:04.880
Idealmente, podemos inserir algo aqui.

09:05.050 --> 09:08.860
E quando clico em entrar, ele é adicionado ao final da lista.

09:10.640 --> 09:12.970
Como podemos fazer isso, vamos pensar sobre isso.

09:13.070 --> 09:22.420
A primeira coisa que queremos fazer é criar outro alinhamento, para que o que for inserido

09:22.420 --> 09:30.690
seja adicionado ao final da vela, use algo chamado método de elemento de criação.

09:32.030 --> 09:43.910
Para que possamos fazer variável ally é igual a document Daut create element novamente, outro método que documento nos dá um fim aqui,

09:43.910 --> 09:47.390
apenas informamos qual elemento queremos criar.

09:47.440 --> 09:53.980
No nosso caso, haverá uma lista que um aliado pode agora mentir.

09:53.990 --> 09:56.730
Acabamos de criar que vive neste mesmo Bowl.

09:56.750 --> 09:59.620
Queremos anexá-lo ao final da lista.

10:00.630 --> 10:06.850
Novamente, o objeto de documento nos dá algo chamado filho anexado.

10:06.890 --> 10:17.960
Portanto, se eu fizer uma mentira que acrescente filho agora aqui, a fim de acrescentar filho, se lembrarmos de todo

10:17.960 --> 10:26.170
o diagrama do dormitório, veremos que cada elemento com um texto será chamado nó.

10:26.480 --> 10:32.310
Então, precisamos adicionar uma nota de texto, vamos fazer isso aqui.

10:32.410 --> 10:43.630
Teremos que fazer algo chamado documento criar nó de texto e, em seguida, aqui podemos apenas dizer teste.

10:43.650 --> 10:50.850
Então agora anexamos o teste ao aliado que acabamos de criar.

10:50.850 --> 11:02.360
Voltando ao nosso diagrama, criei um elemento aliado e adicionei o texto do teste.

11:02.510 --> 11:09.420
Portanto, a última coisa que precisamos fazer é anexar isso à lista não ordenada.

11:09.430 --> 11:20.950
No momento, o que fizemos é que criamos um aliado que diz testar.

11:21.160 --> 11:26.790
Mas, na verdade, isso não está ligado a nada do que vive no nosso programa.

11:26.800 --> 11:30.920
Mas precisamos anexá-lo à lista não ordenada.

11:31.730 --> 11:38.410
E a maneira como fazemos isso é boa: pegamos a lista não ordenada e, em seguida, anexamos a ela.

11:38.420 --> 11:50.250
Então, novamente, vamos selecionar um seletor de consulta de pontos do documento da lista solicitada e selecionaremos

11:53.290 --> 11:56.030
para todos vocês.

11:56.230 --> 11:57.970
E agora podemos

12:00.950 --> 12:02.550
dizer que

12:05.440 --> 12:12.570
quero acrescentar um filho para você Bem, isso é mentira quando a criamos.

12:13.470 --> 12:14.540
Então, vamos ver isso em ação.

12:14.540 --> 12:17.000
Vou salvar e atualizar.

12:17.250 --> 12:18.540
Eu vou fechar o console.

12:18.580 --> 12:23.440
Eu vou pressionar enter isso.

12:23.630 --> 12:24.650
Está funcionando.

12:25.100 --> 12:26.500
Deixe-me atualizá-lo novamente.

12:27.950 --> 12:28.850
Ai está.

12:29.240 --> 12:32.520
Então, isso está funcionando e aprendemos algumas coisas novas aqui.

12:33.330 --> 12:36.750
Uma é que podemos criar um elemento.

12:36.750 --> 12:43.070
Então, apenas atribuímos a tag que queremos criar, mas esse elemento precisa.

12:43.110 --> 12:47.880
Bem, se você deseja exibir algo, ele precisa ter algum tipo de texto dentro dele.

12:47.970 --> 12:50.440
Então é isso.

12:50.490 --> 12:57.200
Por aqui e da maneira como o modelo de objeto do documento funciona, é possível criar uma

12:57.380 --> 13:02.140
nota de texto e colocar o que você quiser dentro dela.

13:02.630 --> 13:08.690
Agora, criamos o suprimento, mas precisamos anexá-lo a algo que faz parte da visão atual no

13:08.690 --> 13:09.470
momento.

13:09.470 --> 13:19.620
No nosso caso, queremos anexá-lo à lista não ordenada e usar capt child, que o adiciona quando criança, esses

13:19.620 --> 13:22.210
três são bastante úteis.

13:22.420 --> 13:24.640
Então você terá que praticá-los e lembrar deles.

13:25.430 --> 13:28.350
Mas temos algo trabalhando aqui que é bom.

13:29.340 --> 13:36.980
Mas, idealmente, podemos colocar algo que inserimos aqui e não apenas um teste estático.

13:37.050 --> 13:38.520
Então, como podemos fazer isso.

13:38.800 --> 13:48.800
Já temos a entrada e a maneira como obtemos o valor de uma entrada é entrada.

13:50.180 --> 13:58.700
Naut nós não precisamos mais dos colchetes, é um ponto de entrada e podemos testá-lo aqui.

13:58.720 --> 13:59.710
O diálogo do Konsole

14:07.500 --> 14:08.430
foi atualizado.

14:08.460 --> 14:17.260
Se eu clicar em entrar, recebo oi e ele também deve ser anexado à parte inferior aqui.

14:21.230 --> 14:21.640
ESTÁ BEM.

14:22.120 --> 14:27.790
Portanto, temos uma lista básica de tarefas que podemos inserir e responder rapidamente.

14:27.910 --> 14:35.750
Mas o que acontece se estiver vazio e eu clicar em enter no DC que continua adicionando coisas?

14:35.850 --> 14:44.520
Idealmente, podemos pular que, se a entrada estiver vazia, bem, enter não deve fazer nada da maneira que fazemos.

14:44.550 --> 14:47.820
Bem, parece que uma declaração condicional pode ser útil aqui.

14:47.920 --> 14:52.000
Podemos fazer se o valor de entrada for.

14:52.240 --> 14:54.440
Bem, o que podemos fazer aqui para testar.

14:54.790 --> 15:02.680
Se você se lembra de que temos uma propriedade de comprimento total em strings,

15:02.740 --> 15:08.500
a propriedade length diz quantos caracteres uma string possui.

15:08.540 --> 15:16.520
Portanto, podemos fazer algo nesse sentido para dizer se você atribui um valor a tudo que é maior que zero.

15:17.590 --> 15:26.860
Então vamos mudar isso aqui.

15:27.070 --> 15:28.090
Caso contrário, bem.

15:28.230 --> 15:31.640
Caso contrário, não precisamos realmente fazer nada.

15:31.730 --> 15:36.600
Permitiremos que esse evento de clique aconteça sem nenhuma ação.

15:36.720 --> 15:44.700
OK, então vamos ver que em ação você pode salvar e atualizar e eu não farei nada e pressione ENTER.

15:45.150 --> 15:46.650
Nada pressione Enter.

15:47.070 --> 15:51.720
Mas se eu digitar algo, ele será adicionado à lista.

15:51.800 --> 15:57.290
Mas aqui está outro problema que eu posso continuar adicionando para sempre.

15:57.300 --> 16:01.340
Idealmente, depois de inserir algo, tudo fica claro.

16:01.390 --> 16:09.840
Então, deixe-me atualizar e aqui o que podemos fazer no final de tudo isso, onde podemos dizer e

16:09.840 --> 16:14.080
colocá-lo em valor, é igual a uma string vazia.

16:16.050 --> 16:23.790
Depois de criarmos o novo aliado e adicionarmos à lista não ordenada, quero que o valor de entrada fique completamente vazio e em

16:23.790 --> 16:25.160
branco uma string.

16:25.950 --> 16:28.120
Vamos salvar e atualizar.

16:28.330 --> 16:34.620
Vamos tentar o Olá, entrar rapidamente e ver isso.

16:34.650 --> 16:39.570
Agora eu tenho que digitar algo novo novamente.

16:41.590 --> 16:46.680
Tudo bem, as coisas estão começando a parecer mais agradáveis, mas é meio irritante eu ter que continuar clicando.

16:46.790 --> 16:52.230
Seria bom poder pressionar Enter novamente novamente se olharmos para os eventos.

16:52.230 --> 16:55.770
Também temos eventos de teclado e pressionamento de tecla.

16:55.770 --> 17:00.100
Bem, como o nome sugere, ouve algum tipo de pressionamento de tecla.

17:00.280 --> 17:05.900
E, felizmente, para nós, podemos apenas ouvir a tecla Enter ou a tecla Return.

17:07.290 --> 17:09.580
Agora, como fazemos isso.

17:09.840 --> 17:10.970
Vamos tentar primeiro.

17:11.020 --> 17:20.090
Bem, basta copiar e colar isso e desta vez na entrada que eu vou dizer, em vez do evento Click, que eu

17:20.150 --> 17:22.210
vou pressionar a tecla.

17:22.220 --> 17:27.950
Então, estamos ouvindo o evento de pressionamento de tecla e queremos fazer exatamente a mesma coisa que estamos

17:28.420 --> 17:29.930
fazendo para que funcione.

17:29.930 --> 17:32.890
Então, como sabemos quando a tecla Enter é suprimida.

17:34.000 --> 17:42.260
Teremos algo chamado códigos de caracteres e podemos ouvir qual chave foi digitada e cada uma delas está associada

17:42.260 --> 17:45.260
a um código com esse número.

17:45.290 --> 17:51.620
Portanto, neste site novamente vinculado a ele, basta pressionar uma tecla aqui e direi exatamente qual

17:51.980 --> 17:57.010
o código que possui; se pressionar enter, recebo o código 13.

17:57.170 --> 18:03.920
Então, estamos ouvindo um código-chave 13, mas novamente como acessamos isso.

18:03.980 --> 18:06.130
Abra o console aqui.

18:06.170 --> 18:14.530
Eu mostrarei a você que, da maneira que fazemos, ouvimos algo chamado ponto de evento que eu vou registrar no

18:14.530 --> 18:15.610
console agora

18:19.090 --> 18:26.890
e aqui vou comentar o software e assim você pode ver toda vez que um evento ouvintes adicionados.

18:26.890 --> 18:32.540
Temos a tecla pressionada e esta função também recebe um parâmetro automaticamente.

18:32.980 --> 18:34.300
Esse é o evento.

18:34.360 --> 18:37.700
Então podemos chamá-lo de evento.

18:37.720 --> 18:49.500
No meu caso, vou chamá-lo de evento e agora, quando o usuário pressiona uma tecla, essa função fornece um evento da descrição desse evento que aconteceu, na verdade,

18:49.500 --> 18:55.070
o console do Leisure registra o evento e vê o que é.

18:55.110 --> 19:05.970
Vou atualizar e dizer manter a tecla pressionada e ver que tenho o evento do teclado, e aqui recebo um monte de informações

19:05.970 --> 19:11.240
sobre o evento que acabei de obter quando pressionei a tecla.

19:11.340 --> 19:18.760
Mas o que é realmente importante aqui é que vemos que há

19:18.760 --> 19:33.900
um código de chave e também quais são os 107, se minha tecla Enter, vemos que o código de chave é 13 que é 13.

19:34.060 --> 19:36.090
Vamos tentar.

19:36.330 --> 19:52.580
Vou dizer agora que, se o valor de entrada for maior que zero e, se o código da tecla ponto for igual a 13, adicione o

19:53.150 --> 19:55.230
item à lista.

19:55.460 --> 19:57.790
Vamos salvar e atualizar.

19:58.070 --> 20:05.970
Eu vou dizer que as listas de compras precisarão de calças ou Precentor assim.

20:07.280 --> 20:10.900
E esse é o Jojo que adiciona à

20:13.660 --> 20:21.530
lista que tudo parece bom, mas há um problema que estou tendo aqui e que temos muito

20:21.580 --> 20:22.900
código repetido.

20:22.900 --> 20:24.780
Isso parece realmente desnecessário.

20:24.790 --> 20:31.630
E como eu disse antes, um dos princípios de ser desenvolvedor é seco, o que significa

20:31.630 --> 20:33.100
não se repita.

20:33.100 --> 20:35.320
Isso não é muito extenso ou é.

20:35.320 --> 20:40.810
Parece que estamos apenas copiando e colando código e imagine se tivéssemos vários eventos, isso seria

20:40.810 --> 20:42.220
apenas um arquivo enorme.

20:42.340 --> 20:48.130
Então, vamos extrair um pouco da lógica e mostrar como podemos fazer algo chamado refatoração que está

20:48.130 --> 20:50.620
fazendo o código parecer um pouco melhor.

20:50.620 --> 20:57.910
Uma coisa que podemos fazer é que isso pareça no nosso IF e estamos fazendo a mesma coisa, verificando se

20:57.910 --> 21:01.570
o comprimento do valor de entrada é maior que zero.

21:02.020 --> 21:12.480
Portanto, se podemos adicionar uma função aqui chamada e colocar tamanho completo, e como o nome sugere, isso verifica e coloca

21:13.570 --> 21:21.420
esse valor acima do tamanho, mas lembre-se de que, como função, precisamos retornar algo diferente.

21:21.480 --> 21:26.920
Bem, vamos executar esta função e, digamos, indefinido e indefinido, não pode ser indefinido para maior

21:26.920 --> 21:27.750
que zero.

21:27.750 --> 21:29.250
Isso não faz sentido.

21:29.280 --> 21:33.880
Então retorne a lenth.

21:33.900 --> 21:43.080
Então, agora, novamente, extraímos isso para que possamos apenas dizer e executar a décima primeira função que, qualquer que seja o

21:43.080 --> 21:47.930
retorno, seja maior que zero e faremos o mesmo aqui também.

21:51.310 --> 21:58.090
Agora essa é uma pequena mudança, mas agora temos algo que podemos usar em qualquer lugar a qualquer momento que criarmos um

21:58.090 --> 21:59.470
novo ouvinte de evento.

21:59.470 --> 22:00.940
O que mais podemos limpar?

22:00.940 --> 22:06.130
Parece que todo esse bloco de código está sendo repetido aqui.

22:07.090 --> 22:20.550
Então, novamente, podemos chamar um elemento de criação de lista de funções aqui, podemos apenas remover esse código adicionado aqui e agora

22:24.060 --> 22:26.130
podemos apenas dizer

22:30.660 --> 22:39.410
criar esse elemento e novamente remover e dizer criar este assentamento, vamos apenas salvar e

22:42.230 --> 22:45.640
ver como tudo funciona agora.

22:45.760 --> 22:54.660
Deseja atualizar para garantir que o console não me dê nenhum erro e eu vou dizer o da Shell e se eu

22:54.660 --> 22:55.470
pressionar

22:58.090 --> 22:59.320
Enter, tudo continuará funcionando.

22:59.320 --> 23:04.040
E caso tudo esteja vazio, não posso adicionar nada.

23:04.040 --> 23:04.590
Tudo certo.

23:04.590 --> 23:06.450
O código está bonito.

23:07.360 --> 23:09.070
Lê muito bem.

23:09.920 --> 23:18.430
A última coisa que talvez eu queira fazer é, em vez de ter a função aqui, também posso extrair isso.

23:18.460 --> 23:23.830
Posso dizer a função add list depois e podemos apenas

23:28.910 --> 23:36.800
dizer Copiar esta função e dar um tapinha na sua e não precisamos mais dessa função.

23:40.730 --> 23:53.570
E agora podemos apenas adicionar a lista após o clique e também podemos ter uma lista do teclado de funções após

23:53.590 --> 23:55.570
pressionar a tecla.

23:55.650 --> 23:58.650
E aqui está a parte complicada.

23:58.700 --> 24:05.430
Agora temos que copiar isso.

24:05.610 --> 24:12.290
Mas antes de deixar essa função, você vê que precisamos receber um evento com isso.

24:12.480 --> 24:17.960
Portanto, ele precisa receber um parâmetro porque precisamos dessas informações do evento.

24:17.970 --> 24:28.140
Então, novamente quando passamos esse evento, removemos esta função e temos o código Tukey do evento.

24:28.240 --> 24:31.760
Vamos ver se tudo funciona como esperado.

24:32.920 --> 24:36.730
Vou salvar a atualização.

24:36.910 --> 24:42.300
Veja se há algum erro no console e pressione água.

24:42.790 --> 24:47.330
Isso é suco de água tem suco.

24:47.500 --> 24:52.080
E se eu não pressionar ou não tentar, ainda funcionará.

24:52.120 --> 24:56.210
Vamos olhar para este código mais uma vez e ver o que está acontecendo.

24:56.230 --> 25:05.220
Começamos com a seleção dos elementos nos quais estamos interessados e notamos aqui que não estamos constantemente toda vez que precisamos deles

25:05.230 --> 25:08.800
dizendo que o documento recebe o Al Lombardi.

25:09.100 --> 25:10.790
Estamos descontando isso.

25:10.810 --> 25:14.830
Portanto, no início, quando o script é executado, estamos dizendo: ei, lembre-se disso.

25:14.830 --> 25:17.520
Vou usá-lo e guardá-lo em caução.

25:17.800 --> 25:18.950
E o mesmo com Bud.

25:18.970 --> 25:20.640
O mesmo com a lista não ordenada.

25:22.030 --> 25:28.840
Em seguida, temos várias declarações de função, mas elas nunca são executadas porque estão apenas dizendo: ei,

25:29.080 --> 25:32.530
temos essa função, mas ninguém as executou ainda.

25:32.720 --> 25:39.340
E o programa vai para o final e diz: ei, eu não tenho um ouvinte para o klick, se alguém

25:39.670 --> 25:42.250
clicar no botão para executar esta função.

25:42.590 --> 25:49.200
E se alguém tiver a tecla pressionada na entrada, chame essa função.

25:49.330 --> 25:56.290
E agora, toda vez que clico, isso é acionado e ele passa aqui, e diz que tem um

25:56.290 --> 25:59.050
comprimento maior que zero, se for.

25:59.050 --> 26:01.740
Crie um elemento da lista.

26:01.990 --> 26:03.400
E aqui está.

26:03.400 --> 26:10.500
E se eu pressionar uma tecla, ele verifica se a entrada é maior que zero.

26:10.750 --> 26:19.600
Depois, verifico se pressiono a tecla Enter e, em seguida, crio um elemento de lista, o que parece bastante

26:19.630 --> 26:20.470
limpo.

26:20.560 --> 26:23.820
Qualquer um pode entrar se souber um pouco de JavaScript.

26:23.830 --> 26:29.350
Você pode ler o que está acontecendo apenas no código e isso é algo que você

26:29.350 --> 26:32.200
realmente deseja buscar, onde não deseja se repetir.

26:32.200 --> 26:40.490
Você deseja armazenar em cache essas consultas para não consumir muita energia do navegador.

26:41.550 --> 26:49.450
E nós temos tudo dividido em funções que são muito, muito simples, OK.

26:49.690 --> 26:50.990
Por enquanto é isso.

26:51.010 --> 26:57.340
Adicione todos os itens da lista de compras que você precisa e até o próximo vídeo. Tchau tchau.
