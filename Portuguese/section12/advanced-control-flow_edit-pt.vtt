WEBVTT

00:01.010 --> 00:09.890
Até este ponto, aprendemos a declaração 'if', a declaração 'if else' e a declaração 'else if'

00:09.890 --> 00:17.660
E se você se lembrar do nosso resumo da seção, bem, nós não mencionamos esses dois para condicionais javascript.

00:17.660 --> 00:19.660
Então, vamos abordar isso hoje.

00:20.060 --> 00:24.190
Como você pode ver, temos mais dois para passar, mas não tenha medo.

00:24.290 --> 00:27.360
Estes não vão introduzir nada de novo.

00:27.360 --> 00:33.170
Existem apenas maneiras diferentes de fazer o fluxo de controle, mas eles não farão nada que seja simples

00:33.330 --> 00:34.560
declaração não pode fazer.

00:34.940 --> 00:43.790
No entanto, há casos em que será muito mais fácil fazer esses dois se fizermos algo com o

00:43.790 --> 00:45.490
declaração 'if else'.

00:45.920 --> 00:47.330
Então, vamos dar uma olhada.

00:47.360 --> 00:50.870
A primeira coisa sobre a qual vamos falar é o "operador ternário".

00:50.870 --> 00:54.950
Parece algo assim

00:55.480 --> 00:56.150
'condição?'

00:58.740 --> 01:02.310
expressão um (expr1) ou expressão dois (expr2).

01:06.230 --> 01:10.820
E essa é a sintaxe. Diz, isso é verdadeiro ou falso?

01:11.000 --> 01:14.790
Se for verdade, forneça este valor (expr1).

01:15.170 --> 01:17.870
Se for false, forneça este valor (expr2).

01:18.230 --> 01:27.260
Deixe-me mostrar-lhe um exemplo disso, terá uma função chamada 'isUserValid' que aceita um booleano (bool)

01:29.570 --> 01:34.190
e apenas retornará o valor booleano.

01:36.190 --> 01:48.670
Agora, aqui dentro, podemos dizer que a resposta variável é igual a "isUserValid"

01:48.670 --> 01:50.090
e vamos dizer "verdade" por agora ponto de interrogação (?)

01:50.290 --> 01:54.820
Então, se isso for verdade, direi "Você pode entrar"

01:58.300 --> 02:03.630
caso contrário, direi 'Acesso negado'

02:03.850 --> 02:06.600
Deixe-me fazer isso um pouco menor para que você possa ver.

02:06.820 --> 02:12.790
Então, novamente, tudo o que estamos dizendo é se isso é verdade, então faça essa expressão ("Você pode entrar")

02:12.790 --> 02:15.960
Se isso for falso, faça esta expressão ("Acesso negado").

02:16.110 --> 02:19.300
Então, basta copiar isso no console e ver o que acontece.

02:21.520 --> 02:27.780
Se eu corro 'anwer', Whoops eu soletro que errado, 'resposta'.

02:28.790 --> 02:33.570
Eu entendo:'Você pode entrar' porque

02:33.580 --> 02:34.600
user is valid (isUserValid) é verdadeiro.

02:34.640 --> 02:47.030
Agora, se eu mudar isso para dizer "falso", bem, nesse caso, vou receber "Acesso negado"

02:47.030 --> 02:49.040
Vamos fazer uma resposta mais complicada.

02:49.100 --> 02:58.870
Podemos dizer variável (var) 'automatedAnswer' e podemos dizer e eu vou fazer isso em uma nova linha só assim você pode ver

02:59.050 --> 03:08.880
'O número da sua conta é', 'isUserValid' e vamos apenas dizer algo como.

03:08.880 --> 03:10.140
'false' por agora.

03:10.140 --> 03:16.680
Então, porque temos esses colchetes, vamos ter uma expressão dentro daqui que podemos avaliar

03:16.680 --> 03:18.990
então podemos dizer que o usuário (isUserValid) é válido.

03:19.020 --> 03:23.280
Se o usuário for válido, dirá '1234'.

03:23.420 --> 03:28.940
Se não, diremos "não disponível".

03:31.780 --> 03:37.830
Se copiarmos e colamos isso aqui, no nosso console e podemos ver melhor.

03:37.870 --> 03:39.880
Nós vemos, se o usuário é válido (verdadeiro)

03:39.880 --> 03:42.610
Queremos dizer '1234'.

03:42.640 --> 03:45.070
Se não estiver 'indisponível'.

03:45.070 --> 03:54.490
Então, se eu executar isso e agora eu olhar para resposta automatizada, eu recebo "o número da sua conta não está disponível" bem,

03:54.700 --> 03:56.920
porque esse valor de usuário é 'falso'.

03:56.920 --> 04:08.190
Mas se eu fizer 'verdadeiro' bem, nesse caso, o seu número de conta é '1234'.

04:08.210 --> 04:14.120
Agora você pode notar que isso não é tão diferente de se você fez,

04:14.120 --> 04:18.170
'condição de função' foi chamada de condição e dirá

04:21.600 --> 04:27.260
'if isUserValid' return.

04:27.290 --> 04:28.490
'Você pode entrar'

04:31.510 --> 04:33.670
e você fez 'else'

04:36.450 --> 04:55.330
'return Acesso negado' esta função aqui, 'condição', se eu disser variável (var) 'resposta2' é igual a 'condição'.

04:55.570 --> 04:56.790
Vamos ver o que acontece.

04:59.380 --> 05:09.680
Copie estes dois, execute-os, e agora, se eu olhar para a 'resposta' eu recebo 'Você pode entrar' se eu obtiver o 'answer2'

05:09.690 --> 05:13.120
Eu entro 'Você pode entrar'.

05:13.290 --> 05:18.280
Agora é exatamente a mesma coisa, além de um pouco de erro de ortografia da minha parte.

05:19.630 --> 05:28.710
Mas você vê que uma maneira é muito melhor, é apenas uma linha simples e agradável. Um operador ternário é realmente

05:28.710 --> 05:36.060
bom para estes 'if else', onde há uma verificação de uma condição e há duas expressões possíveis,

05:36.060 --> 05:36.790
que sai disso.

05:38.410 --> 05:44.350
Tudo bem, vamos aprender, o próximo, que é a declaração 'switch'.

05:45.390 --> 05:46.290
Essa é a diversão.

05:47.350 --> 05:49.750
Então, uma declaração de 'bruxa' se parece com algo assim.

05:49.770 --> 05:53.980
E podemos criar um jogo simples agora para demonstrar como funciona.

05:54.070 --> 05:58.720
Eu posso dizer a função 'moveCommand'.

05:59.350 --> 06:05.120
E nós vamos dizer que aceita o parâmetro 'direção' dentro desta função.

06:05.130 --> 06:12.790
Vou dizer variável (var) 'whatHappens' e vamos dizer 'switch'.

06:12.810 --> 06:13.850
Observe que é uma palavra chave.

06:13.850 --> 06:16.140
Então agora está destacado em vermelho.

06:16.160 --> 06:19.000
E eu direi "direção".

06:19.160 --> 06:23.790
A instrução 'switch' vai aceitar 'direção' e vai checar 'direção'.

06:25.430 --> 06:37.600
E aqui dentro nós dizemos 'case' 'forward' que significa 'direction' se 'direction' é igual a 'forward',

06:37.820 --> 06:42.410
Então 'whatHappens' é igual a

06:42.900 --> 06:45.210
"Você encontra um monstro";

06:48.490 --> 06:49.360
'pausa;'.

06:49.390 --> 06:54.750
Eu vou explicar mais 'quebrar' faz logo depois de terminar o resto das declarações de caso.

06:54.790 --> 07:01.210
Portanto, as declarações de caso, como você pode ver, são realmente boas porque eu posso copiar e colar.

07:01.470 --> 07:14.550
E agora eu posso dizer que aqui vamos dizer "de volta" e se a direção está "de volta", vamos dizer "você chegou em casa" se o

07:14.550 --> 07:29.320
a direção está "certa" nesse caso, vamos dizer "você encontrou um rio" e se a "direção" for "esquerda", diremos

07:30.670 --> 07:34.050
"Você corre em um troll".

07:35.280 --> 07:39.930
E então finalmente diremos 'padrão'

07:43.330 --> 07:49.840
'whatHappens' é igual a 'por favor insira uma direção válida'.

07:52.740 --> 07:58.530
E vamos terminar com um 'retorno' 'whatHappens'.

07:58.530 --> 07:58.950
Tudo bem.

07:58.950 --> 08:01.170
Isso foi um monte de código.

08:01.170 --> 08:06.080
Vamos executar este comando primeiro e depois explicaremos exatamente o que está acontecendo.

08:06.090 --> 08:07.030
Copie o código.

08:08.000 --> 08:10.160
Copie para o console.

08:10.160 --> 08:11.760
E agora temos o 'moveCommand'

08:11.840 --> 08:21.940
E se você se lembra do último vídeo 'moveCommand' agora existe no escopo da raiz que é a janela,

08:21.940 --> 08:22.300
então dentro daqui.

08:22.330 --> 08:31.860
Vamos apenas dizer "avançar", agora, se eu executar isso, recebo "Você encontrou um monstro".

08:32.030 --> 08:36.640
Se eu for "voltar", "você chegou em casa".

08:36.640 --> 08:40.320
Se eu for "certo", "Você encontrou um rio".

08:40.690 --> 08:46.830
Se eu for "esquerda", "Você corre em um troll" e se eu escrever rabiscos

08:50.700 --> 08:51.070
Eu recebo.

08:51.090 --> 08:53.000
'Por favor, insira uma direção válida'.

08:53.980 --> 08:58.510
Isso é o que as declarações switch são realmente boas para quando você tem muitas condições.

08:58.510 --> 09:07.470
Em vez de usar uma instrução 'if else', 'if else', 'if else', 'if else', 'if else', você pode usar uma instrução 'switch'

09:08.070 --> 09:10.710
e você pode ver, lê bem.

09:10.710 --> 09:16.760
Essencialmente, o que está dizendo é criar variável 'whatHappens', em seguida, alternar.

09:16.770 --> 09:23.660
Quero que você verifique qual é a condição, seja qual for a variável, nesse caso, essa é a direção.

09:23.970 --> 09:30.190
E no caso, a direção é igual a 'frente' faça isso, no caso direção é 'back' fazer isso.

09:30.240 --> 09:33.810
Se é 'certo' faça isso, se é 'deixado' faça isso.

09:33.810 --> 09:42.060
E diz 'padrão' é se nenhuma dessas condições funcionar e lembre-se que o programa vai linha por linha

09:42.060 --> 09:46.260
por isso verifica 'para a frente', depois verifica 'para trás' e verifica 'direito' e os cheques 'restantes'.

09:46.280 --> 09:53.940
E se nada disso combinar, então diz que você pode simplesmente usar o padrão 'por favor, insira uma direção válida' e

09:53.940 --> 09:59.700
então retornamos "whatHappenes" de modo que a função retorna algo para nós.

09:59.710 --> 10:05.460
Agora, finalmente, qual é o 'break' bem o 'break' (s) simplesmente diz,

10:06.850 --> 10:12.260
Se 'case' for 'forward' então atribua 'você encontra um monstro' para

10:12.280 --> 10:18.620
'WhatHhappens' variável e, em seguida, 'break', 'break' é apenas dizer sair da instrução switch.

10:18.640 --> 10:24.720
Então, ao invés do programa, verificar se 'case' é 'back', 'case' é 'right', 'case' é 'left' ou 'default'.

10:24.850 --> 10:33.550
Se dissermos 'break', o programa pára aqui e depois sai direto do comando switch

10:33.910 --> 10:34.870
para retornar "whatHappens".

10:35.140 --> 10:46.830
Então, se eu realmente fizer, 'quebrar' antes de 'whatHappens', 'você encontra um monstro' e eu copio este

10:49.680 --> 10:58.820
e vamos reexecutar a função, vamos dizer que 'moveCommand' é 'avante', o que acontece agora.

10:59.840 --> 11:06.930
Eu fico "indefinido" porque nós quebramos o programa, dizendo:"Oh yeah!

11:07.320 --> 11:14.010
Ele digitou 'para a frente', mas antes de podermos atribuir algo à variável eu digo 'quebrar',

11:14.040 --> 11:21.530
Eu saio do comando switch e eu retorno 'whatHappens', que só foi declarado, mas não foi atribuído.

11:21.530 --> 11:26.630
Então eu acabei de retornar 'indefinido'.

11:26.680 --> 11:32.530
Tudo bem, você tem isso, seus dois outros condicionais e você cobriu todos eles em javascript.

11:32.530 --> 11:39.710
Agora cada um é bom para o seu próprio caso individual, mas todos eles são muito úteis.

11:39.760 --> 11:41.470
Eu vou te ver no próximo
Tchau tchau.