WEBVTT

00:02.900 --> 00:03.840
Bem vindo de volta.

00:03.980 --> 00:11.140
Eu tenho um pequeno desafio divertido para você e esse desafio vem de um dos meus sites de programação favoritos

00:11.270 --> 00:19.880
na web e é chamado "Advent of Code" e o advento do código acontece todo mês de dezembro.

00:19.880 --> 00:21.980
Programadores de todo o mundo,

00:22.110 --> 00:24.700
Não importa em que língua eles escrevem.

00:24.770 --> 00:31.100
Você pode fazer esses problemas com qualquer idioma que eles quiserem e você deve resolver por 24 dias

00:31.100 --> 00:32.580
até o natal

00:32.630 --> 00:35.730
esses problemas difíceis usando código.

00:35.930 --> 00:40.910
Então, vamos fazer algo divertido aqui.

00:41.360 --> 00:43.720
Nós temos o advento do código a partir de 2015.

00:43.740 --> 00:49.100
Eu sei que é um pouco velho, mas eu realmente gosto dessa pergunta.

00:49.100 --> 00:52.160
Eu acho que vai ser realmente uma boa prática.

00:53.240 --> 00:59.570
Então, vou deixar para você esse desafio e há duas partes desse desafio.

00:59.570 --> 01:09.250
Então pense nisso como você precisa de uma resposta para a primeira parte e a segunda parte.

01:09.440 --> 01:15.770
Agora eu vou compartilhar o link para este desafio para que você possa realmente ler todas as regras e até conseguir

01:15.890 --> 01:19.170
a entrada para o seu quebra-cabeça bem aqui.

01:20.350 --> 01:24.520
E não se preocupe, isso parece confuso, mas uma vez que você leia a pergunta, você entenderá por que isso é

01:25.390 --> 01:28.810
a parte emocionante é que no próximo vídeo.

01:28.960 --> 01:32.430
- mas certifique-se de que você não assiste antes de terminar! - no próximo vídeo

01:32.680 --> 01:40.180
Vou mostrar o que eu faria se resolvesse esse problema de lógica usando programação e isso

01:40.180 --> 01:45.870
maneira de comparar o que você faz com o que eu faço - não significa que meu caminho está correto.

01:45.880 --> 01:48.990
Existem muitas maneiras diferentes de resolver problemas

01:49.120 --> 01:56.200
quando você está programando, mas como um pequeno desafio divertido você vai descobrir a solução para este

01:56.200 --> 02:04.700
problema usando nosso módulo 'fs' usando o Node e usando JavaScript.

02:04.940 --> 02:11.990
E então eu vou mostrar a você o que eu faço e vamos ver qual código é mais rápido e como estamos

02:11.990 --> 02:14.160
vai comparar o nosso código

02:15.140 --> 02:22.030
é, vamos fazer algo assim dentro da nossa função qualquer que seja essa função.

02:22.100 --> 02:24.900
Você provavelmente vai ler o arquivo

02:25.130 --> 02:28.570
eles fornecem para você o que é isso aqui.

02:30.730 --> 02:39.650
Logo depois de fazer isso, vamos dizer 'console.time ()' e podemos dar a ele qualquer rótulo que desejarmos

02:39.850 --> 02:46.890
Basta dizer o desafio divertido agora o tempo de log do console.

02:47.100 --> 02:58.340
Quando atingimos esta linha vai começar um temporizador e só vai acabar quando vir o

02:58.550 --> 03:02.570
'console.log' ou 'timeEnd'.

03:02.810 --> 03:09.640
e temos que dar a mesma entrada ou o rótulo da primeira vez que o chamamos.

03:09.730 --> 03:15.650
Então 'funchallenge' ... agora desse jeito,

03:15.970 --> 03:22.930
Bem, isso é o que acontece se nós executá-lo e temos um pouco de erro, porque estamos excluindo este arquivo que

03:22.930 --> 03:24.540
nós não queremos fazer isso.

03:24.670 --> 03:26.990
Vamos clarear e tentar isso mais uma vez.

03:30.660 --> 03:35.310
funchallenge demorou 0.319 segundos.

03:35.670 --> 03:44.220
Bem, isso foi realmente muito rápido, porque tudo o que estamos fazendo é realmente log de console, mas usando isso vamos

03:44.220 --> 03:49.830
Veja quão rápido sua função resolve o problema.

03:50.720 --> 03:55.510
E então mostrarei a rapidez com que minha solução resolve o problema.

03:56.060 --> 04:00.960
E nós vamos ter um pouco de competição. Então eu vou te ver nessa.

04:00.980 --> 04:01.220
Tchau tchau
