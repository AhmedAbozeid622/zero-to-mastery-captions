WEBVTT

00:01.210 --> 00:06.990
Bem vindo de volta. Vamos revisar o que temos até agora em nosso aplicativo.

00:07.160 --> 00:14.430
Criamos nosso componente de aplicativo que contém alguns componentes de

00:14.450 --> 00:24.240
reação personalizados que criamos. E no último vídeo, conseguimos finalmente obter nossa resposta da API 'Clarifai'. Se voltarmos ao 'Clarifai', vemos

00:24.240 --> 00:32.400
que a detecção de rostos deles tem uma caixinha quadrada que ele detecta.

00:32.640 --> 00:40.010
Mas se você olhar para a API e a resposta que recebemos, na verdade não obtemos essa caixa quadrada.

00:40.080 --> 00:48.300
Tudo o que temos são essas caixas delimitadoras. E com base na face e quantas faces ele detecta, ele

00:48.500 --> 00:50.390
fornece essas caixas delimitadoras.

00:53.100 --> 00:56.370
E você pode ler aqui, aqui.

00:56.580 --> 01:05.570
Mas eles estão apenas dizendo: a linha superior está em 22% da imagem.

01:05.580 --> 01:12.080
Portanto, essas são porcentagens que podemos usar. Mas, para criarmos nossa própria caixa

01:12.330 --> 01:19.070
como esta, bem, precisamos apenas ver quais estilos estão usando, mas fazendo 'inspecionar'.

01:19.110 --> 01:24.100
Como você se lembra, podemos ver que eles têm uma cláusula 'caixa delimitadora' aqui.

01:24.360 --> 01:30.030
Então, nosso aplicativo, podemos fazer algo semelhante e, em seguida, teremos que calcular com base na resposta

01:30.270 --> 01:37.260
em que podemos criar essas caixas, porque bem, apenas exibir o número para nossos usuários não significa muito, é bom ter essa

01:37.260 --> 01:38.760
caixa de ferramentas .

01:38.940 --> 01:41.660
Então, vamos trabalhar nisso neste vídeo.

01:41.890 --> 01:48.700
Se voltarmos ao nosso aplicativo, primeiro queremos dizer bem: certamente adicionaremos um novo

01:48.700 --> 01:56.240
'estado' e o chamaremos de 'caixa'. E essa 'caixa' será apenas um objeto vazio para começar.

01:56.370 --> 02:00.710
E essa 'caixa' conterá os valores que recebemos.

02:01.580 --> 02:05.120
No caso de uma resposta, será a

02:07.980 --> 02:13.510
'linha superior', 'coluna esquerda', 'linha inferior' e, em seguida, 'coluna direita'.

02:14.310 --> 02:16.680
Então, como podemos fazer isso?

02:16.680 --> 02:23.980
Isso requer um pouco de reflexão da nossa parte, mas podemos começar criando uma função. E essa

02:23.980 --> 02:29.460
função pode dizer 'generateFaceLocation' e

02:32.260 --> 02:38.010
esse 'generateFaceLocation' receberá alguns 'dados'.

02:39.330 --> 02:44.280
E por enquanto vamos mantê-lo como uma função vazia.

02:44.510 --> 02:51.620
Mas sabemos que, queremos chamar essa função de 'calcularFaceLocalização' com base nas

02:51.620 --> 02:54.910
entradas que obtemos do 'Clarifai'.

02:54.930 --> 03:06.750
Portanto, no nosso caso, com a resposta que eles nos dão, queremos usar

03:06.750 --> 03:15.910
essa resposta e chamar 'calculFaceLocation' com os dados da 'resposta'.

03:16.040 --> 03:20.030
E, novamente, porque estamos usando classes aqui,

03:23.120 --> 03:27.030
terá que fazer, 'este' ponto.

03:27.110 --> 03:30.110
Eu também acho que essa função parece um pouco bagunçada agora.

03:31.200 --> 03:33.250
Então, eu vou mudar algumas coisas.

03:33.420 --> 03:38.420
Primeiro, usando o ES6, podemos simplesmente executar funções de seta aqui.

03:44.830 --> 03:45.600
Isso é muito melhor.

03:49.250 --> 03:55.580
E, em vez de usar esse 'erro (err)', podemos realmente com uma 'promessa' sempre que você tem um ponto 'e depois' você pode

03:55.580 --> 03:56.730
fazer um ponto 'capturar'.

03:56.900 --> 04:01.370
E isso é um 'erro' (erro) no caso de algo falhar.

04:01.370 --> 04:05.600
No nosso caso, podemos apenas 'console dot log'.

04:05.850 --> 04:12.330
Este 'erro' (erro).

04:12.500 --> 04:14.680
Então isso já parece um pouco mais limpo.

04:15.640 --> 04:16.900
Mas precisamos definir, opa!

04:20.330 --> 04:26.730
e eu esqueci um suporte aqui, e agora também não precisamos disso. ESTÁ BEM.

04:27.020 --> 04:31.890
Então, sabemos que isso receberá uma 'resposta', que é a caixa delimitadora.

04:33.330 --> 04:41.610
Mas essa 'resposta' será recebida enquanto o console estiver conectado pela última vez, que está recebendo a 'caixa delimitadora'.

04:41.610 --> 04:45.660
Por enquanto, não vamos nos preocupar em ter

04:45.990 --> 04:55.650
várias faces na imagem, apenas pegar a primeira 'caixa delimitadora'. Novamente, se voltarmos à API 'Clarify', vemos que, dependendo das regiões, obtemos

04:55.650 --> 04:56.960
uma matriz.

04:56.960 --> 05:03.580
Então, tivemos várias pessoas na imagem terão várias faces.

05:03.670 --> 05:10.990
No nosso caso, estamos apenas preocupados com um, apenas tentando colocar uma 'caixa delimitadora' em torno de um rosto.

05:10.990 --> 05:19.560
Então, queremos mudar essa 'resposta' para agora dizer 'dados' e podemos ter uma constante chamada 'clarifaiFace' igual a esses

05:22.840 --> 05:24.570
'dados', vou tornar

05:27.400 --> 05:34.570
isso um pouco menor para que possamos ver. Agora aqui dentro, o que queremos fazer

05:34.570 --> 05:35.480
primeiro.

05:35.680 --> 05:38.490
Bem, vamos querer fazer alguma manipulação do DOM.

05:38.620 --> 05:51.700
Portanto, a melhor coisa que podemos fazer é dizer 'const image' é igual ao documento 'dot' getElementById 'e podemos criar um elemento

05:51.700 --> 06:00.370
ou criar um ID chamado' inputimage 'e esta' imputimage 'que estamos capturando estará aqui

06:01.790 --> 06:02.520
.

06:03.270 --> 06:09.660
Esta imagem que vincula o 'imageUrl'. Portanto, a imagem exibida em nosso aplicativo. Assim,

06:09.660 --> 06:19.720
podemos criar um 'id' aqui e diremos 'image' ou 'inputimage'.

06:19.730 --> 06:27.410
Então agora essa 'imagem de entrada' está bem aqui, nós a pegamos e queremos, como você se

06:27.410 --> 06:32.180
lembra dessa 'caixa delimitadora' é uma porcentagem da imagem.

06:32.180 --> 06:41.390
Então, se é o ponto dois dois (. 22) significa que é 20% da altura ou largura das imagens.

06:42.050 --> 06:52.980
No nosso caso, podemos dizer que, com certeza, queremos ter a largura da nossa imagem dizendo a 'imagem' ponto 'largura'.

06:53.150 --> 06:57.600
E como esta será uma string e queremos fazer alguns cálculos, vamos agrupá-la em

06:57.600 --> 06:58.470
um número.

06:58.470 --> 07:04.650
Dessa forma, garantimos que seja um número e, em seguida, faremos 'height' também da imagem

07:04.650 --> 07:06.320
que acabamos de capturar.

07:09.020 --> 07:15.060
E você sabe, podemos apenas consolar o registro agora para ver se estamos fazendo tudo certo, 'largura' e 'altura'.

07:16.480 --> 07:27.550
Então, vamos tentar isso. Vou salvar, voltar à imagem ou ao aplicativo, pegar esta imagem de

07:27.550 --> 07:32.800
exemplo, colocá-la, pressionar 'Detectar' e vamos olhar para o console.

07:35.450 --> 07:37.610
'getelement', oh! Eu escrevi isso errado.

07:39.330 --> 07:40.450
Graças a Deus pelo console.

07:40.480 --> 07:42.210
Eu admito, não posso soletrar hoje.

07:42.330 --> 07:43.120
Ai está.

07:43.380 --> 07:44.390
Vamos tentar de novo.

07:48.950 --> 07:50.510
Abra e veremos quinhentos

07:50.510 --> 07:52.740
e quatrocentos e noventa e sete.

07:52.850 --> 07:53.080
Tudo certo.

07:53.090 --> 07:57.270
Estamos agarrando a altura e a largura da imagem, isso é perfeito.

07:57.470 --> 08:04.720
E como você sabe, são 500, porque dissemos 500, lembre-se se formos para 'Reconhecimento facial'

08:04.710 --> 08:06.950
e temos 500 pixels.

08:06.950 --> 08:12.470
E a razão pela qual eu não faço apenas 500 aqui é que, bem, se alguém vier

08:12.530 --> 08:16.270
talvez um designer e decidir mudar isso, não será afetado aqui.

08:16.280 --> 08:17.850
Sempre será calculado.

08:18.820 --> 08:19.370
Tudo certo.

08:19.430 --> 08:22.320
Então, temos a largura e a altura.

08:22.340 --> 08:29.410
Também temos a caixa delimitadora de 'Clarifai', que está bem aqui.

08:29.480 --> 08:33.590
Então, vamos receber isso e precisamos fazer um pouco de cálculo.

08:35.500 --> 08:36.880
E eu não vou mentir.

08:36.910 --> 08:42.790
Isso levou cerca de uma hora e eu decidi não incluí-lo neste vídeo porque era apenas eu batendo

08:42.790 --> 08:45.420
no cérebro com um pouco de matemática.

08:45.580 --> 08:53.740
Então, estou cortando para mim tentando descobrir a matemática para a solução. Mas vou explicar exatamente como isso

08:53.740 --> 08:55.260
funciona.

08:55.300 --> 09:05.010
Queremos retornar aqui, um objeto, e esse objeto será o que preencherá o estado 'caixa'.

09:06.650 --> 09:16.100
Agora, esse objeto primeiro precisará descobrir o primeiro ponto, o segundo, o terceiro e o quarto pontos, ao redor da

09:16.100 --> 09:24.780
face e depois vamos envolvê-lo em uma borda. Novamente, se voltarmos à API 'Clarifai'

09:24.790 --> 09:28.130
e inspecionarmos, veremos que

09:31.170 --> 09:35.900
a 'caixa delimitadora' está fazendo algo semelhante.

09:35.910 --> 09:37.640
E nós vamos usar alguns desses estilos.

09:40.870 --> 09:52.270
Diremos que a coluna esquerda, esquerda (lectCol) será o 'clarifaiFace' que receberemos aqui.

09:52.350 --> 10:02.070
E, como você se lembra, isso tem uma propriedade 'coluna esquerda' e agora a coluna esquerda (left_col) é a porcentagem da

10:02.070 --> 10:02.570
largura.

10:02.700 --> 10:05.710
Portanto, se multiplicarmos pela 'largura' que temos

10:06.000 --> 10:12.630
aqui, bem, que é 500, obteremos a largura da imagem exibida e onde a coluna da

10:12.630 --> 10:14.260
esquerda deve estar.

10:14.280 --> 10:20.250
Então 'width' e a próxima linha será o 'topRow'

10:23.070 --> 10:31.530
e a linha superior terá a coluna 'top_row' ou desculpe o 'top_row'

10:31.610 --> 10:43.480
não a coluna e terá a 'height'. Novamente, a linha superior dirá que a altura dela é a porcentagem da altura da nossa imagem.

10:44.050 --> 10:58.830
Agora o 'rightColumn' será a subtração da 'width' do 'clarifaiFace' dot 'right_column' dot 'width' ou

10:59.780 --> 11:03.720
multiplicado pela 'width'.

11:03.750 --> 11:12.240
Então, novamente, porque a coluna da direita está deste lado, queremos obter o número que é a porcentagem total menos

11:12.810 --> 11:15.760
a largura, começando pelo lado esquerdo.

11:19.130 --> 11:28.150
E, finalmente, com o 'bottomRow', fará algo semelhante, mas com a altura

11:28.160 --> 11:30.390
e será

11:34.380 --> 11:38.170
o 'clarifaiFace' 'bottom_row' multiplicado por 'height'.

11:38.200 --> 11:38.690
Tudo certo.

11:38.800 --> 11:45.130
Hã! isso era muita matemática, isso é tão louco quanto vamos conseguir com a nossa matemática. E mostrarei a você como

11:45.130 --> 11:49.720
consegui esses números, um pouco mais tarde, quando tivermos as caixas delimitadoras

11:49.720 --> 11:53.190
e posso mostrar como você pode brincar no console.

11:53.200 --> 12:00.200
Então, agora que temos isso, queremos preencher o estado 'caixa' com esses valores.

12:00.330 --> 12:12.440
Então, talvez eu possa criar uma outra função, outro método nesta classe que diga 'displayFacebox'. Não é o melhor nome para uma função, mas é

12:12.450 --> 12:16.190
o que eu acabei de criar.

12:16.680 --> 12:20.460
E isso vai receber esse valor de retorno.

12:24.900 --> 12:37.230
E vai dizer 'este' ponto 'setState' para igualar 'caixa', 'caixa'. E apenas um lembrete com o ES6, você pode realmente

12:37.230 --> 12:38.730
fazer isso.

12:38.730 --> 12:42.920
Mas só porque isso está claro por enquanto, continuaremos assim.

12:42.930 --> 12:43.700
Tudo certo.

12:43.800 --> 12:49.760
Portanto, temos alguns erros aqui, então vamos vê-los.

12:49.950 --> 12:52.570
Oh! e é porque eu fiz ponto

12:52.890 --> 12:57.190
e vírgula aqui, com certeza alguns de vocês estavam assistindo este vídeo e dizendo: por que ele está colocando ponto e vírgula lá?

12:57.270 --> 13:01.990
Eu não gosto de colocar o último. Muito melhor.

13:01.990 --> 13:02.350
Tudo certo.

13:02.350 --> 13:09.170
Portanto, o 'estado' agora está definido com a 'caixa'.

13:09.410 --> 13:12.720
Hummm! mas ver até agora tudo está funcionando.

13:12.800 --> 13:19.610
Voltando ao nosso 'onButtonSubmit', portanto, quando clicamos no botão, queremos calcular a localização

13:19.610 --> 13:28.360
da face com a resposta, esse 'generateFaceLocation' executará essa função, retornará um objeto e esse objeto será

13:30.450 --> 13:34.170
necessário pelo ' método displayFaceBox '.

13:35.220 --> 13:43.450
Então parece que, o que quer que isso retorne, é esse parâmetro 'box'.

13:43.630 --> 13:58.950
Então, para tornar as coisas limpas, podemos apenas imprimir aqui dizendo 'this display FaceBox' e envolver esta função.

13:58.990 --> 14:02.710
Portanto, esse 'calculFaceLocation' recebe uma

14:03.950 --> 14:11.770
resposta, retorna esse objeto e esse objeto retornado agora está entrando em 'displayFacebox'.

14:12.140 --> 14:17.900
Novamente, a beleza do javascript é que, podemos usar funções como essas e lê bem também.

14:17.960 --> 14:23.750
Assim que obtemos a resposta, calculamos a função interna que é 'generateFaceLocation'

14:23.870 --> 14:25.910
e depois 'displayFacebox'.

14:25.960 --> 14:26.880
Deus! esse é

14:26.890 --> 14:28.970
um nome terrível, mas como eu disse por enquanto está tudo bem.

14:29.330 --> 14:29.670
Tudo certo.

14:29.710 --> 14:30.410
Havia muito.

14:30.430 --> 14:33.730
Vamos testar nosso código para garantir que estamos no caminho certo.

14:33.790 --> 14:38.980
Vou 'log do console' aqui, o objeto 'caixa'.

14:39.230 --> 14:44.550
E se voltarmos ao rosto novamente, colado aqui, clique e

14:47.600 --> 14:49.780
abra o console.

14:49.850 --> 14:52.490
Nós temos um objeto.

14:52.820 --> 14:55.100
E tudo bem, temos alguns números.

14:55.340 --> 14:56.330
Isso é bom.

14:56.330 --> 15:04.340
Vamos tentar adicionar um pouco de CSS para que esses números apareçam no rosto. Deve corresponder à largura.

15:04.400 --> 15:14.610
Mas olhando esses números, não parece tão ruim. Se você se lembra, a largura da imagem é de

15:14.610 --> 15:22.120
500 pixels e se a coluna da esquerda tem 131 pixels, provavelmente por aqui, à direita.

15:22.130 --> 15:23.600
E não parece tão ruim.

15:23.700 --> 15:29.790
Novamente, vamos ter algum CSS para verificar isso. Estamos calculando as coisas certas.

15:29.800 --> 15:37.420
Agora, o que queremos fazer é que definitivamente queremos passar esse 'estado da caixa' para o componente 'faceRecognition'.

15:38.140 --> 15:47.640
Então, podemos simplesmente fazer 'box', vai ter 'this' dot 'state' dot 'box'.

15:47.810 --> 15:49.500
E agora no

15:52.840 --> 16:01.910
'FaceRecognition', agora temos um novo suporte, que podemos usar e esse suporte pode ser usado criando um novo 'div'.

16:02.420 --> 16:07.010
E esse 'div' na verdade ficará completamente vazio, porque não estamos exibindo nada além de

16:07.010 --> 16:09.030
uma borda em torno desse 'div'.

16:09.350 --> 16:17.870
Então, o que eu vou fazer é copiar o que o clarifai tem, chamando uma

16:18.650 --> 16:21.410
classe de 'caixa delimitadora'

16:24.370 --> 16:32.490
e vamos criar um novo arquivo CSS 'FaceRecognition. css 'e só para não esquecer, vou importá-lo agora.

16:37.140 --> 16:42.030
E essa classe que tem a 'caixa delimitadora' terá bem,

16:48.790 --> 16:52.540
vejamos o que eles têm aqui.

16:52.940 --> 16:54.740
Vou apenas copiar isso,

16:58.590 --> 16:59.880
colar aqui.

17:02.800 --> 17:06.910
E há algumas coisas que, como você vê, porque são palavras cruzadas, não estão sendo

17:06.910 --> 17:07.490
realmente usadas.

17:07.510 --> 17:10.020
Para que possamos, podemos removê-los.

17:10.030 --> 17:16.270
Você também vê que eles ouvem os prefixos do navegador por enquanto, não estamos muito preocupados com o uso

17:16.270 --> 17:20.880
de outros navegadores, para que possamos excluí-lo. Se você quiser manter as pessoas lá, tudo bem também.

17:25.550 --> 17:27.380
Agora que temos isso, vamos ver o que acontece.

17:27.380 --> 17:29.870
Adicionei a 'caixa delimitadora' ao redor

17:32.650 --> 17:40.270
da 'div' e agora, se você olhar para a classe 'div', também verá que eles adicionaram um estilo, que é o

17:40.270 --> 17:46.650
que podemos querer fazer, com o nosso 'top', Propriedades da caixa 'right', 'bottom', 'left' que acabamos de calcular.

17:46.690 --> 17:48.100
Então vamos fazer isso.

17:48.100 --> 17:53.780
Vou dizer 'estilo' igual a, mais uma vez, retornaremos

17:53.970 --> 18:00.950
um objeto e isso terá 'top' como 'caixa' e não me lembro

18:03.590 --> 18:07.690
do nome, então vamos voltar aqui.

18:09.150 --> 18:12.430
Linha superior esquerda, coluna esquerda, linha superior, coluna direita,

18:12.440 --> 18:13.640
linha inferior.

18:13.940 --> 18:16.810
Vamos ver, se me lembro disso. Coluna

18:17.910 --> 18:22.300
esquerda, Direita será 'caixa' ponto OK.

18:22.320 --> 18:33.370
Definitivamente, não me lembro disso. 'topRow' e, em seguida, será 'bottom', que terá a coluna

18:34.170 --> 18:38.530
direita e a esquerda, a linha inferior.

18:42.930 --> 18:49.470
Quando consigo adicionar a 'caixa' porque são propriedades do objeto caixa.

18:49.710 --> 18:54.220
E você já viu que eu cometi o erro, aqui você vê que, esquerda eu tenho o fundo.

18:54.280 --> 18:56.000
Então, vamos consertar isso.

18:56.140 --> 19:03.210
Queremos que a linha superior seja o 'topRow' aqui.

19:04.590 --> 19:09.500
Queremos que a coluna da direita seja 'coluna da direita (rightCol)'.

19:09.640 --> 19:14.820
E a linha inferior deve ser a 'bottomRow' e,

19:18.180 --> 19:25.480
finalmente, a coluna esquerda (leftcol). Vamos salvar e ver o que acontece.

19:25.500 --> 19:29.600
Quer voltar para o nosso rosto.

19:29.610 --> 19:31.910
Vamos ver se ainda tenho, não, não tenho o link.

19:31.920 --> 19:39.080
Deixe-me copiar e colar.

19:39.080 --> 19:40.430
Olhe para isso.

19:40.430 --> 19:43.170
Está funcionando.

19:43.260 --> 19:46.020
Vamos apenas inspecionar isso e,

19:49.060 --> 19:54.570
antes de tudo, como é legal, fazer com que isso funcione.

19:54.880 --> 19:57.520
E é enrolado perfeitamente no rosto.

19:58.060 --> 20:00.590
Mas eu quero lhe mostrar como eu descobri isso.

20:01.820 --> 20:07.940
Agora, quando eu fiz isso pela primeira vez e novamente estou poupando você por uma hora

20:07.940 --> 20:16.550
tentando entender a matemática por trás disso, eu inicialmente tinha algo em que a caixa estava um pouco fora e tudo o

20:16.550 --> 20:22.210
que fiz foi subir e descer maneira e descobrir onde a caixa deve estar.

20:22.210 --> 20:27.180
E com base nisso olhando para a matemática e dizendo, hmm! OK, então faz sentido que

20:27.220 --> 20:33.610
a coluna da esquerda seja a porcentagem da largura da coluna da esquerda, porque agora

20:33.610 --> 20:40.320
está calculando a largura total vezes a porcentagem de onde a coluna da esquerda deve estar.

20:40.420 --> 20:42.900
E então, digamos, por exemplo, linha inferior, bem,

20:43.090 --> 20:49.810
eu sei que a linha inferior deve começar na parte inferior. Portanto, a porcentagem que recebo da linha de baixo,

20:49.810 --> 20:56.300
multiplico pela altura e, em seguida, tenho que subtraí-la da altura total, porque o cálculo começa do

20:56.300 --> 20:58.430
topo e não do fundo.

21:00.500 --> 21:06.740
Mas você pode brincar com isso e, como pode ver, pressionando as setas para cima e para baixo, pode ajustá-las.

21:06.920 --> 21:10.380
Estou realmente empolgado por termos conseguido isso no primeiro escopo.

21:10.480 --> 21:12.320
Parece incrível apenas

21:12.330 --> 21:22.640
para testar isso, vamos mostrar outra imagem para ver se esta caixa se move com a imagem.

21:22.670 --> 21:27.480
Vamos fazer algo como Brad Pitt.

21:27.660 --> 21:29.050
E eu disse Brad Pitt,

21:29.190 --> 21:30.340
existe um Brat Pitt?

21:30.340 --> 21:30.800
Tudo certo.

21:30.870 --> 21:35.290
Então, uma foto dele para onde ele não está olhando, ele não está morto.

21:36.080 --> 21:37.360
Que tal esta foto.

21:37.390 --> 21:38.950
Este parece bom.

21:39.420 --> 21:40.450
Vamos

21:40.450 --> 21:45.270
selecioná-lo, acessar nosso aplicativo, inseri-lo, detectar.

21:45.340 --> 21:46.430
Bem, como isso é legal?

21:46.480 --> 21:48.280
Está detectando o rosto.

21:48.280 --> 21:48.550
Tudo certo.

21:48.550 --> 21:53.510
Só porque sou muito divertido, vou escolher mais um. Vamos fazer uma caminhada.

21:59.280 --> 22:05.180
Talvez eu faça um alpinista, e vamos ver se eles conseguem detectar esse rosto.

22:05.520 --> 22:06.890
Isso vai ser bem difícil.

22:06.900 --> 22:07.880
Essa é uma imagem bem grande. Vamos ver.

22:12.220 --> 22:12.950
Olha isso.

22:12.970 --> 22:17.180
Ele detecta um rosto, mesmo sendo muito pequeno, ele

22:17.200 --> 22:18.540
o detecta.

22:18.580 --> 22:20.020
Isso é muito, muito legal.

22:23.400 --> 22:28.820
Tudo certo. Quero enfatizar aqui que fiz parecer muito, muito fácil.

22:28.980 --> 22:35.820
E um dos mitos que eu realmente quero rebentar aqui é que, como desenvolvedor ou apenas porque alguma experiência

22:35.820 --> 22:41.580
não significa que eu possa fazer isso rapidamente. Definitivamente pratiquei isso e certifiquei-me de não

22:41.580 --> 22:47.970
perder seu tempo enquanto você assiste a este vídeo. E que mantenho os erros e, se faço algo por engano, faço intencionalmente para

22:47.970 --> 22:48.920
mostrar um ponto.

22:50.560 --> 22:56.140
Mas, como eu disse, levei um tempo para descobrir como essa caixa funciona, principalmente porque eu tinha que

22:56.140 --> 22:59.750
fazer um pouco de matemática e ver como o 'clarifai' funciona.

22:59.900 --> 23:06.800
Mas o poder vem simplesmente com a resposta que obtemos dele. Usando esta resposta, agora posso adicionar qualquer

23:07.310 --> 23:08.800
coisa aqui.

23:08.870 --> 23:12.640
Talvez eu queira substituir isso por um emoji como um emoticon de rosto sorridente.

23:12.680 --> 23:13.660
Isso é fácil de fazer.

23:13.670 --> 23:17.320
É simplesmente adicionar um estilo CSS.

23:17.530 --> 23:19.840
E apenas para garantir que isso seja responsivo.

23:20.030 --> 23:20.400
Sim.

23:20.510 --> 23:23.060
Tudo funciona lindamente.

23:24.870 --> 23:30.330
Agora você tem um aplicativo que pode ser exibido para seus amigos. Mas há algumas outras coisas que

23:30.750 --> 23:34.500
quero corrigir antes de começarmos a trabalhar no back-end.

23:34.660 --> 23:41.350
Ou seja, quero garantir que o recurso 'sair' funcione e que tenhamos um formulário 'entrar'.

23:41.490 --> 23:44.820
Então, no próximo vídeo, vamos fazer exatamente isso.

23:44.820 --> 23:45.650
Vejo você nesse.
