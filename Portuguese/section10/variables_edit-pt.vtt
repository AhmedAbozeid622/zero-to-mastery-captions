WEBVTT

00:01.350 --> 00:05.940
Bem vindo de volta! Até este ponto, brincamos com alguns tipos de JavaScript.

00:06.040 --> 00:09.250
Apenas 3 de 7. Não se preocupe, nós vamos chegar ao resto deles.

00:09.400 --> 00:12.040
Mas há um problema.

00:12.040 --> 00:15.070
Como o programa lembra as coisas?

00:16.050 --> 00:25.770
Por exemplo, se escrevermos "Esses pretzels estão me deixando com sede".

00:26.850 --> 00:28.350
E faremos isso.

00:28.350 --> 00:30.350
"+" Precisamos da exclamação "!".

00:30.390 --> 00:31.040
ESTÁ BEM.

00:31.620 --> 00:32.540
Eu entro nisso.

00:32.700 --> 00:34.100
ESTÁ BEM. Entendi. Isso é bom.

00:34.110 --> 00:36.750
Mas se eu precisar usar isso de novo.

00:36.940 --> 00:42.300
Bem. Mais uma vez eu tenho que escrever "Estes pretzels

00:44.630 --> 00:47.980
estão me deixando com sede ".

00:49.060 --> 00:52.870
E imagine se tiver que fazer isso centenas de vezes.

00:53.020 --> 00:55.160
Isso é meio chato né?

00:55.180 --> 01:00.560
Isso é - os computadores devem nos ajudar, mas em vez disso continuamos escrevendo coisas e continuamos escrevendo coisas.

01:00.580 --> 01:02.990
E isso não é muito eficiente, é?

01:04.070 --> 01:07.100
Bem para pegar e segurar valores

01:07.100 --> 01:15.630
JavaScript tem algo chamado de variável. E as variáveis ​​podem ser usadas

01:16.880 --> 01:18.870
com a palavra 'var'.

01:19.200 --> 01:34.590
Então, agora, se eu for 'var george', então 'var george = "Esses pretzels estão me deixando com sede"'

01:35.620 --> 01:36.580
mais [+] "!".

01:39.900 --> 01:44.470
Observe o 'ponto-e-vírgula' aqui - explicarei o que isso faz daqui a pouco.

01:44.520 --> 01:46.850
Eu pressiono 'Enter'. Eu fico "indefinido".

01:46.850 --> 01:48.140
Não vamos nos preocupar com isso.

01:48.210 --> 01:49.610
Isso não importa por enquanto.

01:49.800 --> 01:57.000
E agora, se eu for "george", você verá que o Google Chrome realmente me ajuda e reconhece isso.

01:57.090 --> 01:58.260
Eu pressiono 'Enter'.

01:58.650 --> 02:03.250
"Esses pretzels estão me fazendo ficar com sede!". Quão incrível é isso?

02:03.960 --> 02:06.250
Então, podemos armazenar esse valor.

02:07.110 --> 02:12.510
E obviamente isso é simples, mas imagine, esse foi um longo cálculo que tivemos que fazer e queremos

02:12.510 --> 02:13.330
para acessá-lo.

02:13.380 --> 02:17.180
Bem, tudo o que precisamos fazer agora é 'george'.

02:17.190 --> 02:18.840
É uma variável.

02:18.870 --> 02:25.490
Então, agora você vê no último vídeo quando eu disse que quando estamos comparando as coisas, temos que usar '==='

02:25.850 --> 02:34.850
Bem, quando você faz '3 = 3' está dizendo:'Atribuir o número 3 a 3'.

02:35.100 --> 02:38.280
Mas há uma regra com variáveis. Com variáveis

02:38.420 --> 02:47.180
você não pode começar com números. Então, se eu for 'var 3 = 3', recebo um erro.

02:47.360 --> 02:53.790
Mas se eu for 'var three = 3', bem, isso não é problema.

02:54.200 --> 02:57.960
E as variáveis ​​têm algumas regras.

02:58.910 --> 03:03.710
As regras são:Bem, precisa começar com uma carta.

03:03.710 --> 03:11.550
Pode terminar com um número, tudo bem, mas precisa começar com a letra e não pode começar com um símbolo.

03:11.660 --> 03:22.030
Então eu posso fazer 'var & hello = 5'. Agora vou pegar um erro.

03:22.040 --> 03:28.480
Então, uma variável precisa começar com a letra, pode terminar em um número, tudo bem.

03:28.700 --> 03:37.140
E há alguns outros casos especiais. Uma variável também pode começar com um '$' ou '_'.

03:37.520 --> 03:42.950
Mas não precisamos nos preocupar muito com isso e com o padrão e o JavaScript, para que você não tenha

03:42.950 --> 03:43.400
erro.

03:43.430 --> 03:52.610
Se isso acontecer, mas você faz algo chamado "caso de camelo". Então, se fosse uma palavra, digamos "nome", você

03:52.710 --> 03:56.660
'camelo case', porque estas são duas palavras separadas. Você faz minúsculas

03:56.690 --> 04:01.120
a primeira palavra. Segunda palavra vai ter letras maiúsculas.

04:01.160 --> 04:08.200
Então, 'firstName'. Você capitalizou a primeira letra e isso é chamado de 'caso de camelo'.

04:08.200 --> 04:16.030
Então, ainda não entendendo quais são as variáveis? Bem, vou demonstrar este ponto ainda mais

04:16.030 --> 04:20.620
e por que precisamos armazenar valores em uma linguagem de programação.

04:20.620 --> 04:28.210
Vou apresentá-lo a um pequeno truque chamado 'prompt'. E 'prompt ()', quando eu uso esses colchetes

04:29.710 --> 04:30.920
e eu pressiono 'Enter' ...

04:31.570 --> 04:32.520
Olhe para isso.

04:32.630 --> 04:37.470
Eu tenho algo aqui e está pedindo por algo e pressione OK.

04:37.610 --> 04:38.790
E olha isso!

04:38.930 --> 04:40.380
Ele retorna tudo o que eu digitei.

04:40.550 --> 04:42.680
Vamos tentar de novo. Se eu for 'prompt ()',

04:43.700 --> 04:47.030
pressione 'Enter' e diga 'Olá', pressione 'OK'.

04:48.240 --> 04:49.840
Eu recebo essa resposta de volta.

04:50.210 --> 04:50.420
ESTÁ BEM.

04:50.430 --> 04:55.430
Então, como podemos dizer algo como "Qual é o seu nome de usuário?" e armazenar esse valor?

04:55.470 --> 05:02.790
Isso é algo que usamos bastante em sites, certo? Bem, com 'prompt' você pode fazer 'prompt ()'.

05:02.790 --> 05:11.930
Então aqui vamos dizer "Qual é o seu nome de usuário".

05:12.000 --> 05:13.890
Então estamos entrando na string aqui.

05:14.160 --> 05:17.380
E se eu pressionar 'Enter'.

05:17.510 --> 05:20.000
OK, então diz "Qual é o seu nome de usuário".

05:20.000 --> 05:28.880
Então agora, se eu digitar meu nome de usuário é "andrei", eu recebo o 'username'. Então, usando esse conhecimento,

05:29.080 --> 05:33.940
vamos fazer uma calculadora. Vamos fazer 'var first = prompt ()'

05:38.420 --> 05:40.310
"insira o primeiro número"

05:43.120 --> 05:49.840
E então eu 'Enter' pressionou 'Shift' aqui, para que eu possa adicionar uma nova linha. Então, 'Shift', 'Enter' e eu vou dizer

05:50.680 --> 05:54.840
'var second = prompt ()'

05:58.060 --> 06:00.710
"insira o segundo número"

06:04.550 --> 06:14.580
Agora, se eu pressionar 'Enter', eu vou 'entre primeiro número'. Eu direi '5', pressione OK, depois 'insira o segundo número' e eu

06:14.580 --> 06:17.460
diga '10' e pressione OK.

06:19.210 --> 06:19.430
ESTÁ BEM.

06:19.450 --> 06:21.970
Mas agora eu tenho 'indefinido'.

06:22.330 --> 06:23.730
Mas aqui está a coisa legal.

06:23.750 --> 06:31.470
Agora eu tenho esses valores mantidos nessas variáveis, então eu posso usá-los. Se eu marcar 'primeiro',

06:31.510 --> 06:35.260
Eu tenho "5"; se eu marcar 'segundo',

06:35.480 --> 06:37.080
Eu tenho "10".

06:37.340 --> 06:39.810
Mas você notará que eu tenho aspas duplas [""] ao redor deles.

06:39.980 --> 06:46.230
E isso porque o 'prompt' automaticamente muda para String, ele está esperando uma forma de texto.

06:46.280 --> 06:50.540
Então, há um truque para mudar uma String em um número.

06:50.730 --> 06:56.960
E tudo o que precisamos fazer e isso é apenas a sintaxe que precisamos lembrar é 'Número (primeiro)'.

06:59.640 --> 07:00.730
E isso nos dará '5'.

07:00.900 --> 07:21.280
Então tudo o que precisamos fazer agora é fazer 'Number (first) + Number (second)'. E nós vamos obter a soma destes dois.

07:21.310 --> 07:23.530
Mas, novamente, podemos usar uma variável aqui.

07:23.530 --> 07:25.260
Eu não quero continuar digitando isso.

07:25.270 --> 07:33.400
E se eu fizer 'var sum = Number (primeiro) + Number (second);'

07:33.640 --> 07:39.340
Pressione Enter'. Nada ainda, porque está na soma agora.

07:40.740 --> 07:45.410
Então, se eu pedisse 'sum, recebo' 15 '.

07:45.510 --> 07:45.720
ESTÁ BEM.

07:45.720 --> 07:50.340
Então, vamos escrever nosso primeiro programa aqui.

07:50.520 --> 07:54.800
Vou mostrar-lhe outro truque legal e isso é "alerta".

07:54.810 --> 08:01.710
Então, ao invés de 'prompt', vamos usar 'alerta'. E 'alerta ()'.

08:01.720 --> 08:04.600
O que ela faz é - diz "oi ai!"

08:08.330 --> 08:14.510
Se eu pressionar 'Enter', eu recebo um pop-up, mas sem nada para entrar, apenas um botão 'OK'.

08:14.530 --> 08:18.550
Então, usando isso, podemos criar uma calculadora.

08:18.730 --> 08:19.870
Então vamos fazer isso.

08:19.900 --> 08:25.960
E no Chrome, se você realmente apertar '†', você se lembrará da sua história e poderá

08:25.960 --> 08:27.080
você digitou.

08:27.250 --> 08:31.410
Então você lembra aqui que temos 'primeiro', 'segundo'.

08:31.500 --> 08:47.420
Então, esses são os dois "prompt" e então eu vou dizer "var sum = Number (first) + '

08:48.850 --> 08:54.200
'Número (segundo);'

08:54.230 --> 08:58.680
E, finalmente, novamente eu faço 'Shift', 'Enter', para que o código não seja executado.

08:58.880 --> 09:03.330
E eu faço 'alerta (soma)'.

09:03.390 --> 09:06.570
Apenas olhando para isso, o que você acha que vai acontecer?

09:06.580 --> 09:12.990
Eu pedi primeiro um 'prompt' e armazenei esse valor em 'first'; o segundo 'prompt' pediu um 'segundo' número.

09:13.030 --> 09:14.590
Armazena no 'segundo'.

09:14.590 --> 09:18.840
A 'soma' calcula os dois números e depois 'alerta' a 'soma'.

09:19.030 --> 09:20.730
Eu vou pressionar 'Enter' e ver o que acontece.

09:22.460 --> 09:24.730
Digite o primeiro número. Eu vou dizer '15'.

09:25.160 --> 09:29.010
ESTÁ BEM. Próximo número. Eu vou dizer '20'.

09:29.030 --> 09:30.460
ESTÁ BEM.

09:30.510 --> 09:31.710
E olha isso!

09:31.830 --> 09:36.460
Eu tenho '35' como a resposta.

09:36.560 --> 09:42.660
E novamente, sabendo o que sabemos sobre Strings e Numbers, eu posso fazer agora -

09:42.660 --> 09:46.750
mais uma vez eu pressionei '†' 'para ter exatamente o que eu escrevi de volta,

09:46.770 --> 09:57.950
Agora eu posso dizer dentro do 'alerta' ("A soma é:" + soma); '.

09:58.010 --> 10:08.750
Vamos ver isso. Se eu pressionar 'Enter', eu irei '3 + 4'. 'A soma é:7'. Olhe para isso! Nosso primeiro programa.

10:09.380 --> 10:18.720
Variáveis ​​podem conter qualquer tipo de JavaScript. Pense neles como pequenas gavetas na sua mesa.

10:18.720 --> 10:25.830
Então, em sua mesa, você pode abrir essa gaveta e colocar o que quiser lá:suas canetas, papel, borrachas,

10:25.830 --> 10:29.630
calculadoras e você pode fechar essa gaveta.

10:29.670 --> 10:34.680
E sempre que precisar, uma caneta ou uma calculadora, você pode abrir essa gaveta e agarrá-la.

10:34.680 --> 10:37.210
E é isso que são variáveis.

10:37.400 --> 10:44.950
Agora, a única coisa que eu omiti e não lhe contei é esse pequeno ponto-e-vírgula estranho aqui.

10:44.990 --> 10:46.430
Por que precisamos disso?

10:46.430 --> 10:55.640
Quer dizer, fomos capazes de fazer '3 + 4' e não vimos um 'ponto-e-vírgula'. Bem, em JavaScript

10:55.640 --> 11:00.930
'ponto-e-vírgula' significa o fim de uma expressão.

11:00.960 --> 11:02.870
Então, o que isso significa?

11:03.860 --> 11:11.850
Um fragmento de código que produz um valor é chamado de 'expressão'. Então, qualquer valor escrito realmente

11:11.850 --> 11:12.550
é uma "expressão".

11:12.570 --> 11:20.910
Então, se eu fizer '3', bem, isso é uma 'expressão', isso produz um valor. '3 + 4' é uma 'expressão'. Dentro

11:20.910 --> 11:21.930
JavasScript

11:21.990 --> 11:25.820
a regra é - e há algumas pessoas que não usam mais o ponto-e-vírgula.

11:25.830 --> 11:33.080
Mas o modo como foi construído e a maneira com que ele deve funcionar é fazer '3 + 4' adicionar um 'ponto-e-vírgula'.

11:33.270 --> 11:37.140
Na maioria das vezes, se você esquecer, ainda funcionará.

11:37.180 --> 11:39.950
Há apenas pequenos casos em que vou quebrar o seu programa.

11:40.020 --> 11:47.010
Mas apenas para formar bons hábitos por agora, no final de cada expressão, então é algo que fizemos

11:47.010 --> 11:50.890
até agora, adicione um ponto e vírgula e você se acostumará com isso.

11:52.710 --> 12:01.600
ESTÁ BEM. Vamos continuar com variáveis, porque elas são muito interessantes. E se eu fizer 'var a = true'?

12:02.090 --> 12:06.060
Porque lembre-se que as variáveis ​​podem conter qualquer coisa.

12:06.380 --> 12:15.500
Assim, as variáveis ​​podem conter Booleanos e as variáveis ​​podem conter Strings, e as variáveis ​​podem conter o Numbers, como vimos.

12:15.500 --> 12:17.610
Então, vamos apenas segurar 'var a = true'.

12:17.650 --> 12:22.170
Mas agora e se eu -

12:22.560 --> 12:27.360
Bem, eu posso acessar 'a', mas e se eu disser 'a = "Hello"?'

12:27.710 --> 12:35.300
O que você acha que acontecerá se eu pressionar 'a' e depois 'Enter'?

12:35.300 --> 12:46.710
Bem, eu recebo "Hello", porque você pode reatribuir um valor para 'a', porque inicialmente o programa pensava 'a' é igual a 'true'.

12:46.720 --> 12:49.770
Mas então nós dissemos:'Bem,' a '=' Olá 'agora'.

12:49.810 --> 12:58.810
Por isso, descartou o valor "verdadeiro" e agora "a" é igual a "Olá" e esquecemos completamente do "verdadeiro"

13:00.340 --> 13:01.040
ESTÁ BEM.

13:01.390 --> 13:02.710
Outro pequeno truque.

13:02.770 --> 13:06.940
O que acontece se eu for assim? [var a;]

13:06.940 --> 13:08.420
Isso funciona ou receberei um erro?

13:08.470 --> 13:11.740
Vamos ver.

13:11.890 --> 13:12.490
ESTÁ BEM. 'Indefinido'.

13:12.490 --> 13:14.530
Eu não peguei aquela barra vermelha, nenhum erro.

13:14.560 --> 13:18.010
ESTÁ BEM. E se eu acessar o 'a', vamos ver o que acontece.

13:18.010 --> 13:24.880
Bem "Olá" foi atribuído na última parte. Vamos fazer uma variável diferente. Então, se eu fizer variável 'b', que

13:24.880 --> 13:31.860
nós não usamos antes. E eu faço isso Vamos ver se podemos acessá-lo. 'Indefinido'.

13:32.000 --> 13:44.110
'b' é indefinido. E você pode ter notado isso antes, mas 'indefinido' é o nosso quarto tipo em JavaScript. E

13:44.110 --> 13:50.920
Eu sei que é estranho, porque você está se perguntando "O que é 'indefinido'?" E 'indefinido' é apenas um

13:51.160 --> 13:54.630
coisa em JavaScript. Como o nome sugere,

13:54.640 --> 13:57.600
isso significa que a variável não foi atribuída.

13:58.090 --> 14:07.240
Então, pense nisso como você vai ficar "indefinido" se variável 'senha' é assim.

14:07.270 --> 14:15.760
Então, se um usuário não colocar uma 'senha', você ficará 'indefinido' e poderá dizer 'Bem' senha '

14:15.760 --> 14:16.750
está indefinido ".

14:16.810 --> 14:20.750
Você precisa digitar uma "senha" ou talvez um formulário exija um endereço de e-mail.

14:20.750 --> 14:30.250
Bem, se o email for "indefinido", você não poderá assiná-lo no formulário. Então 'indefinido' é usado quando nada

14:30.250 --> 14:33.750
é atribuído a uma variável.

14:33.770 --> 14:38.740
Então lembre-se disso, assim como você tira as coisas da gaveta da sua mesa e coloca outra coisa

14:38.740 --> 14:43.490
Em, variáveis ​​podem ser atribuídas a coisas diferentes.

14:43.490 --> 14:51.730
Eu posso mover minha caneta de uma gaveta para outra, posso mudar as coisas naquela gaveta e se não houver nada

14:51.730 --> 14:52.560
nessa gaveta,

14:52.600 --> 14:56.400
bem, é "indefinido". ESTÁ BEM.

14:56.880 --> 14:59.370
Esse é um conceito muito grande em JavaScript.

14:59.370 --> 15:04.100
Espero que você entenda. Eu tenho alguns exercícios para você no final deste vídeo.

15:04.110 --> 15:05.720
Eu sei que você consegue!

15:05.730 --> 15:08.870
Boa sorte! E até o próximo vídeo.

15:08.940 --> 15:09.150
Tchau tchau
