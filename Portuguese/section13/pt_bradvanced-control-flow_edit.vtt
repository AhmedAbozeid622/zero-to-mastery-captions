WEBVTT

00:01.010 --> 00:09.890
Até esse ponto, aprendemos a instrução 'if', a instrução

00:09.890 --> 00:17.660
'if else' e a instrução 'else if'.

00:17.660 --> 00:19.660
Então, vamos abordar isso hoje.

00:20.060 --> 00:24.190
Como você pode ver, temos mais dois para superar, mas não tenha medo.

00:24.290 --> 00:27.360
Estes não vão introduzir nada de novo.

00:27.360 --> 00:33.170
Existem apenas maneiras diferentes de executar o fluxo de controle, mas elas não farão nada que uma instrução simples se

00:33.330 --> 00:34.560
else não possa fazer.

00:34.940 --> 00:43.790
No entanto, há casos em que será muito mais fácil fazer esses dois, se fizermos algo com a

00:43.790 --> 00:45.490
declaração 'if else'.

00:45.920 --> 00:47.330
Então, vamos vê-los.

00:47.360 --> 00:50.870
A primeira coisa que vamos falar é sobre o 'operador ternário'.

00:50.870 --> 00:56.150
Parece algo assim, 'condição?

00:58.740 --> 01:02.310
'expressão um (expr1) ou expressão dois (expr2).

01:06.230 --> 01:10.820
E essa é a sintaxe. Diz: Isso é verdadeiro ou falso?

01:11.000 --> 01:14.790
Se for verdade, forneça esse valor (expr1).

01:15.170 --> 01:17.870
Se for falso, forneça esse valor (expr2).

01:18.230 --> 01:27.260
Deixe-me mostrar um exemplo disso, terá uma função chamada 'isUserValid' que aceita um booleano

01:29.570 --> 01:34.190
(booleano) e retornará apenas o valor booleano.

01:36.190 --> 01:48.670
Agora, aqui dentro, podemos dizer que a resposta variável é igual a 'isUserValid' e dizer 'true' para agora o ponto de interrogação

01:48.670 --> 01:50.090
(? )

01:50.290 --> 01:54.820
Portanto, se isso for verdade, direi 'Você pode

01:58.300 --> 02:03.630
entrar', caso contrário, direi 'Acesso negado'. Deixe-me diminuir um pouco

02:03.850 --> 02:06.600
para que você possa ver.

02:06.820 --> 02:12.790
Então, novamente, tudo o que estamos dizendo é que, se isso é verdade, faça esta expressão ("Você pode inserir").

02:12.790 --> 02:15.960
Se isso for falso, faça esta expressão ("Acesso negado").

02:16.110 --> 02:19.300
Então, basta copiar isso no console e ver o que acontece.

02:21.520 --> 02:27.780
Se eu executar 'anwer', oops, soletro errado, 'responda'.

02:28.790 --> 02:33.570
Eu recebo 'Você pode entrar' porque o usuário é válido (isUserValid)

02:33.580 --> 02:34.600
é verdadeiro.

02:34.640 --> 02:47.030
Agora, se eu mudei para dizer 'falso', nesse caso, receberei 'Acesso negado' Vamos fazer uma resposta um pouco

02:47.030 --> 02:49.040
mais complicada.

02:49.100 --> 02:58.870
Podemos dizer a variável (var) 'automaticAnswer' e podemos fazer isso em uma nova linha apenas

02:59.050 --> 03:08.880
para que você possa ver 'O número da sua conta é', 'isUserValid' e diremos apenas algo como.

03:08.880 --> 03:10.140
'falso' por enquanto.

03:10.140 --> 03:16.680
Então, como temos esses colchetes, teremos uma expressão aqui que podemos avaliar para dizer que

03:16.680 --> 03:18.990
o usuário (isUserValid) é válido.

03:19.020 --> 03:23.280
Se o usuário for válido, dirá '1234'.

03:23.420 --> 03:28.940
Caso contrário, diremos 'não disponível'.

03:31.780 --> 03:37.830
Se copiarmos e colarmos isso aqui, em nosso console, e podemos vê-lo melhor.

03:37.870 --> 03:39.880
Vemos, se o usuário

03:39.880 --> 03:42.610
é válido (verdadeiro) Queremos dizer '1234'.

03:42.640 --> 03:45.070
Se não estiver, então 'não disponível'.

03:45.070 --> 03:54.490
Portanto, se eu executar isso e agora olhar para a resposta automatizada, recebo 'O número da sua conta não está disponível', porque esse

03:54.700 --> 03:56.920
valor de usuário é 'falso'.

03:56.920 --> 04:08.190
Mas, se eu for "verdadeiro", nesse caso, o número da sua conta será "1234".

04:08.210 --> 04:14.120
Agora você pode notar que, na verdade, isso não é tão

04:14.120 --> 04:18.170
diferente de se você fez, 'condição de

04:21.600 --> 04:27.260
função' foi chamada de condição e dirá 'se isUserValid' retornar.

04:27.290 --> 04:28.490
'Você

04:31.510 --> 04:33.670
pode digitar'

04:36.450 --> 04:55.330
e você 'else' 'retornou Acesso negado' nesta função por aqui, 'condition', se eu disser a variável (var) 'answer2' igual a 'condition'.

04:55.570 --> 04:56.790
Vamos ver o que acontece.

04:59.380 --> 05:09.680
Copie esses dois, execute-os e agora, se eu olhar para a 'resposta' recebo 'Você pode entrar' se eu receber a

05:09.690 --> 05:13.120
'resposta2' eu recebo 'Você pode entrar'.

05:13.290 --> 05:18.280
Agora é exatamente a mesma coisa, além de um pouco de erros de ortografia da minha parte.

05:19.630 --> 05:28.710
Mas você vê que uma maneira é muito melhor, é apenas uma linha simples e agradável. Um operador ternário é realmente muito bom para esses

05:28.710 --> 05:36.060
"se mais", onde há uma verificação de uma condição e há duas expressões possíveis, que surgem

05:36.060 --> 05:36.790
dela.

05:38.410 --> 05:44.350
Tudo bem, vamos aprender, o próximo, que é a declaração 'switch'.

05:45.390 --> 05:46.290
Este é o mais divertido.

05:47.350 --> 05:49.750
Portanto, uma declaração s'witch se parece com isso.

05:49.770 --> 05:53.980
E podemos criar um jogo simples agora para demonstrar como ele funciona.

05:54.070 --> 05:58.720
Posso dizer a função 'moveCommand'.

05:59.350 --> 06:05.120
E diremos que ele aceita o parâmetro 'direction' dentro desta função.

06:05.130 --> 06:12.790
Direi a variável (var) 'whatHappens' e diremos 'switch'.

06:12.810 --> 06:13.850
Observe que é uma palavra-chave.

06:13.850 --> 06:16.140
Agora está destacado em vermelho.

06:16.160 --> 06:19.000
E eu direi 'direção'.

06:19.160 --> 06:23.790
A instrução 'switch' aceitará 'direction' e verificará 'direction'.

06:25.430 --> 06:37.600
E aqui dentro vamos dizer 'case' 'forward', que significa verificar 'direction' se 'direction' for igual a 'forward',

06:37.820 --> 06:42.410
então 'whatHappens' é igual a 'Você

06:42.900 --> 06:45.210
encontra um monstro;'

06:48.490 --> 06:49.360
'quebrar;'.

06:49.390 --> 06:54.750
Explicarei mais 'quebra' logo após terminar o restante das declarações de caso.

06:54.790 --> 07:01.210
Portanto, as instruções de caso, como você pode ver, são realmente boas, porque eu posso copiar e colar.

07:01.470 --> 07:14.550
E agora eu posso dizer aqui, vamos dizer 'voltar' e se a direção for 'voltar', diremos 'Você chegou

07:14.550 --> 07:29.320
em casa' se a direção for 'certa'; nesse caso, diremos 'Você encontrou um rio' e se a "direção" for "deixada", diremos

07:30.670 --> 07:34.050
"Você encontra um troll".

07:35.280 --> 07:39.930
E, finalmente, diremos 'padrão' 'whatHappens'

07:43.330 --> 07:49.840
é igual a 'por favor, insira uma direção válida'.

07:52.740 --> 07:58.530
E terminaremos com um 'retorno' 'whatHappens'.

07:58.530 --> 07:58.950
Tudo certo.

07:58.950 --> 08:01.170
Isso foi muito código.

08:01.170 --> 08:06.080
Vamos executar este comando primeiro e depois explicaremos exatamente o que está acontecendo.

08:06.090 --> 08:07.030
Copie o código.

08:08.000 --> 08:10.160
Copie para o console.

08:10.160 --> 08:11.760
E agora temos

08:11.840 --> 08:22.300
o 'moveCommand'. E se você se lembra do último vídeo, 'moveCommand' agora existe no escopo raiz, que é a janela, portanto aqui dentro.

08:22.330 --> 08:31.860
Digamos apenas 'avançar', agora, se eu executar isso, recebo 'Você encontrou um monstro'.

08:32.030 --> 08:36.640
Se eu voltar, você chegou em casa.

08:36.640 --> 08:40.320
Se eu for 'certo', 'Você encontrou um rio'.

08:40.690 --> 08:51.070
Se eu for 'esquerda', 'Você corre para um troll' e se eu escrever bobagens, eu entendo.

08:51.090 --> 08:53.000
'Digite uma direção válida'.

08:53.980 --> 08:58.510
É para isso que as declarações de switch são realmente boas quando você tem muitas condições.

08:58.510 --> 09:07.470
Em vez de usar uma declaração 'if else', 'if else', 'if else', 'if else', 'if else', você pode usar uma declaração 'switch' e

09:08.070 --> 09:10.710
pode ver que ela lê bem.

09:10.710 --> 09:16.760
Essencialmente, o que está dizendo é criar a variável 'whatHappens' e depois mudar.

09:16.770 --> 09:23.660
Quero que você verifique qual seja a condição, seja qual for a variável, nesse caso, essa é a direção.

09:23.970 --> 09:30.190
E, no caso, a direção é igual a 'avançar', no caso, a direção é 'voltar', fazer isso.

09:30.240 --> 09:33.810
Se estiver "certo", faça isso, se estiver "esquerdo", faça isso.

09:33.810 --> 09:42.060
E ele diz que "padrão" é se nenhuma dessas condições funcionar e lembre-se de que o programa segue linha por linha, para

09:42.060 --> 09:46.260
verificar "adiante", depois verificar "voltar" e verificar "direita" e verificações "esquerda".

09:46.280 --> 09:53.940
E se nada disso coincidir, ele diz que você pode simplesmente usar como padrão 'por favor, digite uma direção

09:53.940 --> 09:59.700
válida' e, em seguida, retornamos 'whatHappenes', para que a função retorne algo para nós.

09:59.710 --> 10:05.460
Agora, finalmente, o que é o 'break' bem, o (a) break (s) simplesmente

10:06.850 --> 10:12.260
diz: Se 'case' for 'forward', atribua 'você encontra um monstro' à

10:12.280 --> 10:18.620
variável 'whatHhappens' e, em seguida, 'break', 'break' é apenas dizendo quebrar a declaração do interruptor.

10:18.640 --> 10:24.720
Portanto, em vez do programa, verifique se 'case' está 'back', 'case' está 'right', 'case' está 'left' ou 'default'.

10:24.850 --> 10:33.550
Se dissermos 'pausa', o programa para aqui e sai direto da instrução switch para retornar

10:33.910 --> 10:34.870
'whatHappens'.

10:35.140 --> 10:46.830
Então, se eu realmente 'quebrar' antes de 'whatHappens', 'você encontrar um monstro' e eu copiar isso e vamos

10:49.680 --> 10:58.820
executar novamente a função, diremos que 'moveCommand' é 'forward' observe o que acontece agora.

10:59.840 --> 11:06.930
Fico 'indefinido' porque interrompemos o programa, dizendo: Ah, sim!

11:07.320 --> 11:14.010
Ele digitou 'forward', mas antes que possamos atribuir algo à variável, digo

11:14.040 --> 11:21.530
'break', saio da instrução switch e retorno 'whatHappens', que só foi declarado, mas não atribuído.

11:21.530 --> 11:26.630
Então, acabei de retornar 'indefinido'.

11:26.680 --> 11:32.530
Tudo bem, você tem, seus dois outros condicionais e você cobriu todos eles em javascript.

11:32.530 --> 11:39.710
Agora, cada um é bom para o seu caso individual, mas todos são muito úteis.

11:39.760 --> 11:41.470
Vejo você no próximo
Tchau tchau.
