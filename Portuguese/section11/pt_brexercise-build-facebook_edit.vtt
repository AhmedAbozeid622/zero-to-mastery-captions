WEBVTT

00:00.890 --> 00:08.310
Olá! Bem vindo de volta. Neste vídeo, vamos combinar tudo o que aprendemos para

00:08.310 --> 00:10.540
mostrar por que o JavaScript é útil.

00:10.620 --> 00:18.380
Porque sei que alguns de vocês estão pensando: OK, aprendemos várias maneiras novas de escrever JavaScript e sobre

00:18.390 --> 00:25.120
matrizes e objetos, mas não sei realmente como isso se relaciona comigo na criação de

00:25.120 --> 00:27.560
sites ou aplicativos da Web.

00:28.110 --> 00:34.280
Bem, eu vou lhe mostrar que podemos construir uma versão simplificada do Facebook com o que acabamos de aprender.

00:35.240 --> 00:36.510
Então vamos começar.

00:36.830 --> 00:43.010
Nós vamos ter um banco de dados com nomes de usuário e senhas. Vamos ter um 'feed de notícias'

00:43.010 --> 00:44.780
e teremos usuários.

00:44.840 --> 00:51.020
Então, vamos começar pensando em como o Facebook funciona. Com o Facebook, geralmente temos um

00:51.020 --> 00:55.420
formulário de inscrição. Precisamos fazer login.

00:56.000 --> 01:03.330
E depois que entramos, se estiver correto, ele acessa o nosso perfil, onde podemos ver o nosso 'feed de notícias'.

01:03.380 --> 01:10.180
Então, vamos construir isso. Podemos começar com algo chamado 'banco de dados'.

01:10.180 --> 01:12.520
Portanto, teremos uma variável 'banco de dados'.

01:12.520 --> 01:16.810
E neste 'banco de dados', podemos ter vários usuários.

01:16.810 --> 01:17.230
Direita?

01:17.350 --> 01:23.210
Então, o que precisamos aqui? Precisamos de uma matriz - uma lista de usuários.

01:23.230 --> 01:24.790
Então agora posso dizer que

01:28.110 --> 01:36.000
tenho um 'nome de usuário' e isso pode parecer familiar nas lições anteriores. Temos um 'nome de

01:37.140 --> 01:42.740
usuário' de 'andrei' e uma 'senha' de 'supersecret'.

01:42.800 --> 01:46.700
Por enquanto, vamos apenas deixar isso para um usuário.

01:46.700 --> 01:50.670
Temos um 'banco de dados' e também queremos um 'feed de notícias', certo?

01:50.720 --> 01:56.730
Então, vamos ter uma variável chamada 'newsfeed' e

01:56.740 --> 02:15.350
aqui, um news feed, bem, novamente é uma lista, uma série de notícias. Para que possamos ter um 'nome de usuário' - 'Bobby', que na linha do tempo talvez tenha:

02:15.590 --> 02:26.200
'Tão cansado de todo esse aprendizado! ' Também temos, geralmente temos mais de um item em um 'feed de notícias'.

02:26.200 --> 02:39.330
Podemos dizer que 'nome de usuário', 'Sally'. 'Sally' na linha do tempo acabou de postar 'Javascript é muuuuito legal! '

02:41.660 --> 02:42.240
ESTÁ BEM.

02:42.560 --> 02:53.070
Portanto, temos um 'feed de notícias', que possui uma matriz de objetos e um 'banco de dados', que é uma matriz de apenas um único objeto no

02:53.070 --> 02:55.980
momento: um 'nome de usuário' e 'senha'.

02:56.950 --> 03:01.190
Agora, como podemos criar um formulário de 'entrada'?

03:01.360 --> 03:10.500
Bem, gostaríamos de executar uma ação para verificar as credenciais de um usuário: seu 'nome de usuário' e 'senha'.

03:10.550 --> 03:12.000
Bem, já fizemos isso antes, certo?

03:12.020 --> 03:24.170
Nós usamos 'prompt' antes, aceita a entrada de um usuário. Assim, podemos fazer a variável 'userNamePrompt'. Diremos que é igual

03:24.500 --> 03:29.320
a 'prompt': "Qual é o seu nome de

03:29.680 --> 03:32.310
usuário? " ESTÁ

03:34.500 --> 03:35.370
BEM.

03:35.760 --> 03:36.930
Nós também temos E eu

03:36.930 --> 03:39.300
vou fazer isso menor só para que tudo se encaixe aqui.

03:39.300 --> 03:57.680
Espero que você ainda possa ver. Temos a variável 'passwordPrompt', que é igual a 'prompt ("Qual é a sua senha? ") '?

03:57.680 --> 03:57.680
' ESTÁ BEM.

03:57.860 --> 04:00.970
Então, nós temos esse trabalho.

04:01.250 --> 04:10.590
Quando abrimos este arquivo e atualizamos: o HTML será carregado linha por linha. E nós vemos, oh, nós temos um

04:10.590 --> 04:11.280
roteiro.

04:11.340 --> 04:17.590
Deixe-me carregar o script e, em seguida, o navegador lê linha por linha.

04:17.670 --> 04:19.030
Nós temos um 'banco de dados'.

04:19.260 --> 04:20.500
Temos um 'feed de notícias'.

04:20.970 --> 04:26.930
E então vai dizer 'usernamePrompt' equals 'prompt'. E nos solicitará "Qual é o seu nome de usuário?

04:27.150 --> 04:30.310
"E então nos solicitará" Qual é a sua senha? "Bem,

04:30.460 --> 04:32.400
vamos testar isso.

04:32.490 --> 04:35.410
Vou salvar e atualizar e lá vai você.

04:35.460 --> 04:42.730
"Qual o seu nome de usuário? "-" andrei "e" Qual é a sua senha? "-" sobrescrito ".

04:43.260 --> 04:53.040
Isso é muito bom, mas quando eu faço login, quero saber que minha senha está incorreta ou se eu faço login e

04:53.040 --> 04:54.550
tudo está correto.

04:54.780 --> 04:56.830
Eu quero receber meu 'feed de notícias, certo?

04:57.970 --> 05:05.920
Parece que precisamos executar uma ação, mas realmente não temos uma função de login em JavaScript, temos?

05:05.920 --> 05:10.310
É uma função personalizada, que precisamos construir a nós mesmos.

05:11.110 --> 05:13.080
Então, vamos pensar sobre isso.

05:13.090 --> 05:20.880
Queremos criar uma função chamada 'signIn' e para entrar, o que precisamos?

05:20.980 --> 05:25.800
Bem, precisamos de um 'nome de usuário' e 'senha'.

05:27.410 --> 05:32.450
E podemos nomear estes como quisermos e apenas para provar isso para você, eu apenas vou fazer

05:35.190 --> 05:36.300
'usuário' e 'senha'.

05:36.730 --> 05:39.500
Nós vamos 'passar' assim. ESTÁ BEM.

05:39.530 --> 05:43.610
E se lembrarmos, para criar uma função, esta é

05:43.610 --> 05:48.310
'declaração de função'. Tenho meus colchetes e aqui posso fazer alguma coisa.

05:48.350 --> 05:53.780
Então, novamente, vamos pensar sobre isso logicamente: para entrar, preciso

05:53.800 --> 05:57.300
verificar 'nome de usuário' e 'senha'.

05:57.640 --> 06:08.990
Bem, se a função receber o primeiro argumento 'usuário', posso dizer que 'se (nome de usuário)' - nesse caso, 'usuário' é igual a, bem,

06:10.780 --> 06:12.940
o que é igual?

06:12.950 --> 06:16.820
Você precisa verificar no nosso 'banco de dados', certo?

06:17.310 --> 06:25.770
Nosso 'banco de dados', quando 'andrei' se inscreveu no Facebook, ele colocou seu 'nome de usuário'

06:25.770 --> 06:32.220
e 'senha', então temos essa informação. Então, podemos dizer que, quando você entra, vamos verificar 'user'

06:32.430 --> 06:35.080
para ver se o 'user' corresponde ao 'database'.

06:35.580 --> 06:36.790
E é uma matriz.

06:37.050 --> 06:50.760
Então, vamos pegar o primeiro elemento da matriz e pegar o 'nome de usuário' OK.

06:51.110 --> 06:55.310
E também queremos verificar a 'senha', certo?

06:55.310 --> 06:57.970
Então, o que fazemos quando temos que verificar duas coisas?

06:57.980 --> 07:10.120
Bem, é uma condição, que tem "&amp;&amp;". Então, aqui posso dizer: a 'senha' deve ser igual a 'banco de dados' - primeiro item

07:10.120 --> 07:11.060
da matriz.

07:11.290 --> 07:15.640
E desta vez, em vez de 'nome de usuário', é 'senha'.

07:15.890 --> 07:18.200
Vou colocar isso em uma nova linha apenas para que você possa ver.

07:18.200 --> 07:18.820
Ai está!

07:20.770 --> 07:30.610
Portanto, a função 'signIn' dirá se 'usuário' é igual ao que temos no 'banco de dados': 'nome de usuário' e 'senha' é igual ao

07:30.610 --> 07:36.190
que temos no 'banco de dados'. Se isso estiver

07:36.220 --> 07:48.580
certo, bem, podemos dizer 'console. log ', e diremos -' newsfeed '. Caso contrário, se a 'senha' ou 'nome de usuário' não

07:48.640 --> 07:51.140
estiver correta, diremos apenas 'alerta'.

07:51.550 --> 07:58.890
"Desculpe, nome de usuário e senha incorretos! "Então, nós temos nossa função,

07:58.980 --> 08:06.800
mas isso desapareceu em algum lugar. E nós vamos salvar isso.

08:06.800 --> 08:09.720
E vamos apenas atualizar. ESTÁ BEM.

08:09.930 --> 08:11.470
"Qual é o seu nome de usuário? "Vamos dizer

08:11.520 --> 08:13.680
'andrei" E "Qual é a sua

08:13.790 --> 08:15.290
senha? "Bem,

08:15.410 --> 08:19.750
vamos dizer -" super secreto ". Eu pressionei enter.

08:20.030 --> 08:20.350
ESTÁ BEM.

08:20.360 --> 08:25.660
E agora nada acontece, porque não temos função de retorno de chamada, certo?

08:25.670 --> 08:27.670
Nós apenas sabemos que 'signIn' existe.

08:27.820 --> 08:38.510
Vamos apenas verificar se 'signIn' existe. 'signIn não está definido'. É porque eu soletrei, eu soletrei errado Vamos fazer

08:39.230 --> 08:40.150
'signIn' novamente.

08:40.190 --> 08:43.370
Vamos atualizar. 'andrei' 'supersecret'

08:43.660 --> 08:46.800
E se eu procurar

08:46.950 --> 08:51.370
um 'signIn' agora - existe a função.

08:51.390 --> 09:05.660
Então, vamos executá-lo. Vamos fazer 'signIn'. E nós diremos: 'nomedeusuário Prompt', 'passwordPrompt'.

09:05.810 --> 09:08.450
Olhe para isso. Acabamos de receber nosso 'feed de notícias'.

09:08.690 --> 09:09.320
Isso é muito legal.

09:09.320 --> 09:16.090
Vamos colocar isso lá dentro, para que o script seja executado e, em seguida, obteremos nossa resposta imediatamente.

09:16.280 --> 09:22.230
Então, faremos: 'usernamePrompt' e 'passwordPrompt'.

09:23.110 --> 09:29.780
Agora, apenas para mostrar o que fiz aqui, estou chamando a função 'signIn' que aceita

09:29.890 --> 09:32.410
dois parâmetros: 'user' e 'password'.

09:32.440 --> 09:38.950
Então, quando eu chamo a função, vou apresentar dois argumentos para corresponder a esses parâmetros.

09:38.950 --> 09:43.750
Vou dar a ele o 'nome de usuárioPrompt', que contém tudo o que escrevemos no

09:44.290 --> 09:49.060
primeiro 'prompt' e depois 'passwordPrompt', que contém o que lemos e o segundo 'prompt'.

09:49.060 --> 09:58.630
Então agora, se eu salvar e atualizar, posso dizer "Qual é o seu nome de usuário? "- 'andre', 'password' - 'sobrescrito'.

10:01.270 --> 10:04.930
E olha isso. Agora estou logado e posso

10:04.940 --> 10:10.830
ver que "Bobby" é "Tão cansado de todo esse aprendizado" e "Sally", bem, Sally acha "javascript muito, muito legal".

10:12.240 --> 10:16.480
Vamos também experimentar a declaração 'else', caso atrapalhemos nossas informações.

10:16.530 --> 10:23.580
Pressiono refresh e faço "andrei" e, como senha, faço apenas "1, 2, 3". Vou receber: "Desculpe, nome de usuário e

10:23.580 --> 10:25.990
senha incorretos! " Ai

10:27.640 --> 10:28.740
está.

10:28.780 --> 10:35.620
Criamos um Facebook básico e é isso que é incrível no JavaScript: você olha para sites como o Facebook, que parecem realmente muito

10:35.620 --> 10:41.440
complicados, mas todos são feitos com esses pequenos pedaços. E a funcionalidade que você vê no

10:41.440 --> 10:48.990
Facebook é exatamente isso, quando estamos 'assinando' e eles estão verificando as informações de assinatura em um 'banco de

10:49.000 --> 10:55.060
dados' e, com base em se estamos certos ou errados, obtemos o 'newsfeed' ou, como

10:55.060 --> 10:57.180
sabemos, "Faça login novamente".

10:58.030 --> 11:03.430
E esse é o poder do JavaScript aqui. E é por isso que estou tão

11:03.460 --> 11:09.670
empolgado em ensinar o tópico, porque ele abre uma nova possibilidade de fazer qualquer coisa online agora.

11:11.150 --> 11:12.970
Eu tenho outro vídeo emocionante para

11:12.970 --> 11:14.110
você em seguida.

11:14.620 --> 11:16.260
Vejo você nesse. Tchau tchau
