WEBVTT

00:00.810 --> 00:01.730
Bem vindo de volta.

00:01.890 --> 00:05.450
É hora de voltar a construir páginas da web.

00:05.670 --> 00:09.050
Mas desta vez com JavaScript.

00:09.330 --> 00:15.030
Até agora aprendemos HTML e CSS e aprendemos JavaScript

00:15.240 --> 00:22.380
mas separadamente. O verdadeiro poder vem quando combinamos todas essas três tecnologias. Agora o anterior

00:22.380 --> 00:29.370
videos Mencionei como JavaScript permitia que as ações fossem realizadas na página da web. Bem, o que eles

00:29.370 --> 00:30.030
quer dizer ai?

00:31.040 --> 00:37.090
Ao adicionar JavaScript às nossas páginas, agora temos o poder que nunca tivemos com HTML

00:37.130 --> 00:43.790
e CSS. Podemos mudar todos os elementos HTML da página,

00:43.980 --> 00:51.120
podemos mudar todos os atributos HTML da página, mudar todos os estilos CSS da página,

00:51.120 --> 00:59.400
remover elementos e atributos HTML existentes, adicionar novas propriedades e atributos HTML e JavaScript

00:59.400 --> 01:08.570
Também pode reagir a eventos HTML existentes ou criar seus próprios eventos HTML na página.

01:08.580 --> 01:15.370
Agora, algumas dessas coisas são como alterar blocos CSS ou atributos e elementos HTML.

01:15.380 --> 01:24.710
Bem, nós poderíamos fazê-los antes, mas com JavaScript podemos fazer isso enquanto o usuário está na página.

01:24.720 --> 01:27.410
Vamos olhar o diagrama.

01:27.580 --> 01:34.300
Solicitamos o HTML e, em seguida, o navegador da Web viu a tag de link.

01:34.700 --> 01:46.320
Pegue o CSS e antes de usar JavaScript, se quisermos mudar o estilo ou mudar a aparência do HTML.

01:46.320 --> 01:49.100
Talvez nós queiramos clicar na página "Sobre".

01:49.120 --> 02:01.530
Enquanto nós solicitaríamos o HTML e o CSS novamente para mudar a aparência da página web, mas agora

02:02.190 --> 02:10.650
com JavaScript tudo que você precisa é isso e JavaScript pode fazer isso tudo para você, se você quer para todos

02:10.650 --> 02:12.070
a mesma página.

02:12.120 --> 02:16.260
Agora, nesta seção, vamos aprender tudo isso. A fim de fazer isso

02:16.260 --> 02:21.090
embora devamos voltar aos nossos diagramas e entender duas coisas.

02:21.150 --> 02:26.780
Um é o DOM e o segundo é o mecanismo JavaScript.

02:26.850 --> 02:34.140
Até este ponto nós falamos como HTML é requisitado então CSS, então o navegador faz algo especial,

02:34.140 --> 02:36.340
cria algo chamado DOM.

02:36.480 --> 02:39.160
Esse tipo de aparência é assim.

02:39.340 --> 02:45.860
Quando uma página da Web é carregada, o navegador cria o DOM que representa o Document Object Model.

02:46.060 --> 02:50.880
Você vê aqui que temos documento com o elemento raiz HTML.

02:51.070 --> 02:56.460
Temos um elemento head, elemento body com algumas tags 'a' e tags 'h1'.

02:56.470 --> 02:58.000
O que isso realmente significa?

02:58.030 --> 03:01.520
Você pode realmente ver a mesma coisa no console, então vamos verificar isso.

03:03.110 --> 03:08.990
Portanto, o DOM ou o Document Object Model é simplesmente 'document'.

03:09.040 --> 03:12.490
Então, aqui, se abrirmos o documento, você vai.

03:12.560 --> 03:17.440
Nós temos a mesma coisa que vimos na aba de elementos. Deixe-me fechar o estilo aqui.

03:18.530 --> 03:24.890
Bem no console.

03:24.990 --> 03:27.580
Agora, por que precisamos do DOM?

03:27.720 --> 03:37.050
Bem, precisávamos de uma maneira de obter, alterar, adicionar ou excluir elementos HTML, para que o DOM fosse criado para que pudéssemos fazer algo

03:37.050 --> 03:39.070
como isso.

03:39.240 --> 03:42.530
'document.write ("helloooo")'

03:44.170 --> 03:51.590
e observe o que acontece com a página da web, ela muda para

03:51.730 --> 03:52.590
"helloooo"

03:52.600 --> 04:00.700
Portanto, o DOM é algo que um navegador cria para nos permitir modificar o HTML e o CSS.

04:00.970 --> 04:04.420
Ok, e agora a outra frase que mencionei?

04:04.420 --> 04:07.770
o motor JavaScript? Bem até este ponto

04:07.770 --> 04:14.540
falamos sobre como cada navegador carrega o JavaScript e lê magicamente.

04:14.570 --> 04:16.490
Afinal, o que isso quer dizer?

04:16.690 --> 04:24.110
Bem, cada navegador tem uma coisa chamada "motor JavaScript" e todos eles têm nomes muito legais.

04:24.110 --> 04:35.710
O Chrome tem 'motor V8', Edge tem 'Chalker Core', Safari tem 'Nitro' e o Firefox tem 'SpiderMonkey'. E o que

04:35.720 --> 04:43.670
eles são aqueles que olham para o arquivo JavaScript e lê-lo linha por linha e executar o

04:43.670 --> 04:44.830
JavaScript.

04:44.840 --> 04:48.300
Então, como esses dois se unem?

04:48.530 --> 04:53.400
Bem, agora podemos usar JavaScript para conversar com o DOM.

04:53.540 --> 04:56.960
Você vê quando nós documentamos o dot write (document.write)

05:00.220 --> 05:02.110
isso foi JavaScript, não foi?

05:02.140 --> 05:09.390
Parece um objeto e tinha o método write que aceitou um argumento

05:09.430 --> 05:18.250
'helloooo'. Navegadores da Web nos permitem acessar o DOM através do objeto de documento e é isso que é

05:18.250 --> 05:19.330
um objeto.

05:19.420 --> 05:26.710
E agora nós temos o poder que mencionamos antes de fazer todas as coisas para essencialmente modificar como nossos

05:26.830 --> 05:29.410
aparência de página da web.

05:29.410 --> 05:38.530
Então, sabendo o que fazemos, o documento é a tela que vemos no navegador. Bem aqui e o documento

05:38.650 --> 05:41.210
como eu mencionei é apenas um objeto.

05:41.500 --> 05:48.520
Agora tem um objeto pai? Bem, na verdade

05:48.580 --> 05:48.940
isso acontece.

05:48.940 --> 05:51.850
Chama-se janela.

05:52.090 --> 05:59.610
E você vê aqui uma janela é um objeto com uma tonelada de propriedades.

05:59.810 --> 06:08.130
Mas se rolarmos até aqui, vemos que uma das propriedades é um documento e ele até destaca isso

06:08.130 --> 06:13.790
nos e se abrirmos o documento tem mais propriedades.

06:13.830 --> 06:24.730
Além disso, lembre-se de 'alerta' e 'prompt' veja que o objeto da janela está alerta.

06:24.790 --> 06:26.570
Então vamos tentar alguma coisa.

06:26.790 --> 06:34.960
Se eu fiz 'window.alert ("check check")' isso ainda funcionará?

06:34.960 --> 06:39.920
Vamos ver? Sim, ainda funciona.

06:39.960 --> 06:49.790
A razão pela qual o 'alerta' funcionava assim era porque 'janela' é - você pode pensar nisso como o grande pai da

06:49.800 --> 06:59.680
tudo e uma janela do navegador é um objeto que descreve esse navegador e sempre que você usa um método

07:00h.070 --> 07:08.210
como 'alerta' se você não especificar nada, assume que você está falando sobre o objeto da janela,

07:08.370 --> 07:16.410
o maior pai. Mas lembre-se 'document.write'?

07:17.730 --> 07:25.340
Podemos fazer isso no objeto da janela?

07:25.460 --> 07:31.100
Vamos checar isso. Eu recebo um erro "window.write"

07:31.110 --> 07:36.410
não é uma função porque não existe como uma propriedade de 'janela'

07:36.420 --> 07:43.310
tt existe como uma propriedade do documento que é uma propriedade da 'janela'.

07:43.320 --> 07:54.580
Então vamos recapitular. Um navegador da web tem um objeto de janela que tem uma propriedade 'documento' que especifica o que deve

07:54.580 --> 07:58.390
seja exibido para decidir o que exibir

07:58.390 --> 08:10.030
o objeto de documento, o modelo de objeto de documento lê o HTML e CSS e, em seguida, JavaScript que é lido

08:10.360 --> 08:13.590
linha por linha por algo como um motor de JavaScript -

08:13.600 --> 08:17.380
No Google Chrome, esse é o mecanismo V-8 - lê através dele.

08:17.770 --> 08:27.400
E se algum dia precisar mudar alguma coisa, o JavaScript pode falar com o objeto do documento e modificar o

08:27.600 --> 08:33.850
HTML e CSS. Usando nosso novo poder encontrado, no próximo vídeo

08:33.940 --> 08:40.510
vamos começar a manipular o DOM para tornar nossos sites mais interativos com JavaScript.

08:40.510 --> 08:42.100
Vamos começar. Tchau tchau
