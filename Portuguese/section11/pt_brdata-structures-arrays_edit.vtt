WEBVTT

00:02.180 --> 00:08.210
Bem vindo de volta. Espero que você tenha feito uma boa pausa após o vídeo das funções, porque sei

00:08.210 --> 00:08.930
que cobrimos muito.

00:09.410 --> 00:12.510
Desta vez, vamos aprender algo um pouco mais fácil.

00:12.770 --> 00:16.430
E vamos aprender nossa primeira estrutura de dados.

00:16.700 --> 00:19.630
Agora, o que é uma estrutura de dados?

00:19.640 --> 00:29.000
Até agora, aprendemos apenas sobre números, strings, booleanos, 'indefinidos' e funções. Mas como você armazena

00:29.000 --> 00:31.460
todos eles?

00:31.490 --> 00:37.250
Dissemos que uma variável é como uma gaveta de mesa, mas você não quer jogar tudo lá

00:37.250 --> 00:42.170
dentro e ter uma bagunça enorme. Ou você não quer jogar apenas uma caneta e fechar a gaveta.

00:42.170 --> 00:49.560
Idealmente, você pode armazenar mais coisas, organizá-las. As estruturas de dados são como suportes de compartimento

00:49.560 --> 00:56.680
em sua mesa, como esta imagem aqui. Estruturas de dados diferentes são boas em coisas diferentes.

00:56.800 --> 01:03.820
Por exemplo, nesta figura, parece que o arquivo é realmente muito bom para encontrar

01:03.820 --> 01:11.510
coisas, porque é ordenado em ordem alfabética. E as estruturas de dados nos dão essa capacidade

01:11.960 --> 01:17.010
de armazenar informações e acessá-las de uma maneira que é útil para nós.

01:17.120 --> 01:20.840
Então, vamos aprender nossa primeira estrutura de dados e

01:24.160 --> 01:26.010
essa é 'Matriz'.

01:26.180 --> 01:32.690
Vamos abrir nosso console e temos nosso arquivo

01:33.050 --> 01:53.130
de script aqui e vamos escrever nossa primeira matriz fazendo a variável 'list'. E teremos colchetes: 'tigre', 'gato', 'urso' e vamos fazer 'pássaro'.

01:53.180 --> 01:55.320
Portanto, ainda é uma variável.

01:55.610 --> 01:57.530
E você vê cordas aqui.

01:57.530 --> 02:02.400
A única coisa diferente são esses colchetes.

02:03.630 --> 02:10.860
Mas eu chamo essa 'lista' e parece uma lista, mas eu poderia ter chamado isso de qualquer coisa:

02:10.860 --> 02:12.450
'listOfAnimals', por exemplo.

02:13.580 --> 02:17.780
Mas uma matriz, como eu disse, é uma maneira de organizar informações.

02:17.950 --> 02:20.140
E isso é organizado dessa maneira.

02:20.140 --> 02:25.860
Mas como a agarramos? Como pegamos um desses 4 itens da gaveta da mesa?

02:26.080 --> 02:31.040
A maneira como você acessa uma matriz é - com algo assim.

02:36.320 --> 02:36.610
ESTÁ BEM.

02:36.630 --> 02:45.540
Portanto, nome da variável - colchetes - um número e - colchetes. Vamos fazer o console. log 'e veja o que acontece.

02:50.330 --> 02:52.420
Eu recebo 'gato'.

02:53.060 --> 02:57.820
Hmmm, agora, a maioria de vocês pode ter pensado que teríamos 'tigre'.

02:57.830 --> 03:03.000
Quero dizer 'lista', queremos o primeiro item na 'lista'.

03:03.020 --> 03:07.830
Talvez seja assim que você lê, mas não é assim que funciona. Em desenvolvedores de ciência da

03:07.880 --> 03:14.510
computação, como contar a partir de '0'. Então '0' foi o primeiro número, depois '1, depois' 2 'e depois' 3 '.

03:14.870 --> 03:17.890
Então, sempre começamos a contar a partir de '0'.

03:17.900 --> 03:22.580
Então, se você deseja obter 'tigre' desta lista, você faz '0'.

03:22.800 --> 03:33.620
E vamos atualizar e temos 'tigre'. Vamos brincar com isso no console. Se eu copiar a 'lista' e colocá-la

03:33.620 --> 03:34.730
assim. ESTÁ BEM.

03:40.630 --> 03:42.550
O console realmente

03:45.550 --> 03:51.780
nos fornece um bom registro da matriz. E vemos que temos: '0' - 'tigre', '1' - 'gato', '2' - 'urso', '3' - 'pássaro'.

03:51.790 --> 04:02.530
Portanto, como você pode ver, uma matriz é apenas uma maneira agradável de listar itens em uma ordem de '0', '1', '2' e '3'.

04:02.530 --> 04:07.300
Agora que tipo de coisas as matrizes podem conter ou são apenas strings?

04:07.500 --> 04:09.190
Bem, na verdade não.

04:09.220 --> 04:13.870
Nós podemos fazer 'números' variáveis.

04:15.370 --> 04:21.420
E tem '1, 2, 3, 4'.

04:21.700 --> 04:33.930
Podemos ter 'booleanos' e podemos ter 'verdadeiro, falso', 'verdadeiro' novamente.

04:35.520 --> 04:37.730
E esta é a parte divertida.

04:37.740 --> 04:43.830
Você também pode ter 'funções' como uma matriz.

04:43.990 --> 04:46.840
Para que eu possa fazer 'function apple':

04:50.720 --> 04:52.070
'console. log (apple) ».

04:57.400 --> 04:59.770
E depois feche com os colchetes.

05:01.560 --> 05:13.000
E 'functionList' agora tem uma matriz, no local '0' de 'apple'. Aqui é ainda mais estranho, você pode fazer

05:14.360 --> 05:26.480
uma variável, vamos chamá-la de 'mixedList' e que pode conter strings, pode ter números, pode ter indefinido, você

05:26.480 --> 05:29.280
pode ter booleanos.

05:29.780 --> 05:33.860
E como eu mostrei antes, você pode ter funções.

05:36.930 --> 05:44.190
E 'mixedList' agora tem um monte de coisas malucas.

05:44.210 --> 05:47.960
Agora, isso não é aconselhável.

05:47.960 --> 05:53.870
Na verdade, é um problema de desempenho quando você tem matrizes com tipos diferentes.

05:53.870 --> 05:59.580
Então, você quer manter o mesmo, mas eu quero lhe mostrar isso. Podemos colocar qualquer coisa em matrizes.

05:59.780 --> 06:07.870
Também podemos criar matrizes dentro de uma matriz.

06:07.950 --> 06:16.510
Você vê, o que eu acabei de fazer aqui? Temos uma matriz que possui uma matriz de 'tigre', 'gato', 'urso', 'pássaro'.

06:16.620 --> 06:20.040
Então, se salvarmos e atualizarmos, o que você acha que vai acontecer?

06:22.270 --> 06:29.380
Temos uma matriz que possui 'tigre', 'gato', 'urso', 'pássaro'. Mas acessamos '0'.

06:30.860 --> 06:32.740
Vamos tentar novamente sem o '0'.

06:32.780 --> 06:34.030
Vamos ver o que acontece.

06:35.490 --> 06:42.370
Desta vez, obtemos uma matriz, como diz aqui, que possui uma matriz dentro dela.

06:43.220 --> 06:45.180
Então, como conseguimos, digamos, suportar?

06:45.290 --> 06:54.090
Bem, diríamos, queremos a primeira matriz. E depois outro par de colchetes.

06:54.450 --> 07:04.260
E porque 'tigre' está em '0, 1, 2', queremos '2'. Ou digo 'tigre' e depois 'urso'.

07:04.310 --> 07:07.360
Então, estamos recebendo a primeira matriz, esta.

07:07.700 --> 07:13.470
E dentro dessa primeira matriz, queremos o '0, 1, 2' - o 'urso'.

07:13.470 --> 07:14.910
Vamos ver se isso funciona.

07:15.780 --> 07:17.550
E então nós temos 'urso'.

07:17.850 --> 07:23.740
Agora, as matrizes são legais porque o JavaScript tem métodos predefinidos para elas.

07:23.940 --> 07:32.110
E o que são esses? Por enquanto, pense nelas como funções. São funções que podemos usar em matrizes.

07:32.240 --> 07:35.620
Não se preocupe muito com o termo do método, nós o abordaremos mais tarde.

07:35.870 --> 07:37.690
Mas deixe-me mostrar o que eu quero dizer.

07:38.090 --> 07:40.310
Se retornarmos essa 'lista' da maneira que era.

07:43.860 --> 07:47.330
Voltar a 'tigre', 'gato', 'urso', 'pássaro'.

07:47.450 --> 07:50.200
Então, vamos dar uma olhada na 'lista', o que temos na 'lista' agora.

07:50.210 --> 07:53.490
Agora temos 'tigre', 'gato', 'urso', 'pássaro'. ESTÁ BEM.

07:53.540 --> 08:02.250
Então, vamos ver que tipo de métodos podemos adicionar à 'lista'. 'list' vamos fazer 'shift'.

08:02.410 --> 08:03.740
E vamos ver o que isso faz.

08:03.900 --> 08:08.910
Eu recebo de volta 'tigre', mas se eu olhar para a 'lista' agora, 'tigre' foi movido.

08:08.910 --> 08:15.610
Eu mudei a matriz para remover 'tigre' e agora tudo mudou para a esquerda.

08:16.390 --> 08:19.840
E se eu fizer? pop '?

08:24.550 --> 08:26.200
Eu recebo 'pássaro'.

08:26.440 --> 08:34.180
Portanto, se olharmos para a 'lista' agora - ela está 'estourou' 'pássaro' no final da matriz.

08:34.460 --> 08:43.550
E agora eu só tenho 'gato' e 'urso'. E se fizermos 'lista. empurre 'e depois' empurre '. Precisa ter uma discussão, vamos

08:43.570 --> 08:44.600
fazer 'elefante'.

08:47.550 --> 08:51.250
E agora voltamos ao número '3'.

08:51.400 --> 08:52.850
Você pode adivinhar o que isso significa.

08:52.870 --> 08:54.340
E vamos olhar para 'lista'.

08:54.480 --> 08:56.890
Agora temos 'gato', 'urso' e 'elefante'.

08:56.980 --> 09:00.070
Então, 3 itens na matriz.

09:00.250 --> 09:04.310
Vamos limpar isso um pouco e vamos verificar o que temos na 'lista'.

09:04.420 --> 09:05.470
Perfeito.

09:05.470 --> 09:07.310
Que outra coisa podemos fazer?

09:07.750 --> 09:14.500
Bem, também podemos fazer a lista. concat '. Para concatenar.

09:15.040 --> 09:19.900
E aqui podemos realmente adicionar outra matriz.

09:19.940 --> 09:32.800
Vamos fazer 'abelha' e 'cervo'. Vamos pressionar 'Enter' e agora temos uma série de 5

09:32.870 --> 09:43.760
itens: 'gato', 'urso', 'elefante', 'abelha' e 'cervo'. E eu não te disse isso, mas quando olhamos para os números '0, 1,

09:43.760 --> 09:48.280
2, 3, 4', eles são chamados de 'índice' em matrizes.

09:48.530 --> 09:53.010
Portanto, 'índice' significa: 'gato' tem um 'índice' de '0', 'urso' - um índice de '1', 'elefante' -

09:53.210 --> 10:00.210
de '2', 'abelha' - de '3', 'cervo '- um índice de' 4 '. OK Vamos fazer uma última coisa

10:01.340 --> 10:09.030
e depois você pode fazer alguns exercícios. Como você pode ver, é muito divertido.

10:10.150 --> 10:17.280
Uma última coisa que quero lhe mostrar é esta: se fizermos 'listar. ordenar'. Bem, como o nome

10:20.300 --> 10:26.670
sugere, agora temos uma 'lista' classificada. Mas, bem, por que temos apenas 3 itens?

10:26.670 --> 10:28.530
Por que não 5?

10:28.860 --> 10:30.300
E isso é um pouco complicado.

10:30.300 --> 10:34.200
Você precisa, precisa praticar um pouco com as matrizes para entendê-las.

10:34.290 --> 10:39.260
Classificamos nossa matriz, mas apenas a original.

10:39.520 --> 10:46.780
O que concatenamos, o que adicionamos, não o atribuímos a uma variável. Por isso, criou uma

10:46.780 --> 10:49.270
nova matriz.

10:49.310 --> 10:59.010
Então, agora tínhamos duas matrizes: a 'lista', que tinha apenas 'urso', 'gato' e 'elefante'. E outra 'lista' concat 'abelha', 'cervo', da qual

10:59.020 --> 11:02.060
não capturamos o valor.

11:02.060 --> 11:09.420
Nós não o atribuímos a uma variável. Para mostrar, vamos copiar isso novamente.

11:11.500 --> 11:15.910
E tente o seguinte: a

11:19.530 --> 11:33.810
variável 'myList' é igual a OK. Temos esses 5 itens e vamos fazer a variável 'myNewList' igual a 'myList. concat '.

11:37.010 --> 11:42.830
E nós vamos fazer uma matriz com 'monkey'.

11:42.840 --> 11:49.790
Então, agora, se eu olhar para 'myList', tenho 5 itens: 'gato', 'urso',

11:49.930 --> 11:51.920
'elefante', 'abelha', 'cervo'.

11:52.380 --> 11:57.850
Mas se eu olhar para 'myNewList' - tenho 6 itens: com 'monkey'.

11:59.470 --> 12:08.980
Portanto, existem alguns métodos que criam novas listas: como 'concat'; e alguns métodos: como 'push' ou 'pop', que não

12:09.670 --> 12:13.730
criam uma nova lista, apenas modifique a atual.

12:13.740 --> 12:17.260
Eu tenho alguns exercícios para você no final deste vídeo.

12:17.280 --> 12:19.050
Essa é uma estrutura de dados realmente divertida.

12:19.050 --> 12:21.140
Felizmente, você está empolgado em aprender este.

12:22.170 --> 12:23.480
É isso para matrizes.

12:23.790 --> 12:29.260
Depois de entender a sintaxe e a estrutura, isso tem muito poder.

12:30.420 --> 12:35.790
A última coisa que eu queria lhe mostrar foi

12:41.520 --> 12:51.690
que o nosso bom amigo 'W3C', tem uma ótima lista de referências de quais métodos as matrizes têm.

12:52.140 --> 12:54.950
Assim, você pode lê-los enquanto trabalha em seus exercícios.

12:54.960 --> 13:00.060
Há algumas coisas que eu não cobri no vídeo, que você terá que procurar por aqui

13:00.450 --> 13:03.500
para descobrir o que precisa para resolver os problemas.

13:04.510 --> 13:05.980
Vejo você no próximo.
