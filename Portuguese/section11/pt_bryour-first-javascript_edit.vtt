WEBVTT

00:00.980 --> 00:05.400
Olá! Vamos aprender um pouco de JavaScript.

00:05.400 --> 00:11.160
Vamos abrir o Google Chrome aqui e vamos para 'Visualizar', (então) 'Desenvolvedor'.

00:11.320 --> 00:13.640
E desta vez, 'Console JavaScript', para que

00:13.720 --> 00:22.670
você possa fazer também a 'CMD Option + J' e ela abrirá esse console; ou seja, se você se lembrar de elementos, já viu

00:22.690 --> 00:23.800
isso antes.

00:23.830 --> 00:30.680
Esse é o seu HTML. Console é onde podemos escrever JavaScript. À direita, você verá o

00:30.680 --> 00:33.740
esboço do que falaremos neste segmento JavaScript.

00:33.770 --> 00:35.480
Nós vamos um por um.

00:36.050 --> 00:42.760
E alguns deles, voltaremos a. Mas não se preocupe, até o final você saberá tudo aqui.

00:43.910 --> 00:54.220
Então, vamos falar de JavaScript. JavaScript tem 7 tipos. Você pode pensar nos tipos como valores que o

00:54.220 --> 00:55.890
JavaScript pode ter.

00:55.900 --> 00:57.330
Vamos começar com o primeiro.

00:57.970 --> 01:06.260
E isso é 'Número'. Portanto, o tipo 'Número'. Bem, em JavaScript, você pode fazer

01:07.970 --> 01:12.880
algo assim: Veja isso. O console nos permite escrever JavaScript o quanto quisermos.

01:12.880 --> 01:21.160
Portanto, ao escrever isso e o console, dar uma resposta significa que 'Sim, isso é JavaScript válido'. ESTÁ BEM! O que mais

01:21.160 --> 01:25.800
podemos fazer? Bem, podemos fazer '3

01:26.110 --> 01:30.400
* 5' '15', '12 / 4 ',' 3 '.

01:30.400 --> 01:31.090
Fantástico.

01:31.090 --> 01:36.630
O que mais podemos fazer? '12 -4 ',' 8 '.

01:36.680 --> 01:37.940
Nós podemos fazer isso?

01:37.940 --> 01:43.580
Nós podemos fazer isso? '(3 + 4) * 2'.

01:43.730 --> 01:47.480
Então isso é '7 * 2', '14'.

01:47.610 --> 01:55.070
sim! Funciona! E podemos até fazer isso [%]. E esse é um personagem especial que você talvez nunca tenha visto

01:55.390 --> 01:56.360
antes de ser chamado de 'módulo'.

01:56.360 --> 01:59.970
E vamos ver o que acontece. Dá-me '0'.

02:00.350 --> 02:07.330
E se eu fizer '12% 5 '? Isso me dá '2'. O que esse símbolo faz -

02:07.370 --> 02:13.930
E vamos aumentar isso para que você possa ver claramente. E vou esclarecer isso apenas para

02:13.940 --> 02:19.490
que você possa ver melhor. E eu posso deixar claro aqui, com esses colchetes e isso vai limpar tudo para mim.

02:19.910 --> 02:29.150
Então mais uma vez. O que eu fiz foi '12% 5 'e isso me dá' 2 '. E o que o módulo faz é

02:29.240 --> 02:38.060
- isso me dá o restante. Então '12% 5 'é ... Bem, isso me dá um resto de '2', porque '5' só pode ir para

02:38.060 --> 02:39.540
'10' e então você tem o restante.

02:39.560 --> 02:53.760
Então, se eu fizer, digamos '12% 5 'ou vamos fazer' 9 ', recebo o restante de' 3 '. E você está pensando 'Oh Deus! Você está apenas me ensinando matemática!

02:53.770 --> 02:56.890
'Mas não se preocupe. Esta é apenas uma pequena parte disso.

02:56.920 --> 03:03.040
Eu só quero mostrar a você que o primeiro tipo de JavaScript é um 'Número'

03:03.220 --> 03:06.470
e podemos fazer operações como a calculadora.

03:06.480 --> 03:10.190
O segundo tipo em JavaScript é uma 'String'.

03:12.010 --> 03:19.720
Portanto, 'String' é apenas texto e tudo o que você precisa fazer para que o JavaScript saiba que está escrevendo

03:19.720 --> 03:22.960
um pedaço de texto é aspas duplas.

03:23.090 --> 03:30.020
Então eu posso apenas dizer "Bob". Eu posso dizer meu nome ["Andrei"]. E você também pode usar aspas simples.

03:35.350 --> 03:38.220
E isso é uma 'String'.

03:38.810 --> 03:40.720
Mas o que mais podemos fazer com a String?

03:40.960 --> 03:43.630
Deixe-me esclarecer isso. Bem, você

03:43.640 --> 03:46.070
também pode fazer isso.

03:46.130 --> 03:47.240
Você pode dizer "Olá" +

03:49.830 --> 03:50.640
"Pronto! "

03:50.730 --> 03:52.070
O que você acha que vai acontecer aqui?

03:53.350 --> 03:56.210
Vamos ver. "Olá!

03:56.800 --> 04:08.960
"Mas é uma palavra. Nós precisamos de um espaço. Então teríamos que fazer "Olá" + "lá! "

04:09.190 --> 04:11.370
E aí temos o espaço.

04:11.430 --> 04:16.700
ESTÁ BEM. Então podemos adicionar coisas. Então, adicione duas frases juntas.

04:17.970 --> 04:23.170
E se fizermos. E se fizermos algo assim.

04:23.280 --> 04:28.260
"Isso não é muito legal", apertei 'Enter'

04:29.860 --> 04:30.920
e.

04:31.090 --> 04:31.780
OK, isso funciona.

04:31.780 --> 04:32.230
Isso é bom.

04:32.290 --> 04:34.830
Mas e se eu usar aspas simples aqui?

04:34.900 --> 04:36.120
E se eu for

04:36.140 --> 04:40.330
assim - e lembre-se de que disse que posso usar aspas simples em JavaScript.

04:40.690 --> 04:45.650
Bem, você vê a sintaxe mudar e eu recebo um pequeno erro.

04:45.790 --> 04:52.430
Bem, porque estou usando aspas simples e, dentro da string, estou tentando usar aspas simples. E isso também aconteceria se eu

04:52.430 --> 04:54.850
usasse aspas duplas.

04:54.860 --> 05:01.220
Portanto, se voltarmos ao exemplo anterior e adicionar outra citação aqui.

05:01.350 --> 05:04.460
Bem, novamente, recebo um erro.

05:04.620 --> 05:07.330
Então deixe-me esclarecer isso.

05:07.400 --> 05:12.060
Como podemos evitar esse problema? Bem, com uma String em JavaScript, podemos

05:13.650 --> 05:16.240
fazer algo assim: 'This' - Vamos usar aspas simples.

05:16.230 --> 05:23.800
'Isso não é' - E o que é isso?

05:23.810 --> 05:27.490
'Isso não é muito bom' (erro).

05:27.730 --> 05:31.170
E essa barra invertida [\] tem um significado especial.

05:31.270 --> 05:35.600
O '/' diz "Ei, o que vier depois

05:35.670 --> 05:41.720
disso, é um significado especial. Significa "apenas ignore - não diga que isso é um pedaço de barbante.

05:41.790 --> 05:43.970
Eu só quero o back tick. "Então,

05:44.100 --> 05:45.770
se eu correr assim.

05:45.820 --> 05:48.150
Opa! Eu fiz a sintaxe aqui errada.

05:48.180 --> 05:49.760
Obviamente, as aspas precisam corresponder.

05:49.770 --> 05:50.890
Então, vamos tentar novamente.

05:52.420 --> 05:53.170
Ai está!

05:53.200 --> 05:56.190
Isso é muito legal. OK, eu tenho

05:56.290 --> 05:57.320
outra pergunta.

05:57.430 --> 05:59.800
o que acontece aqui?

06:00.310 --> 06:07.350
10 + "34". Então esse é 'Number' 10 + 'String' de 34.

06:07.420 --> 06:08.440
Vamos ver o que acontece.

06:10.450 --> 06:18.480
Hmm... Esquisito. Então o JavaScript analisou automaticamente isso e disse: "Hmm, ele está adicionando um número e uma string.

06:18.820 --> 06:22.320
Ele provavelmente está tentando adicionar cordas ".

06:22.390 --> 06:28.110
Portanto, o JavaScript converte o número '10' em uma string '10' e executa '1034'.

06:28.450 --> 06:29.500
Isso é meio estranho, certo?

06:29.500 --> 06:32.180
É uma das peculiaridades do JavaScript - existem algumas delas.

06:32.320 --> 06:33.770
Você só precisa se acostumar com isso.

06:34.150 --> 06:34.990
Vamos tentar outra coisa.

06:34.990 --> 06:36.180
E se

06:36.420 --> 06:42.290
eu fizer 10 - "3"? Pressione Enter.

06:42.410 --> 06:43.560
Eu tenho 7.

06:43.780 --> 06:46.120
O que está acontecendo aqui?

06:46.150 --> 06:56.360
E porque com a String, você não pode subtrair a string e quero dizer, vamos ver se eu vou "Olá" - "Tchau".

06:57.810 --> 07:02.500
Eu recebo esse símbolo estranho ao qual voltaremos. Mas isso não funciona.

07:02.500 --> 07:08.320
Então agora o JavaScript diz "eu vou" - porque ele está subtraindo, eu vou assumir que ele

07:08.330 --> 07:10.400
quer dizer o número '3'.

07:10.400 --> 07:12.670
Então ele está tentando ajudá-lo.

07:13.550 --> 07:20.230
Mas! às vezes, pode ter um comportamento inesperado; portanto, idealmente, você nunca faz coisas assim.

07:20.290 --> 07:25.540
Idealmente, você mantém números com números e cadeias com cadeias e mantém as ações entre os

07:25.540 --> 07:26.430
tipos semelhantes.

07:27.400 --> 07:34.520
Então, vamos voltar a isso. O que aconteceu quando eu digo "olá" - "tchau"? Bem, 'NaN' significa 'Not a Number'

07:34.550 --> 07:39.010
e é tecnicamente - em JavaScript, você pode ver o azul destacado aqui.

07:39.140 --> 07:41.030
Faz parte do tipo 'Número'.

07:41.390 --> 07:47.390
Então os números podem. Você sabe que pode variar de 1 a 10 a .. Você conhece 567.

07:47.420 --> 07:54.820
Mas há também o 'NaN', quando está dizendo 'Ei, o que você acabou de escrever não é um número. - Então esse também é

07:54.860 --> 07:56.480
o caso.

07:56.480 --> 08:02.470
Eu sei que é muito, muito confuso, mas não se preocupe. São apenas as peculiaridades da linguagem que estamos aprendendo.

08:02.890 --> 08:03.230
ESTÁ BEM.

08:03.350 --> 08:06.070
Vou mostrar outro tipo de JavaScript.

08:06.440 --> 08:10.000
Antes de abordarmos algumas coisas divertidas no próximo vídeo.

08:10.200 --> 08:12.960
Então o próximo é 'Boolean'.

08:15.080 --> 08:19.980
E o tipo 'Boolean' é muito simples. Booleano significa apenas "verdadeiro".

08:21.380 --> 08:22.680
Ou falso'. É isso aí.

08:22.910 --> 08:29.420
E, às vezes, isso pode ser representado como '1' e '0' e, para aqueles que sabem muito sobre computadores, você

08:29.420 --> 08:35.420
deve saber que o computador é basicamente executado em '1' e '0' e é , é daí que

08:35.420 --> 08:35.890
vem.

08:36.780 --> 08:41.250
Mas os booleanos são muito, muito úteis, porque agora podemos

08:41.250 --> 08:44.040
fazer algo como '3> 2'.

08:44.390 --> 08:47.820
E eu direi 'true': '3' é maior que '2'.

08:48.060 --> 08:51.780
Se eu fizer '5> 10'.

08:51.930 --> 08:55.740
diremos 'false': '5' não é maior que '10'.

08:55.770 --> 09:03.360
Também podemos fazer '5> = 5'.

09:03.420 --> 09:06.350
Então direi 'verdadeiro' porque posso fazer maior ou igual a.

09:06.450 --> 09:13.950
E eu também posso fazer '5 &lt;= 5'.

09:15.810 --> 09:23.160
Agora, e se eu quiser dizer '3 = 3 "?

09:23.440 --> 09:24.790
Eu recebo um erro.

09:24.820 --> 09:26.720
Por que é que?

09:26.750 --> 09:32.960
Porque em JavaScript, se você quer dizer que algo é igual a algo, você tem

09:33.080 --> 09:37.640
que dizer '===' '3 === 3' e eu fico 'verdadeiro'.

09:37.750 --> 09:41.680
E no próximo vídeo eu vou lhe dizer por que é esse o caso.

09:41.710 --> 09:42.850
É muito, muito interessante.

09:42.850 --> 09:50.210
Mas, por enquanto, lembre-se, esse é sempre um ponto complicado sobre o qual muitos iniciantes ficam confusos.

09:50.250 --> 09:57.300
Lembre-se de que você está comparando duas coisas, três sinais de igual, '==='. O último que quero lhe mostrar

09:57.930 --> 10:03.930
é o seguinte: '3! == 3 '(não é igual).

10:03.940 --> 10:05.170
Isso não é confuso?

10:05.170 --> 10:14.770
Então, isso está dizendo '3 é igual a 3'? Falso, porque '3' é igual a '3'.

10:14.780 --> 10:15.320
Eu sei.

10:15.380 --> 10:17.200
Pode ficar muito, muito confuso.

10:17.300 --> 10:21.590
Mas pense nisso como o oposto do sinal "igual".

10:21.590 --> 10:27.800
Então, por exemplo, se eu fizer '4! == 5 ', eu vou ser' verdadeiro ', porque você está certo.

10:27.800 --> 10:31.170
'4' não é igual a '5'.

10:31.180 --> 10:39.530
Então, o que acabamos de aprender são comparações de JavaScript e são as coisas aqui.

10:39.660 --> 10:40.170
É isso aí.

10:40.170 --> 10:42.650
Você apenas tem que lembrar disso.

10:42.840 --> 10:45.140
Bem, isso foi divertido, certo?

10:45.630 --> 10:47.470
Mas estamos apenas começando.

10:48.060 --> 10:50.860
Após este vídeo, deixei uma folha de exercícios para você.

10:51.090 --> 10:55.440
Tente encontrar as respostas para os problemas e copie e cole-os.

10:55.470 --> 10:59.920
Cada uma das perguntas de cada uma das linhas no console JavaScript.

10:59.970 --> 11:08.110
Por exemplo, se eu disser, "avalie '3 + 5'", copie isso, coloque-o no console e

11:08.110 --> 11:09.440
pressione 'Enter'.

11:09.610 --> 11:15.320
E eu quero que você se sinta confortável trabalhando com o console e brincando com ele, experimentando.

11:15.460 --> 11:18.990
E como eu disse: tente e trabalhe nos próximos conjuntos de problemas.

11:19.000 --> 11:24.400
Eu não te dei muito porque não quero que você fique sobrecarregado.

11:24.760 --> 11:27.950
Há muito mais coisas interessantes acontecendo em JavaScript do que isso.

11:28.150 --> 11:33.550
E você pode pegar isso facilmente. Mas eu encorajo você a se certificar de fazer os exercícios.

11:33.790 --> 11:36.900
Agora, você pode obter todos eles?

11:36.930 --> 11:38.330
Boa sorte!

11:38.440 --> 11:40.190
Vejo você no próximo vídeo.

11:40.190 --> 11:40.710
Tchau tchau
