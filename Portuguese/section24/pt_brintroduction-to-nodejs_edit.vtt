WEBVTT

00:01.120 --> 00:02.140
Bem vindo de volta.

00:02.140 --> 00:03.910
É hora de aprender o Nó JS.

00:04.030 --> 00:06.950
Agora, Nó JS Nós meio que

00:07.060 --> 00:11.920
o usamos em vídeos anteriores, mas na verdade não o explicamos.

00:11.920 --> 00:18.070
Então, nesta seção, vamos aprender o que é e, finalmente, usá-lo para construir um servidor.

00:19.640 --> 00:27.180
Agora eu posso ter mencionado isso antes, mas o Node é o JavaScript que é executado na sua máquina.

00:27.180 --> 00:34.140
Você vê que até o Node ser criado, você só podia executar JavaScript no navegador porque os

00:34.140 --> 00:43.990
navegadores eram os únicos que tinham um mecanismo JavaScript como V8 e o Node JS foi criado com o mecanismo V8 para poder executar

00:43.990 --> 00:51.400
JavaScript em qualquer lugar, incluindo o seu computador inclusive em robôs e em qualquer lugar, desde que você

00:51.430 --> 00:53.450
tenha o Node JS.

00:54.460 --> 01:00.970
De fato, nós usamos o Node esse tempo todo em nosso Terminal quando executamos

01:01.030 --> 01:05.420
comandos que o NPM nos deu como 'create-react-app'.

01:05.410 --> 01:10.540
Bem, isso estava usando o Node; estávamos executando JavaScript fora do navegador.

01:12.010 --> 01:17.320
E o Node JS é provavelmente o mais popular na construção de servidores.

01:17.320 --> 01:24.040
É realmente muito rápido e cada vez mais empresas o estão usando como servidor back-end, devido

01:24.040 --> 01:26.760
à maneira como ele foi construído.

01:26.770 --> 01:27.110
-

01:27.170 --> 01:31.130
O nó JS é provavelmente o servidor de escolha para aplicativos da Web ou

01:31.350 --> 01:35.230
aplicativos móveis por aí que desejam criar uma API ou um servidor.

01:35.470 --> 01:40.490
E também é realmente muito bom na criação de aplicativos de bate-papo e comunicação em tempo real.

01:41.060 --> 01:45.970
De qualquer forma, como mencionamos antes, você provavelmente já deve ter isso em seu computador, mas se não, poderá

01:45.970 --> 01:47.080
fazer o download -

01:47.110 --> 01:47.880
Node JS.

01:47.920 --> 01:50.170
Eu gosto de usar a versão LTS.

01:50.990 --> 01:56.540
Mas contanto que a versão que você está usando seja superior a 8. 9 3, esta demonstração funcionará

01:56.600 --> 01:58.070
para você.

01:58.070 --> 02:01.350
O Node é realmente muito bom em garantir que tudo seja compatível.

02:01.430 --> 02:08.150
Novamente, se você estiver usando um sistema operacional Windows, o Node também o fornecerá na seção de

02:08.150 --> 02:08.700
download.

02:09.850 --> 02:15.950
E, novamente, para verificar o Node, é muito fácil simplesmente fazer 'node -v' para ver se o temos.

02:16.180 --> 02:23.490
E se você o tiver, o número da versão será impresso para você no console. Uma última coisa antes de mostrar alguns

02:23.490 --> 02:30.940
comandos do Node: como eu disse antes que o Node possa ser executado em qualquer lugar.

02:32.130 --> 02:38.250
E uma das minhas coisas favoritas com o Node, além de criar servidores, é criar robôs

02:38.250 --> 02:39.410
usando JavaScript.

02:39.400 --> 02:46.860
Esse Johnny-5 é uma biblioteca JavaScript que você pode usar com o Node e, se

02:46.860 --> 02:55.310
tiver algo como um Raspberry Pi, ele ajudará a criar funções usando JavaScript que os robôs podem executar.

02:55.740 --> 03:00.640
Por isso, recomendo vivamente depois deste curso, se você quiser explorar mais.

03:00.660 --> 03:08.370
O Johnny-5 é uma das minhas coisas favoritas e é surpreendente como é fácil construir um robô

03:08.370 --> 03:12.590
que faz o que você deseja usando JavaScript.

03:12.620 --> 03:18.670
Mas enfim, vamos voltar ao Node. No seu Terminal, se você realmente

03:18.670 --> 03:27.550
digitar 'node' e pressionar Enter, verá que o prompt muda agora e eu posso executar o Node

03:27.960 --> 03:31.530
no terminal. Se eu fizer 'console.

03:35.250 --> 03:47.570
log ('oi') 'recebo' oi '. Se eu fizer '4 + 5', recebo 9 e, se fizer 'Boolaen (3)', gritei isso errado, 'Boolean

03:50.130 --> 03:51.930
(3)', eu sou verdadeiro.

03:52.380 --> 03:58.450
Como você pode ver, estamos apenas executando JavaScript, mas há uma diferença aqui.

03:58.570 --> 04:07.510
Se eu digitar 'window', recebo um 'ReferenceError: window is not defined' e deixe-me esclarecer um pouco.

04:07.510 --> 04:14.680
Isso ocorre porque, quando executamos o Node, não temos o objeto window; o objeto da janela nos foi

04:15.070 --> 04:16.570
fornecido pelo navegador.

04:16.930 --> 04:20.800
E como você sabe, Node, bem, não há nenhum navegador que esteja executando isso.

04:20.800 --> 04:25.020
Em vez disso, o Node vem com algo chamado 'global'.

04:25.210 --> 04:31.780
E você pode ver que esse 'global' tem exatamente como o objeto de janela tinha, várias coisas que podemos

04:32.500 --> 04:35.490
usar, mas não terá coisas específicas do navegador.

04:36.410 --> 04:48.260
Por exemplo, não poderemos ter 'global. buscar '- é indefinido porque também não existe.

04:48.300 --> 04:51.090
Isso nos foi fornecido pelo navegador.

04:51.090 --> 04:53.810
Também não temos o objeto 'document', se você

04:53.880 --> 05:00.120
se lembra; se eu 'documentar' novamente, recebo um erro de referência, porque não há documento; então isso é

05:00.120 --> 05:01.670
algo a ser lembrado.

05:01.770 --> 05:08.130
O Node vem com suas próprias propriedades e métodos que usamos, além de coisas específicas do navegador,

05:08.130 --> 05:11.210
podemos fazer o que quisermos com o Node.

05:11.310 --> 05:16.100
Um dos objetos globais que temos é algo chamado 'processo'.

05:16.250 --> 05:24.680
Se eu pressionar Enter novamente, tenho um monte de coisas e, no Nó, 'processo' significa 'esse processo' - o que estou executando agora

05:24.680 --> 05:28.890
no Terminal é o processo, o que o computador está fazendo.

05:30.330 --> 05:30.570
Tudo certo.

05:30.580 --> 05:33.260
E vamos esclarecer isso.

05:33.460 --> 05:43.490
Agora, se eu fizer 'processo. exit 'Saio desse processo e agora voltei ao meu Terminal.

05:43.680 --> 05:50.370
Agora que temos o Node em nosso poder, começaremos a escrever um script e mostraremos como podemos

05:50.370 --> 05:56.090
começar a escrever o JavaScript real, não no Terminal, mas em Texto Sublime.

05:56.370 --> 05:58.110
Eu vou ver no próximo vídeo.

05:58.110 --> 05:58.350
Tchau tchau.
