WEBVTT

00:00.420 --> 00:07.110
Bem vindo de volta. Vamos expandir o conhecimento do nó do vídeo anterior e criar um arquivo de

00:07.140 --> 00:08.210
script que possamos executar.

00:08.270 --> 00:13.920
Vamos apenas executar o comando 'touch' aqui novamente para criar um arquivo e chamaremos de script '. js '.

00:14.850 --> 00:20.870
Você verá aqui no lado esquerdo que eu tenho o script. js 'na minha pasta Nó.

00:20.920 --> 00:24.110
Agora, dentro desta pasta, agora posso fazer qualquer coisa em JavaScript.

00:24.130 --> 00:29.600
Eu posso dizer 'const a = 5'.

00:29.770 --> 00:38.920
E essa não é a pasta que eu quero ... queremos abrir isso e diremos 'const a = 4'

00:38.920 --> 00:40.800
'const b =

00:41.140 --> 00:50.780
5' E então podemos apenas 'console. log (a + b) '. Se eu salvar isso para executar este script, tudo o que faço é

00:50.790 --> 00:55.400
'node' e, em seguida, o nome do script: 'script. js '.

00:55.480 --> 00:58.770
E porque estamos no diretório, ele saberá o que 'script. js 'é.

00:58.870 --> 01:02.420
E isso nos dará 9.

01:02.460 --> 01:03.460
Quão legal é isso?

01:03.490 --> 01:09.480
Agora você também vê que saiu; não ficou no programa, e isso ocorre no final do arquivo, uma vez

01:09.480 --> 01:12.840
que ele lê tudo e o executa - então a última

01:12.840 --> 01:22.310
coisa que ele executa é 'console. log '- ele executa' processo. exit 'e sai do arquivo. Deixe-me mostrar-lhe algo.

01:22.520 --> 01:33.040
Se eu fiz algo chamado 'setTimeout', que realmente temos no Node; se

01:33.370 --> 01:40.600
eu fizer 'nó' 'global. setTimeout ', recebo uma função.

01:40.630 --> 01:47.120
Portanto, se eu fizer 'setTimeout', posso executar uma função novamente usando nossas funções de seta.

01:48.750 --> 01:57.000
E aqui dentro eu posso fazer o console. log () 'e' setTimeout 'são legais porque permitem que você diga "ei, quando você deseja que

01:57.060 --> 01:59.240
isso seja executado? "E esse

01:59.370 --> 02:03.400
é o segundo parâmetro e eu direi 3 segundos.

02:03.420 --> 02:15.210
Portanto, se eu salvar e fizer o script do nó. js '- um, dois, três e pronto: 9 e, em seguida, sai' process 'O Node é

02:17.070 --> 02:19.180
inteligente o suficiente para executar

02:19.200 --> 02:24.280
isso assim que isso for feito, finaliza o processo e volta ao Terminal.

02:24.510 --> 02:25.280
Muito legal.

02:25.380 --> 02:30.000
E, novamente, dentro do nó, podemos realmente usar coisas que podem ser

02:32.770 --> 02:37.210
úteis para nós com base em quais objetos globais temos.

02:37.300 --> 02:45.510
Por exemplo, um dos mais populares é '__dirname' - se eu salvar isso e executar 'script de nó.

02:45.510 --> 02:45.510
js '...

02:45.520 --> 02:47.530
Eu recebo meu diretório: 'node'.

02:50.480 --> 02:53.750
E mostrarei por que isso é útil quando começamos a construir um servidor.

02:54.710 --> 03:01.130
Mas como você pode ver, temos o poder do navegador e a execução dos scripts que queremos aqui

03:01.190 --> 03:02.650
no nosso Terminal.

03:02.660 --> 03:03.790
Vejo você no próximo vídeo, tchau-tchau.
