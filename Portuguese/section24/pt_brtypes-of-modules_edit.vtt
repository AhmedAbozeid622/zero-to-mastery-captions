WEBVTT

00:00.910 --> 00:01.580
Bem vindo de volta.

00:01.630 --> 00:07.860
Neste vídeo, quero falar sobre os três tipos de módulos que você pode ter no Node.

00:07.960 --> 00:14.670
Vimos que temos esse tipo, que já sabemos, que é um módulo que

00:14.710 --> 00:23.770
você cria como 'script2' e tem suas exportações de módulos e fornece o caminho para o arquivo para encontrá-lo.

00:23.790 --> 00:33.910
Há também algo chamado 'módulos internos' e módulos internos são módulos que já vêm pré-instalados com o

00:33.910 --> 00:34.780
Node.

00:35.170 --> 00:43.750
Por exemplo, um dos mais populares é o módulo 'fs' e esse módulo, se eu console

00:48.660 --> 00:52.930
o log [console. log (c)] é um módulo com várias coisas mais uma vez.

00:53.250 --> 00:56.030
Mas permite que você leia o sistema de arquivos.

00:56.130 --> 01:04.790
Ou seja, se você tinha um arquivo de texto e queria ler o arquivo de texto e extrair quantas

01:04.790 --> 01:12.830
vezes a palavra 'olá' foi dita, é possível escrever isso simplesmente usando o módulo do sistema de

01:13.490 --> 01:24.610
arquivos e algo como 'readFile : 'ou' readFileSync: 'que produzirá - faça algo como' readFile '- ele produzirá o conteúdo do arquivo e você

01:24.760 --> 01:28.480
poderá fazer o que quiser com ele.

01:29.280 --> 01:39.180
Outro popular é o módulo HTTP que, como você pode imaginar, é o módulo que usaremos mais

01:39.180 --> 01:45.730
tarde para construir um servidor. E você pode ler todos esses módulos, mas esses dois são provavelmente os mais populares.

01:45.730 --> 01:56.020
No nosso caso, como desenvolvedores da Web, estamos realmente preocupados com o HTTP, esses módulos não possuem o 'caminho' - eles

01:57.240 --> 02:00.260
são exatamente exatamente assim [('http')].

02:01.100 --> 02:09.130
E, finalmente, o terceiro tipo de módulo novamente o que sabemos é algo do npm, um pacote.

02:09.500 --> 02:16.810
E um dos meus pacotes favoritos para usar com o Node é algo chamado 'nodemon' e o

02:16.810 --> 02:27.070
nodemon é realmente muito bom, porque bem, se eu limpar isso e instalar o npm 'install' - e eu terei que fazer o 'npm init'

02:27.070 --> 02:33.280
primeiro Certifique-se de que tenho um pacote. json 'e se eu passar o' -y ', ele dirá sim a

02:33.700 --> 02:35.260
todos os avisos que recebo antes.

02:36.460 --> 02:37.240
Ai está.

02:37.320 --> 02:46.590
Eu tenho meu pacote. json ', e agora dentro deste' pacote. json 'Vou dizer' npm install nodemon

02:47.190 --> 02:49.800
--save-dev 'Se eu for para' o

02:55.760 --> 02:57.820
pacote. json 'Vejo

02:57.870 --> 02:58.500
que

02:58.530 --> 03:03.900
agora tenho nodemon em' devDependencies 'e não vimos isso antes.

03:03.900 --> 03:09.600
Até agora, fizemos '--save' ou nada e os colocamos automaticamente em 'dependencies'

03:10.540 --> 03:14.840
'devDependencies' são dependências que usamos apenas quando estamos desenvolvendo.

03:14.890 --> 03:22.300
Quando realmente lançarmos este aplicativo ou o servidor, ele não será incluído porque o nodeman é apenas

03:22.360 --> 03:26.300
para - novamente - nossa diversão enquanto estamos desenvolvendo.

03:26.300 --> 03:28.220
Agora, deixe-me mostrar o que o nodeman faz.

03:28.400 --> 03:33.100
O nodemon agora pode ser usado porque está em 'node_modules' Se você

03:33.130 --> 03:35.890
for em '. bin 'você vê nodemon aqui.

03:36.260 --> 03:42.020
Bem, porque está no pacote 'node_modules. bin 'Eu posso usar

03:42.460 --> 03:46.880
o comando como "start" e dizer "nodemon" e

03:50.770 --> 03:59.590
o Node é inteligente o suficiente para saber que, se eu rodar o nodemon, ele

03:59.600 --> 04:02.550
aparecerá no'. pasta bin e encontre-a lá; se o

04:02.810 --> 04:03.750
encontrar, o que

04:03.790 --> 04:04.870
ele faz, executará o comando.

04:05.000 --> 04:06.140
Então, vamos ver o que acontece.

04:07.300 --> 04:16.990
Se eu limpo isso e 'npm start', recebemos um erro, porque temos alguns arquivos estranhos aqui, então

04:16.990 --> 04:20.970
vamos voltar ao nosso exemplo original.

04:21.010 --> 04:28.640
Vamos salvar a execução 'npm start' e temos uma 'saída limpa'.

04:28.810 --> 04:30.860
Mas você vê que algo ainda está em execução.

04:30.970 --> 04:35.590
Se eu mudar isso agora para 6 e salvar,

04:35.590 --> 04:41.710
observarei essas mudanças para mim; continua ouvindo as mudanças e produz tudo.

04:41.710 --> 04:51.240
Novamente, se eu mudar isso, não preciso continuar executando o script 'node. comando de js.

04:51.360 --> 04:52.050
Muito legal.

04:52.050 --> 04:57.210
Então, vamos usar muito o nodemon e é uma das minhas coisas favoritas para usar novamente, para que eu não

04:57.210 --> 04:58.820
precise ir e voltar, e voltar.

04:58.890 --> 05:05.210
E se você cometer algum erro, ele será informado imediatamente.

05:05.270 --> 05:05.520
Tudo certo.

05:05.520 --> 05:06.800
Perfeito.

05:06.840 --> 05:07.820
Por enquanto é isso.

05:07.830 --> 05:09.900
Vejo você no próximo. Tchau tchau
