WEBVTT

00:01.250 --> 00:07.580
Bom trabalho, chegando até aqui, as coisas ficarão cada vez mais divertidas a partir

00:07.820 --> 00:15.530
desta seção, porque agora estamos aprendendo ferramentas reais que as empresas reais usam e que o contratam e o

00:15.560 --> 00:23.540
desenvolvimento também se torna muito mais rápido, porque estamos usando esses ferramentas para criar sites mais rápidos e melhores.

00:23.540 --> 00:28.770
Então, vamos falar sobre reagir. O que temos antes de reagir?

00:28.870 --> 00:36.890
Bem, como eu mencionei antes, tivemos o jQuery. O jQuery era, como você se lembra, um

00:36.890 --> 00:41.270
código de escrita muito imperativo, era como misturar ingredientes sequencialmente.

00:41.270 --> 00:44.480
Se isso acontecer, faça isso e faça aquilo.

00:44.480 --> 00:50.070
Mas também se isso acontecer, faça isso e isso criou muitas inconsistências.

00:50.300 --> 00:58.430
E se você se lembra da seção de manipulação do DOM Bem, isso é realmente muito difícil e constantemente

00:58.430 --> 01:06.280
acompanha o que mudou e o que mudar é uma grande bagunça e cria um desenvolvimento muito lento.

01:06.740 --> 01:12.830
E, à medida que seu site se torna cada vez mais complexo, fica muito difícil escalar, o que significa

01:12.830 --> 01:16.360
que fica muito difícil para as equipes de desenvolvedores gerenciarem.

01:17.450 --> 01:24.050
Agora, o React foi criado no Facebook, pois você sabe que o Facebook é um aplicativo muito grande e muitas coisas precisam acontecer

01:24.050 --> 01:25.670
para que ele funcione bem.

01:25.820 --> 01:33.230
E eles tiveram esse problema e criaram o reagir como uma maneira de resolver esse problema e poder ter uma ferramenta

01:33.290 --> 01:39.410
que lhes permita criar sites de uma maneira agradável e previsível, para que vários desenvolvedores trabalhem nele

01:39.410 --> 01:40.630
ao mesmo tempo.

01:42.410 --> 01:49.130
E eu gosto de usar a analogia de uma máquina de pão usando

01:49.130 --> 01:58.980
reagir é como você simplesmente joga os ingredientes e reage faz toda essa mágica sob o capô e lança um site.

01:59.080 --> 02:01.670
Portanto, é muito confiável e muito consistente.

02:02.500 --> 02:11.680
E faz uma coisa muito bem e é essa a visão que consegue fazer de nossos sites o

02:12.810 --> 02:18.520
DOM mudar de maneiras previsíveis, fáceis de dimensionar e gerenciar.

02:18.660 --> 02:24.690
E a beleza de reagir é que, porque é apenas a visualização, não significa necessariamente que é apenas

02:24.690 --> 02:25.710
para navegadores.

02:26.010 --> 02:32.200
De fato, uma reação pode ser usada com dispositivos móveis para criar aplicativos nativos.

02:32.220 --> 02:34.760
É usado em aplicativos de realidade virtual.

02:35.010 --> 02:41.310
Você pode criar aplicativos de desktop com reagir em qualquer lugar que tenha uma visão que possa reagir.

02:41.340 --> 02:48.450
E as grandes empresas, como mencionei antes do Facebook e Instagram, usam o react e o Netflix usa o reagir sempre que

02:48.450 --> 02:52.750
você navega pelas opções de filmes, que usam reagir por baixo do capô.

02:53.040 --> 02:57.140
É uma ferramenta muito muito útil e com demanda muito alta.

02:57.210 --> 03:03.300
Por isso, estou animado para falar sobre reagir e ensinar a você essa valiosa habilidade nesta seção.

03:03.360 --> 03:09.390
Agora, para entender a reação, há algumas coisas que queremos examinar e esses são

03:09.390 --> 03:14.850
princípios muito valiosos que foram aprendidos ao longo dos anos pelos desenvolvedores.

03:14.850 --> 03:21.360
Uma é a idéia de pensar em componentes até o momento em que acabamos de criar sites.

03:21.620 --> 03:27.250
Tudo é apenas um arquivo JavaScript, um arquivo CSS e um arquivo HTML.

03:27.380 --> 03:34.360
Mas não seria bom se a web fosse uma rede desses pequenos componentes.

03:34.370 --> 03:41.180
Pense neles como blocos de Lego, onde todos constroem um bloco de Lego específico e você apenas combina

03:41.180 --> 03:44.600
esses blocos de Lego para criar seu site.

03:44.810 --> 03:50.780
Essa é a ideia que reage estabelecida, vamos usar isso como um exemplo.

03:50.900 --> 04:00.800
Você primeiro tem átomos que, como você pode ver aqui, são ícones e pequenos elementos indivisíveis em

04:00.800 --> 04:03.350
seu site, como imagens.

04:03.500 --> 04:07.780
Há algum texto e você os divide em átomos.

04:07.790 --> 04:16.040
A partir daí, você forma moléculas ou combina átomos com funcionalidades semelhantes, como a barra de navegação aqui

04:16.040 --> 04:17.090
em baixo.

04:17.090 --> 04:25.270
Você combina átomos individuais para adicionar alguma funcionalidade e, em seguida, possui organismos um pouco maiores do que moléculas

04:25.270 --> 04:29.470
que se combinam com uma funcionalidade de maior escala.

04:29.560 --> 04:31.530
E então, finalmente, você tem modelos.

04:31.840 --> 04:37.950
A combinação desses organismos para fornecer uma idéia de como o aplicativo ou site deve ficar.

04:37.960 --> 04:39.580
Finalmente você tem suas páginas.

04:39.640 --> 04:43.140
Essa é a página do seu aplicativo.

04:43.350 --> 04:52.650
E se você pensar em componentes como esta imagem demonstra bem, poderá criar pequenos componentes pequenos que você pode

04:53.190 --> 04:58.200
reutilizar e colocar em diferentes partes da página da web.

04:58.260 --> 05:05.550
Por exemplo, esse botão de retorno aqui, se eu criar um componente de reação que é o botão de retorno, agora posso usá-lo em

05:05.670 --> 05:06.600
várias páginas.

05:06.600 --> 05:13.110
E não preciso reescrever o código se quiser que a barra de navegação seja usada em diferentes áreas do

05:13.110 --> 05:13.590
aplicativo.

05:13.590 --> 05:19.670
Bem, novamente, não preciso reescrever o código que escrevi uma vez e posso reutilizá-lo de fato, posso até compartilhá-lo

05:19.710 --> 05:21.020
com o mundo.

05:21.300 --> 05:28.900
E essa idéia de componentes faz reagir INCRÍVEL porque aqui tenho um site que tem componentes de

05:28.920 --> 05:32.280
reação criados por alguém e podemos reutilizá-los.

05:32.490 --> 05:36.290
E não são apenas CSS e HTML.

05:36.330 --> 05:42.310
Mas funcionalidade real, como barras de navegação e formulários de entrada.

05:42.320 --> 05:51.480
Eu posso apenas baixar esse componente de reação e anexá-lo ao meu site e, devido à maneira como a reação é estruturada, ela realmente não

05:51.480 --> 05:56.690
precisa saber sobre o resto da página da Web, é apenas seu próprio

05:56.880 --> 06:02.540
bloco lego que funciona por si só, reduzindo as dependências de outros partes do site.

06:02.580 --> 06:06.390
Eu posso simplesmente conectar isso em qualquer lugar que eu quiser.

06:06.400 --> 06:12.310
Outro conceito importante com o react é a ideia do fluxo de dados unidirecional.

06:12.390 --> 06:19.200
A melhor maneira de descrevê-lo é olhando para essa árvore como uma estrutura aqui. Você vê que temos um

06:19.200 --> 06:25.110
pai com alguns filhos e, em seguida, esses filhos têm seus próprios filhos e esses filhos têm

06:25.110 --> 06:26.460
seus próprios filhos.

06:26.650 --> 06:34.240
E a idéia com react é que os dados fluem de cima para baixo e nunca o contrário,

06:34.570 --> 06:38.380
se esses vermelhos, vamos chamá-los de componentes, mudam.

06:38.530 --> 06:44.170
Bem, nesse caso, apenas seus filhos sabem da mudança.

06:44.170 --> 06:50.290
Os pais realmente não se importam com a mudança, porque bem, a direção do fluxo de dados está sempre sempre

06:50.290 --> 06:51.440
abaixo do fluxo.

06:51.490 --> 06:58.750
Então, se voltarmos à ideia de componentes, se tivéssemos um site construído

06:58.980 --> 07:06.310
sobre componentes, essa era a página e esses eram organismos e moléculas e átomos.

07:06.380 --> 07:11.110
Bem, nesse caso, os componentes vermelhos mudam e somente os que estão abaixo dele.

07:11.120 --> 07:18.290
Como você pode ver aqui em azul, conheça essa mudança e, com base nisso, eles agirão de acordo e

07:18.290 --> 07:19.170
também mudarão.

07:19.340 --> 07:25.820
Agora, sem realmente ter um problema, é difícil entender esse conceito, mas confie em mim,

07:25.820 --> 07:29.500
este é um conceito muito importante que reage.

07:29.510 --> 07:35.870
Ele cria muitos códigos realmente livres de bugs e é uma idéia que

07:35.900 --> 07:41.300
você entenderá cada vez mais quando começarmos a codificar em reagir.

07:41.540 --> 07:49.600
A próxima coisa é a idéia do DOM Virtual, você sabe qual é o DOM do Modelo de Objeto de Documento.

07:49.730 --> 07:54.950
E também aprendemos que uma das coisas mais importantes como desenvolvedor é minimizar

07:54.950 --> 08:01.010
a quantidade de manipulação de DOM que fazemos, porque os navegadores da web precisam trabalhar

08:01.010 --> 08:05.320
muito para conseguir isso e reduzir o desempenho da página

08:05.330 --> 08:11.160
da Web, além de aumentar insetos. Penso que esta imagem demonstra o que reage realmente bem antes.

08:11.200 --> 08:15.840
Nós éramos os pintores que dissemos ao DOM exatamente o que fazer.

08:15.910 --> 08:23.180
Remova esse elemento, coloque-o e, em seguida, adicione-o e colore-o desta maneira com react Nós temos esse bot

08:23.200 --> 08:30.030
de reação e o bot de reação cria algo chamado DOM Virtual, o DOM virtual

08:30.070 --> 08:37.050
é apenas um objeto JavaScript e esse objeto JavaScript que apenas descreve nossa local na rede Internet.

08:37.290 --> 08:46.160
O estado atual do site e nós apenas atribuímos a ele o objeto para reagir e o bot de

08:46.160 --> 08:53.240
reação fará alterações automaticamente no DOM e pintará a imagem da maneira mais otimizada possível.

08:53.240 --> 08:56.480
Então, apenas dizemos: ei, esse é o objetivo.

08:56.660 --> 08:58.140
É isso que queremos

08:58.640 --> 09:02.960
no DOM e a reação cuida da manipulação do DOM para você.

09:02.960 --> 09:11.660
Lembre-se de como era chato fazer o seletor de consultas - todos os elementos, pegando o id e, em seguida, fazendo todos esses

09:11.660 --> 09:14.480
manipuladores de eventos reagirem bem, cuida disso.

09:14.480 --> 09:22.430
Então, novamente, o DOM virtual é apenas uma cópia do DOM que está em um objeto JavaScript e, em seguida, reage sob

09:22.430 --> 09:28.910
o capô, apenas muda a visualização e é por isso que ele pode trabalhar fora dos navegadores e

09:28.910 --> 09:35.380
você pode usar coisas como VR e dispositivos móveis, porque reagem é a máquina e onde está a

09:35.390 --> 09:38.960
tela, podemos mudar a tela para o que quisermos.

09:38.960 --> 09:43.670
Finalmente reagir tem um ótimo ecossistema.

09:43.750 --> 09:49.540
É provavelmente um dos maiores ecossistemas de JavaScript no momento e há tantas ferramentas que funcionam

09:49.540 --> 09:56.840
com a reação de fato que a comunidade de desenvolvedores é tão grande que qualquer problema que você tem, provavelmente

09:56.910 --> 10:02.250
existe uma chance de que alguém o tenha. e publicou na Internet e você pode

10:02.250 --> 10:03.630
encontrar soluções para.

10:03.690 --> 10:09.810
Você pode encontrar pacotes de reação no npm, você pode usá-lo com o nó there are web pack e babel que você pode

10:09.810 --> 10:10.770
usar com ele.

10:11.010 --> 10:18.060
É apenas um ecossistema realmente bom que usa a mais recente tecnologia JavaScript para criar sites de

10:18.060 --> 10:20.490
uma maneira elegante e agradável.

10:20.500 --> 10:26.630
Agora, uma coisa sobre a qual quero alertá-lo nesta seção: veremos código como este.

10:27.580 --> 10:30.090
E vai parecer muito estranho no começo.

10:30.250 --> 10:34.900
É da mesma maneira quando você olhou para JavaScript pela primeira vez.

10:35.030 --> 10:37.400
Parecia um mundo totalmente novo.

10:37.400 --> 10:43.130
Quando você olhar para isso pela primeira vez, mas confie em mim sabendo o que você sabe sobre JavaScript, isso

10:43.250 --> 10:44.690
se tornará realmente muito fácil.

10:44.720 --> 10:51.740
Você tem classes que estendem o componente de reação e é assim que construímos componentes.

10:51.980 --> 11:00.020
Temos o construtor novamente que vimos em objetos avançados e, em seguida, cada classe tem uma função de renderização obrigatória que

11:00.110 --> 11:03.860
você apenas diz o que esse relógio deve renderizar.

11:03.890 --> 11:06.970
E como você pode ver, parece que HTML não é.

11:07.400 --> 11:12.020
Não é exatamente HTML, mas a sintaxe é muito semelhante.

11:12.020 --> 11:16.490
Então, mesmo olhando para isso, você vê esse componente do relógio.

11:16.520 --> 11:20.170
Novamente, esse bloco lego retorna uma tag h1

11:20.180 --> 11:27.730
Hello World com uma h2 que diz que é e, novamente, apenas para lhe dar uma dica, você

11:27.730 --> 11:36.580
ouvirá palavras como adereços e componentes de estado e reação, mas estas são apenas sintaxe de linguagem que você vai aprender.

11:36.860 --> 11:39.540
E é realmente muito fácil quando você se acostuma.

11:39.890 --> 11:43.730
Portanto, não se preocupe, tudo isso fará

11:43.820 --> 11:49.290
sentido até o final. E você sabe o que vamos criar para um aplicativo bem legal.

11:49.350 --> 11:57.170
Chama-se Robo Friends e vamos criar este aplicativo que pesquisa bem seus amigos robô e você pode encontrar as

11:57.680 --> 11:59.710
informações de contato deles.

11:59.780 --> 12:03.120
E como você pode ver, ele é atualizado ao vivo.

12:03.290 --> 12:04.800
É super rápido.

12:04.940 --> 12:06.450
É responsivo.

12:06.800 --> 12:08.600
Vai ser muito divertido.

12:08.690 --> 12:14.990
E vamos construir isso muito rápido, apenas para mostrar o quão poderoso é a reação.

12:15.030 --> 12:15.500
Tudo certo.

12:15.540 --> 12:17.770
Estou muito animado para entrar nesta seção.

12:17.850 --> 12:19.400
Você vai se divertir muito.

12:19.530 --> 12:21.020
Vejo você no próximo.
