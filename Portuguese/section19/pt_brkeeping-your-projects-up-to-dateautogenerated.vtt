WEBVTT

00:00.620 --> 00:01.370
Bem vindo de volta.

00:02.230 --> 00:08.970
Acabei de colocar nosso projeto robo friends no GitHub, mas digamos que você esteja baixando este projeto.

00:09.110 --> 00:15.950
Talvez você esteja compartilhando um projeto com outros desenvolvedores, mas digamos que este projeto foi escrito no ano passado.

00:15.950 --> 00:21.500
Como podemos atualizar este projeto se você se lembra de quando olhamos para o pacote.

00:21.500 --> 00:23.090
Dot Jason File.

00:23.090 --> 00:30.020
Temos a versão reativa como dezesseis pontos dois, mas a versão reativa agora é maior.

00:30.020 --> 00:35.750
Então, vamos atualizar este projeto como faria em qualquer outro projeto.

00:35.750 --> 00:39.670
Vou clonar este repositório e vou usar SS H.

00:39.710 --> 00:46.260
Talvez você precise usar HDPs se não tiver essa configuração, mas eu vou usar o SSA apenas para não precisar

00:46.260 --> 00:48.500
digitar minha senha todas as vezes.

00:48.750 --> 00:56.820
Então, eu vou clonar este repositório, dizendo, faça com que os amigos do clone robo sejam incríveis.

00:56.860 --> 01:03.600
Agora, se eu for para a pasta robo friends e abrir isso, é sublime.

01:03.670 --> 01:05.120
Aqui vamos nós.

01:05.170 --> 01:09.620
Temos nosso pacote Jason File, que podemos ver aqui.

01:09.670 --> 01:13.650
Agora, quando costumo baixar um projeto, quero ter certeza de que ele é iniciado.

01:13.650 --> 01:20.990
Então, eu vou dizer que o NPM inicia e certifique-se de que tudo ainda está funcionando e eu recebo um erro porque eu

01:20.990 --> 01:23.270
tenho que primeiro instalar o npm Oh,

01:27.910 --> 01:28.460
garoto.

01:28.600 --> 01:36.730
E recebemos vários erros ou avisos dizendo que auditamos alguns dos seus pacotes e há algumas

01:36.730 --> 01:37.720
vulnerabilidades.

01:37.780 --> 01:38.820
Na verdade, bastante.

01:38.830 --> 01:49.170
E dois, um crítico e podemos executar a correção de auditoria do NPM para corrigir o problema, então vamos copiá-lo e executá-lo novamente

01:55.110 --> 02:01.130
e agora recebo outro problema: vinte e sete vulnerabilidades exigiam revisão manual.

02:01.740 --> 02:07.140
E você vê aqui que é principalmente porque alguns deles exigem o que chamamos de alterações de quebra

02:07.230 --> 02:08.850
que podem prejudicar nosso aplicativo.

02:08.850 --> 02:16.660
E essa é a desvantagem ao atualizar as bibliotecas. Você está usando uma versão mais antiga de uma biblioteca que

02:16.660 --> 02:24.470
pode ter sido alterada e agora quebra seu aplicativo completamente. Às vezes, você quer ir um por um para realmente

02:24.890 --> 02:28.670
verificar e ver quais são as alterações nessas bibliotecas.

02:28.670 --> 02:31.400
Agora, se eu executar o

02:35.160 --> 02:42.550
plot do NPM aqui, ele me dará uma idéia do que são meus problemas agora.

02:42.690 --> 02:54.520
Antes de fazer a auditoria da NPM, corrigir e, em seguida, fazer a força do traço para forçar todas essas alterações, quero falar um pouco sobre

02:54.520 --> 02:56.530
este pacote. Jason, você

02:59.670 --> 03:07.800
vê os scripts de reação, que é o script de criação de aplicativo de reação executado, está desatualizado.

03:07.800 --> 03:14.800
Existe uma versão muito mais alta dos scripts React, e uma versão maior da CIA cria o react.

03:15.000 --> 03:17.190
E o mesmo com reagir.

03:17.190 --> 03:26.540
Então, uma coisa que posso fazer é dizer a atualização do NPM e se eu executar isso e quando eu clicar nesse arquivo,

03:27.930 --> 03:29.060
verifique isso.

03:29.340 --> 03:38.820
Minha versão foi atualizada agora e p. m. atualizar o que faz é olhar para esta versão e

03:38.820 --> 03:44.790
dizer qual é a versão mais alta para a qual posso atualizar no meu caso porque uso esse cartão.

03:44.790 --> 03:51.970
Ele disse: ei, você pode atualizar para a versão mais alta da versão menor.

03:52.050 --> 03:59.960
Portanto, se houvesse uma versão de reação 17, isso não seria atualizado para 17, porque estamos usando a cenoura.

03:59.970 --> 04:10.150
Lembre-se de que podemos usar mais do que se quisermos, mas dessa maneira garantimos que apenas atualizemos o que estiver na versão menor,

04:10.150 --> 04:14.690
o que tende a não ter alterações de última hora.

04:14.740 --> 04:19.610
Por exemplo, quando reagimos 17, é muito provável que ocorram algumas mudanças.

04:19.720 --> 04:19.960
OK.

04:19.990 --> 04:29.120
Portanto, temos a versão react atualizada, mas ainda temos as vulnerabilidades que precisamos corrigir, agora executamos a correção e

04:29.120 --> 04:36.680
a força da auditoria, assumindo que examinamos as mudanças e assumimos que está tudo bem,

04:36.710 --> 04:38.990
tudo ainda deve funcionar.

04:39.290 --> 04:45.080
Então, eu vou executar isso e, novamente, lembre-se de que, ao usar a força, você quer ter

04:45.080 --> 04:47.520
certeza de que realmente analisa as atualizações.

04:47.540 --> 04:53.290
Agora, enquanto isso está acontecendo, outra coisa que eu poderia ter feito com o

04:53.310 --> 05:01.340
React foi até o site do Rea e verificou a versão real. Em vez de fazer isso apenas ou fazer a

05:01.430 --> 05:09.800
atualização do NPM, eu poderia mudar a versão, digamos que a versão 17 seja lançada em reagir dezessete ponto zero ponto dois.

05:09.890 --> 05:16.160
Bem, eu posso mudar isso e empacotar o Jason e executar o npm install

05:19.150 --> 05:21.370
novamente, vamos esclarecer isso.

05:21.370 --> 05:28.310
Vemos aqui que nosso script ReACT agora está atualizado para a versão três, ponto dois.

05:28.330 --> 05:31.460
Essa é a versão mais recente do create react.

05:31.840 --> 05:32.850
Fantástico.

05:32.920 --> 05:40.020
Se eu fizer uma auditoria do NPM mais uma vez, não tenho vulnerabilidades.

05:40.020 --> 05:40.470
Tudo certo.

05:40.470 --> 05:45.290
Parece que tudo está bem, mas temos um problema.

05:45.310 --> 05:48.540
Atualizamos tudo o que temos.

05:48.540 --> 05:57.770
Não há vulnerabilidades, mas, como atualizamos todas essas coisas, nosso projeto ainda funcionará enquanto há uma maneira

05:57.770 --> 05:58.910
de descobrir.

05:59.120 --> 06:03.090
Vamos começar o NPM.

06:03.110 --> 06:03.770
Tudo certo.

06:03.800 --> 06:11.910
O novo aplicativo create react me pediu um navegador de destino, então clicarei sim aqui e veremos isso.

06:11.920 --> 06:14.710
Parece que as coisas ainda estão funcionando.

06:14.710 --> 06:16.090
Bons amigos robos de trabalho.

06:16.090 --> 06:21.460
Se eu abrir as ferramentas do desenvolvedor e for para o console, não haverá erros.

06:21.520 --> 06:30.570
Isso é ótimo. Assim, eu fui capaz de atualizar meu projeto, atualizar meu projeto com todos os reagentes mais recentes, todos os

06:31.320 --> 06:38.470
reagentes mais recentes nos scripts de reação, que é o que o aplicativo de reação cria.

06:38.700 --> 06:43.860
Também temos os fios TAC atualizados e tudo está funcionando bem.

06:45.080 --> 06:50.810
Agora, eu posso enviar essa alteração para obter o hub, para que não tenhamos esses avisos de segurança.

06:50.810 --> 06:51.890
Vamos fazer isso.

06:51.890 --> 06:57.280
Vou dizer "ad get get commit".

06:57.510 --> 07:07.590
Eu direi que corrigir os problemas de segurança das bibliotecas atualizadas para obter o mestre

07:10.400 --> 07:20.770
de origem de envio porque enquanto eu sou o único nesse projeto, posso enviar para Max, senhor.

07:20.930 --> 07:32.030
Agora, se eu voltar para a minha página do github e atualizar, vamos verificar a guia de segurança e

07:32.030 --> 07:40.410
observar que temos zero aberto e zero aberto porque nosso projeto está totalmente atualizado.

07:40.440 --> 07:42.380
Quão legal é isso.

07:42.420 --> 07:49.590
Essa é uma ótima maneira de manter seus projetos atualizados e as vulnerabilidades de segurança corrigidas.

07:49.890 --> 07:57.750
Porém, quanto mais bibliotecas você tiver, mais dependências terá, mais manutenção será necessária para garantir que,

07:57.750 --> 08:04.380
toda vez que você atualize uma biblioteca, ela não quebre seu aplicativo.

08:04.380 --> 08:10.920
Nosso aplicativo robo friends era bastante pequeno, mas você pode imaginar que isso é um problema cada vez maior à medida que os aplicativos

08:10.980 --> 08:11.290
crescem.

08:11.940 --> 08:17.550
Mas espero que você tenha aprendido um pequeno truque que levou muito tempo para aprender e minha carreira

08:17.550 --> 08:18.300
de desenvolvedor.

08:18.390 --> 08:26.400
Essa é a maneira mais fácil de manter seus projetos atualizados e seguros, basta atualizar o pacote.

08:26.530 --> 08:27.690
No arquivo.

08:27.930 --> 08:29.520
Vou ver no próximo por.
