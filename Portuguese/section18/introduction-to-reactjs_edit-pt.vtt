WEBVTT

00:01.250 --> 00:07.580
Bom trabalho fazendo isso até agora as coisas vão ficar cada vez mais divertidas começando nesta seção porque

00:07.820 --> 00:15.530
agora estamos aprendendo ferramentas reais que empresas reais usam e que vão te contratar em 2018 e desenvolvimento

00:15.560 --> 00:23.540
também se torna muito mais rápido porque estamos usando essas ferramentas para nos fazer construir sites mais rápido e melhor.

00:23.540 --> 00:28.770
Então vamos falar sobre reagir. O que temos antes de reagir?

00:28.870 --> 00:36.890
Bem, como eu mencionei antes, tivemos jQuery. jQuery foi como você se lembra escrita muito imperativa

00:36.890 --> 00:41.270
código era como misturar ingredientes sequencialmente.

00:41.270 --> 00:44.480
Se isso acontecer, faça isso e faça isso.

00:44.480 --> 00:50.070
Mas também se isso acontecer, faça isso e crie muitas inconsistências.

00:50.300 --> 00:58.430
E se você se lembrar da seção de manipulação do DOM Bem, isso é realmente muito difícil e constantemente mantendo

00:58.430 --> 01:06.280
acompanhar o que mudou e o que mudar é uma grande confusão e cria um desenvolvimento muito lento.

01:06.740 --> 01:12.830
E como o seu site fica cada vez mais complexo, torna-se muito difícil de escalar, o que significa que se torna

01:12.830 --> 01:16.360
muito difícil para equipes de desenvolvedores gerenciá-lo.

01:17.450 --> 01:24.050
Agora reagir foi criado no Facebook como você sabe que o Facebook é um aplicativo muito grande e muitas coisas precisam

01:24.050 --> 01:25.670
acontecer para que funcione bem.

01:25.820 --> 01:33.230
E eles tiveram esse problema e criaram reagir como forma de resolver esse problema e poder ter uma ferramenta

01:33.290 --> 01:39.410
que permite que eles construam sites de uma forma previsível agradável que você pode ter vários desenvolvedores trabalhando

01:39.410 --> 01:40.630
nele ao mesmo tempo.

01:42.410 --> 01:49.130
E eu gosto de usar a analogia de uma máquina de pão usando reagir é mais ou menos assim que você joga

01:49.130 --> 01:58.980
Os ingredientes e reagir fazem toda essa magia sob o capô e colocam um site.

01:59.080 --> 02:01.670
Então é muito confiável e muito consistente.

02:02.500 --> 02:11.680
E faz uma coisa realmente muito bem e essa é a visão que consegue fazer nossos sites o DOM

02:12.810 --> 02:18.520
mude de formas previsíveis fáceis de escalar e fáceis de gerenciar.

02:18.660 --> 02:24.690
E a beleza da reação é que, porque é apenas a visão, isso não significa necessariamente que é apenas para

02:24.690 --> 02:25.710
navegadores.

02:26.010 --> 02:32.200
Na verdade, uma reação pode ser usada com dispositivos móveis para criar aplicativos nativos.

02:32.220 --> 02:34.760
É usado em aplicativos de realidade virtual.

02:35.010 --> 02:41.310
Você pode construir aplicativos de área de trabalho com reagir em qualquer lugar que tenha uma visão bem reagir pode usá-lo.

02:41.340 --> 02:48.450
E grandes empresas como eu mencionei antes do uso do Facebook e Instagram reagem e Netflix usa reagir sempre

02:48.450 --> 02:52.750
você navega através das escolhas de filmes que estão usando reagir embaixo do capô.

02:53.040 --> 02:57.140
É uma ferramenta muito útil e com alta demanda.

02:57.210 --> 03:03.300
Então estou animado para falar sobre reagir e ensinar-lhe esta valiosa habilidade nesta seção.

03:03.360 --> 03:09.390
Agora, a fim de entender reagir, há algumas coisas que queremos passar e estes são princípios

03:09.390 --> 03:14.850
que são muito valiosos e que foram aprendidos ao longo dos anos pelos desenvolvedores.

03:14.850 --> 03:21.360
Uma é a ideia de pensar em componentes até agora, acabamos de construir websites.

03:21.620 --> 03:27.250
Tudo é apenas um arquivo JavaScript um arquivo CSS um arquivo HTML.

03:27.380 --> 03:34.360
Mas não seria bom se a web fosse uma rede desses pequenos componentes?

03:34.370 --> 03:41.180
Pense neles como blocos de Lego onde todos constroem um bloco de Lego específico e você apenas combina estes

03:41.180 --> 03:44.600
Blocos de Lego para criar seu site.

03:44.810 --> 03:50.780
Essa é a ideia de que reagir estabelecido vamos usar isso como um exemplo.

03:50.900 --> 04:00.800
Você primeiro tem átomos que, como você pode ver aqui, são ícones e pequenos elementos indivisíveis

04:00.800 --> 04:03.350
seu site, como imagens.

04:03.500 --> 04:07.780
Há algum texto e você divide estes em átomos.

04:07.790 --> 04:16.040
A partir daí, você forma moléculas ou combina átomos que possuem funcionalidade semelhante, como a navegação

04:16.040 --> 04:17.090
bar abaixo aqui.

04:17.090 --> 04:25.270
Você combina átomos individuais para adicionar alguma funcionalidade e então você tem organismos novamente um pouco

04:25.270 --> 04:29.470
maior que as moléculas que combinam com uma funcionalidade de maior escala.

04:29.560 --> 04:31.530
E finalmente você tem modelos.

04:31.840 --> 04:37.950
A combinação desses organismos para dar uma ideia de como seu aplicativo ou site deve ser.

04:37.960 --> 04:39.580
Finalmente você tem suas páginas.

04:39.640 --> 04:43.140
Essa é a página do seu aplicativo.

04:43.350 --> 04:52.650
E se você pensa em componentes como esta imagem demonstra bem você é capaz de construir pequenos componentes pequenos

04:53.190 --> 04:58.200
que você pode reutilizar e colocar em diferentes partes da página da web.

04:58.260 --> 05:05.550
Por exemplo, este botão de volta aqui se eu construir um componente reagir que é o botão de volta agora eu posso usá-lo em

05:05.670 --> 05:06.600
múltiplas páginas.

05:06.600 --> 05:13.110
E eu não tenho que reescrever o código se eu quiser que a barra de navegação seja usada em diferentes áreas de

05:13.110 --> 05:13.590
a aplicação.

05:13.590 --> 05:19.670
Bem, novamente eu não preciso reescrever o código que eu escrevo uma vez e eu posso reutilizá-lo de fato eu posso até

05:19.710 --> 05:21.020
Compartilhe isso com o mundo.

05:21.300 --> 05:28.900
E essa ideia de componentes faz reagir SURPREENDENTE porque aqui mesmo eu tenho um site que reage

05:28.920 --> 05:32.280
componentes construídos por alguém e podemos reutilizá-los.

05:32.490 --> 05:36.290
E não é apenas CSS e HTML.

05:36.330 --> 05:42.310
Mas funcionalidade real, como barras de navegação e formulários de login.

05:42.320 --> 05:51.480
Eu posso apenas baixar este componente reagir e anexá-lo ao meu site e por causa da maneira como reagir é

05:51.480 --> 05:56.690
estruturado, ele realmente não precisa saber sobre o resto da página é apenas o seu próprio bloco lego

05:56.880 --> 06:02.540
que funciona por si só, reduzindo as dependências de outras partes do site.

06:02.580 --> 06:06.390
Eu posso apenas ligar isso em qualquer lugar que eu quiser.

06:06.400 --> 06:12.310
Outro conceito importante com reação é a ideia de fluxo de dados unidirecional.

06:12.390 --> 06:19.200
A melhor maneira de descrevê-lo é olhando para esta árvore como estrutura aqui você vê que nós temos um

06:19.200 --> 06:25.110
pais algumas crianças e, em seguida, essas crianças têm seus próprios filhos e essas crianças têm seus próprios

06:25.110 --> 06:26.460
crianças.

06:26.650 --> 06:34.240
E a ideia de reagir é que os dados fluem de cima para baixo e nunca o contrário.

06:34.570 --> 06:38.380
se esses vermelhos, vamos chamá-los de componentes, mudar.

06:38.530 --> 06:44.170
Bem, nesse caso, apenas seus filhos sabem sobre a mudança.

06:44.170 --> 06:50.290
Os pais não se importam com a mudança porque a direção do fluxo de dados é apenas

06:50.290 --> 06:51.440
sempre a jusante.

06:51.490 --> 06:58.750
Então, se voltarmos à ideia de componentes, se tivéssemos um site construído sobre componentes e essa fosse a página

06:58.980 --> 07:06.310
e estes eram organismos e depois moléculas então átomos.

07:06.380 --> 07:11.110
Bem, nesse caso, os componentes vermelhos mudam e somente os que estão abaixo dele.

07:11.120 --> 07:18.290
Como você pode ver aqui em azul, saiba dessa mudança e com base nisso eles agirão de acordo e mudarão

07:18.290 --> 07:19.170
também.

07:19.340 --> 07:25.820
Agora, sem realmente ter um problema, é difícil entender esse conceito, mas confie em mim, isso é muito

07:25.820 --> 07:29.500
conceito importante que reage trazido.

07:29.510 --> 07:35.870
Ele cria muito código livre de bugs e é uma idéia que você entenderá cada vez mais

07:35.900 --> 07:41.300
quando começamos a codificar em reagir.

07:41.540 --> 07:49.600
A próxima coisa é a idéia do Virtual DOM você sabe o que o DOM é o modelo de objeto de documento.

07:49.730 --> 07:54.950
E também aprendemos que uma das coisas mais importantes como desenvolvedor é minimizar a quantidade de

07:54.950 --> 08:01.010
Manipulação de DOM que fazemos porque os navegadores da Web bem tem que ter que trabalhar muito duro para alcançar

08:01.010 --> 08:05.320
isso e reduz o desempenho da página da Web e aumenta

08:05.330 --> 08:11.160
insetos. Eu acho que essa imagem demonstra o que a reação faz muito bem de antemão.

08:11.200 --> 08:15.840
Nós éramos os pintores que dissemos ao DOM exatamente o que fazer.

08:15.910 --> 08:23.180
Remover este elemento, em seguida, colocar isso em e, em seguida, também adicionar isso e cor isto desta forma com reagir

08:23.200 --> 08:30.030
Nós temos esse bot de reação e o bot de reação cria algo chamado de Virtual DOM, Virtual DOM é

08:30.070 --> 08:37.050
apenas um objeto JavaScript e esse objeto JavaScript que apenas descreve nosso site.

08:37.290 --> 08:46.160
O estado atual do site e nós apenas damos a ele esse objeto para reagir e o bot de reação automaticamente

08:46.160 --> 08:53.240
faça alterações no DOM e pinte a imagem da melhor forma possível.

08:53.240 --> 08:56.480
Então nós apenas dizemos que este é o objeto.

08:56.660 --> 08:58.140
Isto é o que queremos

08:58.640 --> 09:02.960
no DOM e o reagente cuida da manipulação do DOM para você.

09:02.960 --> 09:11.660
Lembre-se de como foi chato fazer o seletor de consultas - tudo, então pegue os elementos por id e então faça todos esses manipuladores de eventos.

09:11.660 --> 09:14.480
bem reagir cuida disso.

09:14.480 --> 09:22.430
Então, novamente, o DOM virtual é apenas uma cópia do DOM que está em um objeto JavaScript e, em seguida, reage por baixo

09:22.430 --> 09:28.910
o capô apenas muda a visão e é por isso que é capaz de trabalhar fora dos navegadores e você pode usar

09:28.910 --> 09:35.380
coisas como VR e e dispositivos móveis, porque reagir é a máquina e o que a tela está em

09:35.390 --> 09:38.960
bem podemos mudar a tela para o que quisermos.

09:38.960 --> 09:43.670
Finalmente reagir tem um ótimo ecossistema.

09:43.750 --> 09:49.540
É provavelmente um dos maiores ecossistemas em JavaScript agora e existem tantas ferramentas que

09:49.540 --> 09:56.840
trabalhar com reagir, de fato, a comunidade de desenvolvedores é tão grande que qualquer problema que você tem lá

09:56.910 --> 10:02.250
é provavelmente uma chance que alguém já teve e postou na Internet e você pode

10:02.250 --> 10:03.630
encontrar soluções para.

10:03.690 --> 10:09.810
Você pode encontrar pacotes de reagir em npm você pode usá-lo com o nó há pacote web e babel que você

10:09.810 --> 10:10.770
pode usar com isso.

10:11.010 --> 10:18.060
É apenas um ecossistema muito bom que usa a mais recente tecnologia JavaScript para construir sites em um

10:18.060 --> 10:20.490
muito legal maneira elegante.

10:20.500 --> 10:26.630
Agora, uma coisa sobre a qual quero avisá-lo nesta seção, vamos ver um código como este.

10:27.580 --> 10:30.090
E vai parecer muito estranho no começo.

10:30.250 --> 10:34.900
É como quando você olhou para o JavaScript pela primeira vez.

10:35.030 --> 10:37.400
Parecia um mundo totalmente novo e diferente.

10:37.400 --> 10:43.130
Será quando você olhar para isso, mas confie em mim sabendo o que você sabe sobre JavaScript isso se torna

10:43.250 --> 10:44.690
realmente muito fácil.

10:44.720 --> 10:51.740
Você tem classes que estendem o componente de reação e é assim que construímos componentes.

10:51.980 --> 11:00h.020
Temos o construtor novamente que vimos em objetos avançados e, em seguida, cada classe tem uma renderização obrigatória

11:00.110 --> 11:03.860
função que você acabou de dizer o que este relógio deve renderizar.

11:03.890 --> 11:06.970
E como você pode ver, parece que o HTML não é.

11:07.400 --> 11:12.020
Não é exatamente HTML, mas a sintaxe é muito semelhante.

11:12.020 --> 11:16.490
Então, mesmo olhando para isso, você vê esse componente do relógio.

11:16.520 --> 11:20.170
Mais uma vez este lego só retorna um Hello World

11:20.180 --> 11:27.730
h1 tag com um h2 que diz que é e, em seguida, o tempo novamente apenas para lhe dar um heads up você vai

11:27.730 --> 11:36.580
ouvir palavras como adereços e componentes de estado e reagir, mas estas são apenas sintaxes de linguagem que você aprenderá.

11:36.860 --> 11:39.540
E é bem fácil quando você se acostuma.

11:39.890 --> 11:43.730
Então não se preocupe, isso tudo vai fazer sentido

11:43.820 --> 11:49.290
até o final disso. E você sabe o que vamos construir um aplicativo bem legal.

11:49.350 --> 11:57.170
Chama-se Robo Friends e vamos construir este aplicativo que bem pesquisa seus amigos robôs

11:57.680 --> 11:59.710
e você pode encontrar suas informações de contato.

11:59.780 --> 12:03.120
E como você pode ver, atualiza ao vivo.

12:03.290 --> 12:04.800
É super rápido.

12:04.940 --> 12:06.450
É responsivo.

12:06.800 --> 12:08.600
Vai ser muito divertido.

12:08.690 --> 12:14.990
E nós vamos construir isso bem rápido apenas para mostrar o quão poderoso é o reagir.

12:15.030 --> 12:15.500
Tudo bem.

12:15.540 --> 12:17.770
Estou muito animado para entrar nesta seção.

12:17.850 --> 12:19.400
Você vai se divertir muito.

12:19.530 --> 12:21.020
Eu vejo você no próximo.

