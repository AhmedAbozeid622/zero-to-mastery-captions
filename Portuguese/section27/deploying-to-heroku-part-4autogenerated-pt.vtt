WEBVTT

00:00.450 --> 00:07.400
Bem vindo de volta. Neste vídeo, finalmente vamos colocar nosso aplicativo front end em um servidor para que

00:07.430 --> 00:15.780
Tudo está agora fora do nosso computador on-line e podemos compartilhar nosso projeto com o mundo para começar.

00:15.780 --> 00:25.420
Podemos voltar para o Heroku e no nosso painel podemos simplesmente ver que temos o nosso servidor, mas queremos

00:25.420 --> 00:36.220
para criar um novo aplicativo e este novo aplicativo, podemos chamá-lo de cérebro inteligente. Nós vamos escolher a região em nós vamos clicar

00:36.250 --> 00:45.370
Criar aplicativo e nos dá realmente muito bons comandos como configurar tudo o que podemos fazer Heroku

00:45.460 --> 00:47.530
entrar.

00:47.630 --> 00:51.250
Então vamos fazer isso a partir do nosso front end inteligente.

00:52.510 --> 00:57.140
Eu vou dizer o login do Heroku

01:04.060 --> 01:06.680
entre com meu email e minha senha

01:09.510 --> 01:16.650
e voltando para o leia-me, vemos que nos certificamos de que o nosso git está configurado, e que podemos adicionar

01:16.650 --> 01:25.320
nosso controle remoto para Heroku gid remoto inteligente cérebro direito.

01:25.420 --> 01:31.630
Se obtivermos o traço remoto V e esses forem os mesmos passos que nós executamos com nosso servidor de API também.

01:31.690 --> 01:35.310
Nós vemos que temos Heroku em seguida.

01:35.350 --> 01:40.720
Nós queremos fazer o git add commit e depois empurrar o Hiroku Master.

01:40.740 --> 01:41.880
Tudo bem.

01:41.970 --> 01:47.580
E um lembrete aqui de que mesmo que não tenhamos mudado nada no front end, temos que correr

01:47.580 --> 01:51.870
e git add e git commit.

01:52.050 --> 01:55.140
Caso contrário, as alterações não aparecerão no Hiroku.

01:55.140 --> 02:01.590
Então vamos apenas dizer implantar por agora e então podemos apenas para empurrar o mestre Heroku.

02:05.850 --> 02:07.810
Parece um pouco fácil demais.

02:07.920 --> 02:14.890
Bem, vamos deixar isso correr e ver uma vez que é implantado, se está tudo funcionando. Tudo bem, nossa implantação está pronta.

02:14.900 --> 02:17.130
E olha que temos um novo link.

02:17.270 --> 02:20.050
Então vamos rodar o Heroku aberto

02:23.840 --> 02:31.570
Tudo bem, olha que temos um novo link no nosso front end, mas vamos ver se funciona se eu entrar com

02:31.580 --> 02:35.970
Teddy no gmail dot com fazer um dois três

02:38.680 --> 02:42.760
assinar em.

02:42.850 --> 02:43.270
Tudo bem.

02:43.270 --> 02:46.780
E olhe para isso. Teddy está carregado.

02:46.810 --> 02:52.050
Ele já fez uma contagem antes com o rosto. Vamos fazer outro só para ter certeza de que funciona.

02:54.650 --> 02:57.150
Clique em detectar.

02:57.200 --> 03:04.450
Não, não quero salvar a senha de Teddy, mas veja que tudo está funcionando.

03:04.450 --> 03:06.290
Parecia quase fácil demais.

03:06.300 --> 03:07.210
Tão legal.

03:07.270 --> 03:17.790
Vamos recapitular mais uma vez o que acabamos de fazer. Criamos três servidores separados ou três computadores separados

03:18.360 --> 03:26.980
onde cada um desses retângulos individuais está sendo executado. Nós temos um postgreSQL, um servidor de nós e um front

03:26.980 --> 03:32.200
final e todos eles estão funcionando exatamente como estavam em nosso computador.

03:32.200 --> 03:39.280
Mas desta vez em produção. Viva para o mundo. E tudo que tivemos que fazer, foi apenas mudar alguns números para

03:39.280 --> 03:44.770
certifique-se de que estamos apontando essas setas para que o front end saiba que é onde o nosso servidor

03:44.770 --> 03:52.570
é eo servidor sabe que é onde nossos bancos de dados e estas são apenas pequenas configurações que é

03:52.570 --> 03:54.660
realmente dependente de cada plataforma

03:54.700 --> 03:59.100
você trabalha com, mas os conceitos subjacentes são os mesmos.

03:59.100 --> 04:02.250
Você está apenas apontando para o endereço para a localização dessas coisas.

04:02.550 --> 04:03.880
Mas ai garoto.

04:04.650 --> 04:08.880
Bem, não é tão louco como temos todas essas coisas para funcionar?

04:08.880 --> 04:16.370
Eu lembro da minha primeira vez na minha carreira quando consegui conectar os pontos e realmente construir cada um deles.

04:16.740 --> 04:18.200
Eu mesmo.

04:18.240 --> 04:19.430
Foi um abridor de olhos.

04:19.440 --> 04:26.100
Isso abriu um novo mundo e me fez realmente entender como tudo está conectado e se movendo

04:26.100 --> 04:27.380
a partir desse ponto.

04:27.480 --> 04:38.100
Eu entendi a maioria das coisas e toda ferramenta ou nova tecnologia é apenas uma adição a essa ideia pré-existente.

04:38.340 --> 04:45.990
E desde que você entenda essa arquitetura subjacente, esse conceito subjacente de diferentes servidores

04:45.990 --> 04:53.640
conectando uns aos outros o resto é apenas extensões disso.

04:53.650 --> 04:56.170
Então poderíamos melhorar este aplicativo.

04:56.200 --> 04:57.130
Absolutamente.

04:57.190 --> 04:59.800
Você pode fazer muitas coisas com este aplicativo.

04:59.950 --> 05:07.570
Podemos querer ser um pouco mais seguros e, talvez, nem mesmo ter nossa chave de API em nosso código para

05:07.570 --> 05:09.760
nosso servidor.

05:09.850 --> 05:12.910
Podemos criar algo como variáveis ​​ambientais para isso.

05:12.910 --> 05:23.590
Por exemplo, em Heroku, se formos ao nosso aplicativo cérebro inteligente ou vamos para o nosso backend nosso oceano radiante agora

05:23.590 --> 05:31.460
aqui, se vamos para as configurações e vá para revelar configuração VAR, temos nossas variáveis ​​ambientais aqui

05:32.030 --> 05:33.120
definido para nós.

05:33.170 --> 05:35.820
Você se lembra do postgres como tentamos nos conectar a ele.

05:35.840 --> 05:40.180
E tivemos um ponto de env do ponto do processo DATABASE_URL.

05:40.190 --> 05:46.770
Bem, podemos adicionar o nosso próprio, se quiséssemos, podemos dizer API clarifai

05:51.420 --> 06:05.250
adicione a chave da API que temos em nosso backend aqui clique em ADD e agora temos isso disponível para nós

06:05.940 --> 06:18.900
como um processo dot dot env clarifai API que é eu acredito que eu chamo de e esta é uma camada extra de

06:18.900 --> 06:26.900
segurança você não quer nada sensível como endereços ou senhas ou chaves de API em sua base de código.

06:26.940 --> 06:28.650
Então alguém pode espiar isso.

06:28.800 --> 06:34.800
Isso é algo que você vai se acostumar com mais e mais e espero que com o que você sabe sobre ambiental

06:34.800 --> 06:35.820
variáveis.

06:35.820 --> 06:36.920
Isso faz sentido.

06:38.000 --> 06:47.120
Mas, por enquanto, porque este é um aplicativo simples, não precisamos adicionar nada disso. Vamos reverter as alterações.

06:50.740 --> 06:59.820
E apenas tenha orgulho de nós mesmos por criar um aplicativo incrível e implementá-lo na vida real.

07:01.790 --> 07:08.850
Agora, compartilhe este link com todos os seus amigos e familiares e diga a eles o quão incrível você é. Eu vou te ver

07:08.870 --> 07:10.380
no próximo.

07:10.440 --> 07:10.860
Tchau tchau.
