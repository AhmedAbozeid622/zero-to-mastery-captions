WEBVTT

00:00.450 --> 00:07.400
Bem vindo de volta. Neste vídeo, finalmente colocaremos nosso aplicativo front-end em

00:07.430 --> 00:15.780
um servidor para que tudo esteja fora do nosso computador on-line e possamos compartilhar nosso projeto com o mundo para começar.

00:15.780 --> 00:25.420
Podemos voltar ao Heroku e, em nosso painel, podemos simplesmente ver que temos nosso servidor, mas queremos criar um novo

00:25.420 --> 00:36.220
aplicativo e esse novo aplicativo que podemos chamar de cérebro inteligente. Escolheremos a região em que clicaremos em Criar aplicativo

00:36.250 --> 00:45.370
e nos fornecerá comandos realmente muito bons de como configurar tudo o que podemos fazer no

00:45.460 --> 00:47.530
login do Heroku.

00:47.630 --> 00:51.250
Então, vamos fazer isso no nosso front end do cérebro inteligente.

00:52.510 --> 00:57.140
Vou dizer que o login do Heroku efetue login

01:04.060 --> 01:06.680
com meu e-mail e minha

01:09.510 --> 01:16.650
senha e, voltando ao leia-me, vemos que temos certeza de que nosso git está

01:16.650 --> 01:25.320
configurado e que podemos adicionar nosso controle remoto ao cérebro inteligente remoto do Heroku gid remote .

01:25.420 --> 01:31.630
Se obtivermos o traço remoto V e estas são as mesmas etapas que executamos com nosso servidor de API também.

01:31.690 --> 01:35.310
Vemos que temos o Heroku em seguida.

01:35.350 --> 01:40.720
Queremos fazer o git add commit e depois pressionar o Hiroku Master.

01:40.740 --> 01:41.880
Tudo certo.

01:41.970 --> 01:47.580
E um lembrete aqui de que, embora não tenhamos alterado nada no front

01:47.580 --> 01:51.870
end, precisamos executar e git add e git commit.

01:52.050 --> 01:55.140
Caso contrário, as alterações não aparecerão no Hiroku.

01:55.140 --> 02:01.590
Então, digamos implantar por agora e então podemos apenas empurrar o Heroku master.

02:05.850 --> 02:07.810
Parece um pouco fácil demais né.

02:07.920 --> 02:14.890
Bem, vamos deixar isso correr e ver uma vez implantado, se está tudo funcionando. Tudo bem, nossa implantação está concluída.

02:14.900 --> 02:17.130
E veja que temos um novo link.

02:17.270 --> 02:20.050
Então, vamos abrir o

02:23.840 --> 02:31.570
Heroku. Tudo bem, veja se temos um novo link em nosso front end, mas vamos ver

02:31.580 --> 02:35.970
se funciona se eu entrar com o Teddy no

02:38.680 --> 02:42.760
gmail dot com e fazer um dois três.

02:42.850 --> 02:43.270
Tudo certo.

02:43.270 --> 02:46.780
E olha isso. Teddy está carregado.

02:46.810 --> 02:52.050
Ele já fez uma contagem antes com o rosto. Vamos fazer outro apenas para garantir que funcione.

02:54.650 --> 02:57.150
Clique em detectar.

02:57.200 --> 03:04.450
Não, eu não quero que ele salve a senha do Teddy, mas veja que tudo está funcionando.

03:04.450 --> 03:06.290
Parecia quase fácil demais, certo.

03:06.300 --> 03:07.210
Tão legal.

03:07.270 --> 03:17.790
Vamos recapitular mais uma vez o que acabamos de fazer. Criamos três servidores separados ou três computadores separados em que

03:18.360 --> 03:26.980
cada um desses retângulos individuais está em execução. Temos um postgreSQL, um servidor de nó e um

03:26.980 --> 03:32.200
front end e todos eles estão funcionando exatamente como estavam no nosso computador.

03:32.200 --> 03:39.280
Mas desta vez em produção. Viva, para o mundo. E tudo o que tivemos que fazer

03:39.280 --> 03:44.770
foi alterar alguns números para garantir que apontamos essas setas, para que o front-end saiba que é

03:44.770 --> 03:52.570
onde está o nosso servidor e o servidor sabe que é onde estão nossos bancos de dados e essas são apenas pequenas configurações

03:52.570 --> 03:54.660
isso depende muito de cada

03:54.700 --> 03:59.100
plataforma com a qual você trabalha, mas os conceitos subjacentes são os mesmos.

03:59.100 --> 04:02.250
Você está apenas apontando o endereço para a localização dessas coisas.

04:02.550 --> 04:03.880
Mas oh garoto.

04:04.650 --> 04:08.880
Bem, não é tão louco como temos todas essas coisas para trabalhar.

04:08.880 --> 04:16.370
Lembro-me da primeira vez em minha carreira em que consegui conectar os pontos e realmente construir

04:16.740 --> 04:18.200
cada um deles.

04:18.240 --> 04:19.430
Foi um abridor de olhos.

04:19.440 --> 04:26.100
Ele abriu um mundo totalmente novo e me fez realmente entender como tudo está conectado e avançando a

04:26.100 --> 04:27.380
partir desse ponto.

04:27.480 --> 04:38.100
Eu entendi a maioria das coisas e toda ferramenta ou nova tecnologia é apenas uma adição a essa idéia preexistente.

04:38.340 --> 04:45.990
E desde que você entenda essa arquitetura subjacente, esse conceito subjacente

04:45.990 --> 04:53.640
de servidores diferentes se conectando, o resto são apenas extensões disso.

04:53.650 --> 04:56.170
Então, poderíamos melhorar este aplicativo.

04:56.200 --> 04:57.130
Absolutamente.

04:57.190 --> 04:59.800
Você pode fazer muitas coisas com este aplicativo.

04:59.950 --> 05:07.570
Podemos querer ser um pouco mais seguros e talvez nem ter nossa chave de API em nosso

05:07.570 --> 05:09.760
código para nosso servidor.

05:09.850 --> 05:12.910
Podemos criar algo como variáveis ambientais para isso.

05:12.910 --> 05:23.590
Por exemplo, no Heroku, se formos ao nosso aplicativo de cérebro inteligente ou vamos ao nosso backend nosso oceano radiante agora aqui,

05:23.590 --> 05:31.460
se formos às configurações e revelarmos os VARs de configuração, temos nossas variáveis ambientais aqui definidas

05:32.030 --> 05:33.120
para nós.

05:33.170 --> 05:35.820
Você se lembra do postgres como tentamos nos conectar a ele.

05:35.840 --> 05:40.180
E tivemos um processo ponto env ponto DATABASE_URL.

05:40.190 --> 05:46.770
Bem, podemos adicionar nossos próprios, se quisermos, podemos dizer que API clarifai

05:51.420 --> 06:05.250
adicione a chave de API que temos em nosso back-end aqui, clique em ADD e agora temos isso disponível para nós como um processo dot env dot

06:05.940 --> 06:18.900
dot clarifai da API, que é eu acredito no que Eu chamo o e essa é uma camada extra de segurança que você não

06:18.900 --> 06:26.900
quer nada sensível, como endereços, senhas ou chaves de API na sua base de código.

06:26.940 --> 06:28.650
Então alguém pode espiar.

06:28.800 --> 06:34.800
Isso é algo com o qual você vai se acostumar cada vez mais e, com sorte, com o que sabe

06:34.800 --> 06:35.820
sobre variáveis ambientais.

06:35.820 --> 06:36.920
Isso faz sentido.

06:38.000 --> 06:47.120
Mas, por enquanto, como este é um aplicativo simples, não precisamos adicionar nada, reverteremos as alterações.

06:50.740 --> 06:59.820
E apenas tenha orgulho de nós mesmos por criar um aplicativo incrível e implantá-lo na vida real.

07:01.790 --> 07:08.850
Agora, compartilhe este link com todos os seus amigos e familiares e diga a eles como você é incrível. Vejo você no

07:08.870 --> 07:10.380
próximo.

07:10.440 --> 07:10.860
Tchau tchau.
