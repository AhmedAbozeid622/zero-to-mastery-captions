WEBVTT

00:00.520 --> 00:01.780
Bem vindo de volta.

00:01.780 --> 00:08.160
Nós paramos no último vídeo com este log de console da consulta KNEX que acabamos de fazer.

00:08.200 --> 00:16.000
Agora isto à direita é o que o KNEX faz. Ele constrói nossa instrução SQL para nós.

00:16.300 --> 00:26.230
Então, o que nós apenas consoles logados, foi a declaração de consulta que postgres ou KNEX criado para postgres.

00:26.340 --> 00:32.100
Você pode ver aqui que o construtor é um objeto que tem todas as informações que precisamos falar com

00:32.100 --> 00:34.670
o cérebro inteligente e fazer essa consulta.

00:34.770 --> 00:43.890
Se eu realmente quiser acessar algo dos usuários, terei que fazer o nosso amigo. Then () porque

00:44.010 --> 00:49.170
isso retorna uma promessa e recebemos nossa resposta.

00:49.170 --> 00:55.950
No nosso caso, serão dados, esses dados - mais uma vez, não precisamos fazer o Json porque não estamos enviando através do HTTP -

00:55.950 --> 01:03.040
nós recuperamos os dados e se apenas consolamos esses dados, vamos ver o que temos.

01:03.140 --> 01:09.420
Salve e desça e é uma matriz vazia.

01:09.460 --> 01:10.510
Isso é um bom sinal.

01:10.510 --> 01:13.480
Ainda não temos usuários, mas estamos recebendo uma resposta.

01:14.320 --> 01:15.270
Então vamos fazer isso.

01:15.490 --> 01:21.960
Vamos criar uma instrução para inserir usuários quando eles se registrarem.

01:22.090 --> 01:28.390
Eu vou mudar isso para a variável DB apenas para que não fique confuso.

01:28.630 --> 01:31.740
E vamos manter isso como banco de dados.

01:31.740 --> 01:37.710
Tudo bem, vamos ao endpoint de registro e vou minimizar esse banco de dados porque vamos

01:37.710 --> 01:40.440
para parar de usá-lo e excluí-lo depois.

01:42.680 --> 01:49.490
E se formos nos registrar, vemos isso agora em vez de fazer o banco de dados .users.push na variável

01:49.730 --> 01:59.490
podemos apenas usar o KNEX, podemos remover isso e fazer o ponto DB - Bem, vamos ter que inserir,

01:59.490 --> 01:59.920
certo.

02:00.120 --> 02:06.780
Vamos dar uma olhada nos documentos do KNEX e ver e ver métodos claros - inserir.

02:06.790 --> 02:08.670
Tudo bem, olhe para esta ótima documentação.

02:08.670 --> 02:13.410
Podemos apenas descobrir exatamente o que precisamos. Para inserir algo, temos o método insert com

02:13.410 --> 02:17.580
os dados e o que queremos, ou o que vai ser devolvido.

02:17.580 --> 02:28.610
Não podemos simplesmente copiar e colar isso, para que possamos apenas fazer o DB nos usuários que desejamos inserir e ele apenas lê muito bem.

02:28.610 --> 02:29.730
Eu amo o KNEX.

02:30.030 --> 02:38.570
Queremos inserir um objeto e esse objeto vai conter o que quer que tenhamos nas informações dos usuários.

02:38.610 --> 02:47.400
Então, queremos inserir um email, caso em que haverá email. Nós temos o nome, que novamente tem o nome

02:47.430 --> 02:50.010
que vemos do corpo.

02:50.010 --> 02:57.600
Nós também temos a senha, mas lembre-se que em nossa tabela não temos a senha sob os usuários, então vamos

02:57.600 --> 02:58.740
deixe isso em branco.

02:58.740 --> 03:06.960
E se voltarmos ao exemplo da nossa mesa aqui e nos conectarmos de volta, veremos que o ID do usuário é automaticamente

03:06.960 --> 03:12.710
nome gerado, e-mail, as entradas são padronizadas como zero, então não precisamos inserir nada.

03:13.080 --> 03:17.780
E juntou-se a data em que eles se juntaram.

03:17.800 --> 03:32.320
Então, vamos apenas fazer uma nova data e, uma vez inserimos, vamos apenas fazer um .then (console.log) para ver o que

03:32.320 --> 03:34.290
nós voltamos.

03:34.330 --> 03:41.390
Eu vou salvar. Não recebemos erros que sejam bons e podemos voltar ao nosso aplicativo. Na verdade, apenas

03:41.390 --> 03:48.350
porque é mais rápido, em vez de se registrar aqui, vamos abrir o carteiro e

03:48.350 --> 03:52.870
O carteiro já tem todos os nossos comandos anteriores aqui, o que eu amo.

03:52.940 --> 04:03.610
Então, vamos clicar no registrador e apontar com o corpo de Ann Apples e vamos clicar em enviar.

04:03.630 --> 04:08.790
Tudo bem, recebemos uma resposta, mas lembre-se de que nunca mudamos uma resposta, mas se voltarmos para o servidor

04:10.220 --> 04:12.550
obtemos inserção de resultado.

04:12.650 --> 04:13.460
Tudo bem.

04:13.460 --> 04:14.660
Parece que funcionou.

04:14.870 --> 04:25.260
Se voltarmos ao banco de dados e selecionarmos estrelas dos usuários, como isso é legal.

04:25.490 --> 04:34.250
Temos Ann que foi inscrito como nosso primeiro usuário, com entradas padrão de 0. Incrível.

04:34.340 --> 04:35.980
É como mágica.

04:35.990 --> 04:42.430
Quão simples foi simplesmente usar o KNEX e o postgres e criar o nosso primeiro banco de dados.

04:42.460 --> 04:43.170
Tudo bem.

04:43.250 --> 04:47.870
No próximo vídeo, vamos trabalhar nessa resposta.

04:47.870 --> 04:48.740
Eu vou te ver nessa.

04:49.270 --> 04:49.650
Tchau tchau.
