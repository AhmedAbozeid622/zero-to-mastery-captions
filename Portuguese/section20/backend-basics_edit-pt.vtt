WEBVTT

00:00.540 --> 00:05.330
É hora de aprender outro tópico interessante e vamos entrar no básico do Backend.

00:05.610 --> 00:10.650
Mas eu queria mostrar o que nós cobrimos até agora no Front-End.

00:10.840 --> 00:17.950
Começamos com este diagrama de "Quem é google.com?" e passando pelo ISP perguntando

00:17.950 --> 00:20.810
o servidor de nomes de domínio para o endereço IP.

00:20.950 --> 00:29.460
Em seguida, pedimos o endereço IP para encontrar os servidores do Google e, em seguida, os servidores do Google nos fornecem o nosso HTML,

00:29.470 --> 00:34.400
Arquivo CSS e JavaScript que podemos obter um através de HTML

00:34.420 --> 00:43.040
E, em seguida, as tags de link e as tags de script para obter o CSS e o Javascript. O navegador lê o arquivo para

00:43.040 --> 00:51.860
nos, o HTML, CSS e o motor V8 ou o motor JavaScript do navegador usa-o para ler o JavaScript

00:51.920 --> 00:58.510
e nós manipulamos o DOM usando JavaScript.

00:58.520 --> 01:05.300
Também aprendemos que a localização do servidor é importante, quantas viagens fazemos, quantas solicitações HTTP

01:05.300 --> 01:06.590
nós fazemos é importante.

01:06.590 --> 01:08.560
O tamanho dos arquivos é importante.

01:08.810 --> 01:16.660
E aprendemos algumas dessas soluções, como redes de entrega de conteúdo, tendo o script em apenas um arquivo bundle.js

01:16.820 --> 01:21.230
e também minimizando nossos arquivos.

01:23.740 --> 01:33.040
E então nós também aprendemos sobre essa nova tecnologia chamada AJAX, onde podemos apenas buscar usuários, conversar com

01:33.040 --> 01:40.750
servidor enquanto o usuário ainda estiver navegando no site e receber uma resposta JSON para atualizar o

01:40.750 --> 01:43.050
website em tempo real.

01:43.390 --> 01:49.730
E essa imagem que começamos parece muito mais clara do que no primeiro vídeo, não é?

01:49.780 --> 01:53.210
Nós entendemos o que um desenvolvedor Front-End faz.

01:53.230 --> 02:00.760
Vemos o poder do React e também sabemos que essas setas significam simplesmente solicitações HTTP; uma linguagem que

02:01.090 --> 02:08.310
Tanto o Front-End quanto o Back-End podem falar e usar o AJAX e o JSON são capazes de fazer isso dinamicamente.

02:09.570 --> 02:15.930
Agora o Back-End e o papel de um desenvolvedor de Back-End. Eles são os encarregados de trabalhar

02:15.930 --> 02:24.330
com servidores e bancos de dados. E um servidor é responsável por tudo o que você recebe no navegador.

02:24.650 --> 02:32.140
Eu posso perguntar pelo navegador qualquer coisa; como "Ir para o google.com.br". Mas no final do dia o servidor web

02:32.170 --> 02:38.890
pode apenas me dar o que quiser. Se isso vai me mandar para o twitter.com em vez do google.com,

02:38.920 --> 02:42.500
bem, isso é com o servidor. Tudo o que precisamos,

02:42.520 --> 02:47.740
nós apenas fazemos o pedido e esperamos que o servidor nos dê o que pedimos. E se você lembrar

02:47.980 --> 02:57.740
um servidor é apenas um computador; um computador que está em algum lugar do mundo apenas ouvindo esse HTTP

02:57.880 --> 03:02.770
conexão, pedindo para ver se temos algum arquivo.

03:02.830 --> 03:11.800
O mais básico dos servidores e você pode ter usado isso antes talvez usando Hostgator um site de hospedagem

03:11.860 --> 03:19.120
ou até mesmo sites WordPress e colocá-los no Hostgator. Ele usa algo chamado 'LAMP STACK'.

03:19.120 --> 03:28.330
Isso foi útil para os sites mais básicos, ou seja, (se) você quer apenas uma informação simples

03:28.330 --> 03:28.920
local na rede Internet

03:29.050 --> 03:33.460
Talvez um site WordPress simples, onde nada complexo está acontecendo.

03:33.550 --> 03:41.380
Nada profissional realmente. O que eles usaram foi um servidor Linux, que é o sistema operacional.

03:41.740 --> 03:47.280
Assim como eu tenho o Mac, o Linux será o sistema operacional do servidor.

03:47.430 --> 03:48.810
Nós temos o servidor Apache.

03:48.810 --> 03:51.980
O Apache é um servidor, novamente

03:52.080 --> 03:58.500
um programa escrito por alguém que é realmente muito bom em aceitar pedidos e enviar

03:58.500 --> 04:01.070
respostas de arquivos.

04:01.200 --> 04:03.990
Nós tínhamos MySQL, que é banco de dados.

04:03.990 --> 04:09.230
Talvez você tenha uma seção de comentários no seu blog e precise armazenar esses dados,

04:09.260 --> 04:16.680
esse seria o banco de dados. E então nós tivemos o PHP que era apenas uma linguagem que você pode usar para ter

04:16.680 --> 04:23.040
um pouco de lógica em seus servidores. E o servidor, assim como o seu computador, tinha um sistema de arquivos onde todos os

04:23.040 --> 04:29.140
os arquivos do seu site são armazenados. E o Apache acabou de fazer isso.

04:29.330 --> 04:31.790
Basta ouvir para ver se alguém entrou

04:31.790 --> 04:37.650
funfunwebsite.com no URL. Se tiver esse pedido,

04:37.770 --> 04:42.270
O padrão será o index.html.

04:42.720 --> 04:51.260
Se alguém acessou o site funfunwebsite.com/about, ele fornecerá apenas about.html. Foi muito

04:51.260 --> 04:53.640
simples servidor muito fácil.

04:53.750 --> 05:00.860
É o que a maioria dos sites de hospedagem, como o Hostgator, usam. E você pode estar perguntando "Posso baixar o Apache

05:00.860 --> 05:05.150
servidor e apenas executar meu próprio servidor do seu computador? "

05:05.160 --> 05:07.320
Sim você pode absolutamente.

05:07.490 --> 05:11.630
Mas sem ter um software de servidor,

05:12.080 --> 05:14.210
bem, nosso computador está inacessível.

05:14.360 --> 05:21.350
Ninguém na Internet pode acessar nosso computador porque nosso computador não é um servidor, (ele) não tem código que

05:21.350 --> 05:25.570
diz "Ei, se eu receber um pedido, envie isso para fora."

05:25.710 --> 05:33.930
Mas, como vimos nos vídeos anteriores, podemos criar servidores falsos para testar nossos sites.

05:33.960 --> 05:36.710
Agora esta era a maneira antiga de fazer as coisas.

05:36.720 --> 05:39.530
Não havia muita lógica nisso, você não poderia realmente expandir isso.

05:39.720 --> 05:46.190
Você não pode ter sites como o Facebook ou o Amazon usando esse tipo de sistema.

05:46.350 --> 05:51.940
Como eu disse, isso era para sites muito básicos.

05:52.000 --> 05:59.310
Agora, uma nova pilha, algo que chamamos de servidor de aplicativos, parece algo como isso.

05:59.380 --> 06:06.580
Agora, um servidor de aplicativos é diferente do nosso exemplo anterior, porque ao contrário de usar o servidor Apache

06:06.610 --> 06:14.050
isso é muito simples e apenas requer resposta, apenas forneça arquivos para lá e para trás. Com algo parecido

06:14.050 --> 06:23.750
um servidor Node no qual você tem o Node.js em execução, você pode escrever um script e dizer "Se eu receber uma solicitação

06:23.750 --> 06:33.230
para um login, verifique o nome de usuário do usuário no banco de dados. Se coincidir, então deixe-me saber e, em seguida,

06:33.320 --> 06:42.260
envie uma resposta por JSON ao aplicativo Front-End. E podemos personalizar o que esses scripts dizem.

06:42.260 --> 06:50.990
Até agora só conseguimos usar JavaScript na web. Mas agora, com o Node.js, podemos usá-lo em um servidor,

06:51.680 --> 06:55.670
em um computador que não está executando um navegador da web. Com o Node.js,

06:55.670 --> 07:02.630
podemos escrever JavaScript onde, se eu publicasse algo no Facebook, esse post no Facebook, quando eu clicasse 'post',

07:02.630 --> 07:08.060
ele será enviado para o Node Server que está atendendo a solicitações.

07:09.000 --> 07:18.060
Ele dirá que "Andrei acabou de postar esta mensagem no formato JSON". O arquivo Node.js e Express.js

07:18.180 --> 07:27.000
no servidor vai ler e vai dizer "Ah, queremos armazenar este post em nosso banco de dados." e isto

07:27.000 --> 07:32.460
banco de dados vai armazenar esse post, para que quando eu voltar na próxima vez ainda está lá.

07:32.460 --> 07:39.360
E então, uma vez feito isso, ele responderá com sucesso dizendo que "Meu post é um sucesso" e agora

07:39.360 --> 07:42.060
exibe na minha linha do tempo.

07:42.420 --> 07:49.410
Eu posso editar a postagem, posso excluir a postagem e, novamente, o Node Server pode excluir essa postagem do banco de dados e

07:49.410 --> 07:52.520
em seguida, envie uma resposta e remova-a da linha do tempo.

07:52.560 --> 07:59.070
Você só tem o poder de interagir constantemente com o Front-End. Nos próximos vídeos

07:59.070 --> 08:03.570
vamos construir um projeto que incorpore tudo isso.

08:03.630 --> 08:07.320
Nós vamos criar um servidor de nós usando um Express,

08:07.320 --> 08:14.610
Nós vamos criar nosso próprio banco de dados onde armazenamos informações do usuário. E nós vamos estar usando o AJAX

08:14.610 --> 08:20.400
e JSON para constantemente criar, entrar, atualizar informações do usuário.

08:20.460 --> 08:26.880
Então nós temos uma compreensão deste sistema completo. Se você está construindo sites e aplicativos da web,

08:26.910 --> 08:34.540
bem, você não está realmente construindo isso. Como desenvolvedor da Web, você está criando algo mais semelhante a isso:08:34.750 --> 08:38.300
mas você pode estar se perguntando:"É isso?"

08:38.320 --> 08:44.420
"Este é o fim último para o que uma infra-estrutura de servidor Back-End pode fazer?"

08:44.770 --> 08:53.760
Bem, não, se você é o Facebook, o Twitter ou a Amazon, você faria algo assim e não ficaria muito preocupado

08:53.760 --> 08:57.210
aqui, podemos explicar o que está acontecendo.

08:57.280 --> 09:01.740
Você está apenas fazendo cópias do seu computador.

09:01.750 --> 09:11.660
Então pense em cada um desses retângulos como um computador. E porque o Facebook recebe muita gente, isso faz

09:11.660 --> 09:15.720
uma cópia do seu servidor e colocá-lo talvez na Ásia,

09:15.860 --> 09:22.640
e um na África, para que todos da Ásia possam acessar este e todos da África possam

09:22.640 --> 09:23.530
acesse este,

09:23.630 --> 09:30.530
em vez de todo mundo acessar um servidor e sobrecarregar o sistema. Porque eles têm o mesmo servidor

09:30.560 --> 09:35.910
é apenas copiar esses arquivos e colocá-lo em um servidor em outro lugar.

09:35.970 --> 09:36.570
É isso aí.

09:36.650 --> 09:43.900
E é isso que chamamos de escala. Mas eles também ainda usam o mesmo banco de dados, de modo que, se a partir deste servidor

09:43.900 --> 09:51.460
alguém atualiza as informações, bem, essa pessoa aqui que usa esse servidor, esse usuário ainda

09:51.460 --> 09:55.920
ter acesso às informações que a pessoa que usa esse servidor atualizou.

09:55.960 --> 10:04.640
E finalmente, temos algo chamado "Load Balancer". E isso é semelhante ao que o Apache ou o NginX

10:05.240 --> 10:14.090
faria. Onde ouve uma solicitação HTTP e percebe que "Hmm, esse aqui na América do Norte

10:14.090 --> 10:15.700
está realmente muito ocupado agora. "

10:15.720 --> 10:22.940
"Vou transferir essa pessoa para esse servidor aqui". e apenas equilibra a carga dos servidores.

10:24.040 --> 10:29.290
e isso pode continuar crescendo, tendo cada vez mais servidores, à medida que você tem mais e mais usuários.

10:29.410 --> 10:33.390
E finalmente você pode até ter vários bancos de dados.

10:33.400 --> 10:40.600
Novamente, esses quadrados representam um computador; um computador que está executando um banco de dados, um computador que

10:40.600 --> 10:48.380
executando um servidor, um computador que está executando um balanceador de carga. E você pode ter vários bancos de dados, novamente,

10:48.400 --> 10:52.220
para que eles não fiquem sobrecarregados com todos esses pedidos.

10:52.420 --> 10:59.250
E cada um mantém uma cópia do outro. E isso é algo que vamos falar mais sobre quando chegarmos

10:59.250 --> 11:02.030
a seção Nó e a seção Banco de Dados.

11:02.100 --> 11:08.160
Mas quero mostrar a você a ideia por trás dos servidores. Para trabalhar com o Back-End,

11:08.370 --> 11:18.050
o objetivo principal é garantir que, quando fizermos uma solicitação HTTP do front-end, recebamos uma resposta

11:18.470 --> 11:22.100
volte o mais rápido possível com dados corretos.

11:22.370 --> 11:28.680
E é isso que o desenvolvimento do Back-End é. Certificando-se de que retornamos esses recursos para que nosso front-end

11:28.700 --> 11:35.870
A equipe pode ter certeza de que receberemos exatamente o que precisamos.

11:35.880 --> 11:42.090
Então eu quero que você fique empolgado porque nas próximas seções vamos nos concentrar no Back-End como

11:42.090 --> 11:49.920
bem como o front-end. Vamos criar um aplicativo que use todas essas tecnologias em um só lugar.

11:49.920 --> 11:57.210
Então você sabe exatamente como tudo está conectado e você tem uma idéia de como ir de algo como

11:57.210 --> 12:04.290
isso para um dia ter algo assim.

12:04.400 --> 12:05.210
Eu vou ver no próximo, tchau-tchau.
