WEBVTT

00:01.210 --> 00:06.990
Bem vindo de volta. Vamos rever o que temos até agora em nosso aplicativo.

00:07.160 --> 00:14.430
Criamos nosso componente de aplicativo que contém alguns componentes de reação personalizados

00:14.450 --> 00:24.240
que nós construímos. E no último vídeo, conseguimos finalmente obter nossa resposta da API 'Clarifai'. Se nós

00:24.240 --> 00:32.400
voltar para 'Clarifai', vemos que a detecção de rosto deles tem uma pequena caixa quadrada que detecta.

00:32.640 --> 00:40.010
Mas, se você observar a API e a resposta que recebemos, na verdade não obtemos essa caixa quadrada.

00:40.080 --> 00:48.300
Tudo o que temos são essas caixas delimitadoras. E com base no rosto e quantos rostos ele detecta,

00:48.500 --> 00:50.390
Dá-lhe estas caixas delimitadoras.

00:53.100 --> 00:56.370
E você pode ler por aqui.

00:56.580 --> 01:05.570
Mas estes estão apenas dizendo que a linha superior está em 22% da imagem.

01:05.580 --> 01:12.080
Então, essas são porcentagens que podemos usar. Mas para podermos criar nossa própria caixa assim,

01:12.330 --> 01:19.070
bem, precisamos apenas ver, quais estilos estão usando, mas fazendo 'inspecionar'.

01:19.110 --> 01:24.100
Como você lembra, podemos ver que eles têm uma cláusula de 'caixa delimitadora' aqui.

01:24.360 --> 01:30.030
Então, nosso aplicativo podemos fazer algo semelhante e, em seguida, vamos ter que calcular com base na resposta onde

01:30.270 --> 01:37.260
podemos criar essas caixas porque, bem, ter apenas a exibição do número para nossos usuários não significa muito,

01:37.260 --> 01:38.760
é legal ter esse facebox.

01:38.940 --> 01:41.660
Então vamos trabalhar nisso nesse vídeo.

01:41.890 --> 01:48.700
Se voltarmos ao nosso aplicativo, primeiro queremos dizer isso bem, com certeza adicionaremos um novo "estado" e

01:48.700 --> 01:56.240
nós chamamos de "caixa". E esta "caixa" será apenas um objeto vazio para começar.

01:56.370 --> 02:00.710
E esta "caixa" irá conter os valores que recebemos.

02:01.580 --> 02:05.120
No caso de uma resposta,

02:07.980 --> 02:13.510
será a "linha superior", "coluna da esquerda", "linha de baixo" e "coluna da direita".

02:14.310 --> 02:16.680
Então, como podemos fazer isso?

02:16.680 --> 02:23.980
Isso requer um pouco de pensamento de nossa parte, mas podemos começar com a criação de uma função. E esta função

02:23.980 --> 02:29.460
pode dizer 'calculateFaceLocation'

02:32.260 --> 02:38.010
e este 'calculateFaceLocation' receberá alguns 'dados'.

02:39.330 --> 02:44.280
E por enquanto vamos apenas mantê-lo como uma função vazia.

02:44.510 --> 02:51.620
Mas sabemos disso, queremos chamar essa função de 'calculateFaceLocation' com base nas entradas que recebemos

02:51.620 --> 02:54.910
de 'Clarifai'.

02:54.930 --> 03:06.750
Então, no nosso caso, com a resposta que eles nos dão, queremos usar essa resposta, e chamar

03:06.750 --> 03:15.910
'calculateFaceLocation' com os dados de 'resposta'.

03:16.040 --> 03:20.030
E mais uma vez porque estamos usando classes aqui, terá que fazer,

03:23.120 --> 03:27.030
'este' ponto.

03:27.110 --> 03:30.110
Eu também acho que esta função parece um pouco confusa agora.

03:31.200 --> 03:33.250
Então, vou mudar algumas coisas.

03:33.420 --> 03:38.420
Primeiro, usando o ES6, podemos apenas fazer as funções de seta aqui.

03:44.830 --> 03:45.600
Isso é muito melhor.

03:49.250 --> 03:55.580
E em vez de usar este 'erro (err)', podemos realmente com uma 'promessa' sempre que você tiver um ponto 'então' você pode fazer

03:55.580 --> 03:56.730
um ponto 'pegar'.

03:56.900 --> 04:01.370
E isso é um 'err' (erro) no caso de algo falhar.

04:01.370 --> 04:05.600
No nosso caso, podemos apenas "consolar o log de pontos".

04:05.850 --> 04:12.330
Este 'err' (erro).

04:12.500 --> 04:14.680
Então isso já parece um pouco mais limpo.

04:15.640 --> 04:16.900
Mas precisamos definir, oop!

04:20.330 --> 04:26.730
e esqueci-me de um suporte aqui e agora também não precisamos disso. ESTÁ BEM.

04:27.020 --> 04:31.890
Então, nós sabemos que isso vai receber uma 'resposta' que é a caixa delimitadora.

04:33.330 --> 04:41.610
Mas esta 'resposta' será recebida enquanto consolamos a última vez, que está recebendo a 'caixa delimitadora'.

04:41.610 --> 04:45.660
Por enquanto, não vamos nos preocupar em ter múltiplos rostos na imagem que vamos pegar

04:45.990 --> 04:55.650
a primeira 'caixa delimitadora'. Novamente, se voltarmos para a API "Clarify", vemos que, dependendo das regiões,

04:55.650 --> 04:56.960
na verdade, obter uma matriz.

04:56.960 --> 05:03.580
Então, várias pessoas na imagem terão várias faces.

05:03.670 --> 05:10.990
No nosso caso, estamos apenas nos preocupando com um, apenas tentando obter uma 'caixa delimitadora' em torno de um rosto.

05:10.990 --> 05:19.560
Então, nós queremos mudar essa 'resposta' para dizer 'dados' e podemos ter uma constante chamada

05:22.840 --> 05:24.570
'clarifaiFace' é igual a

05:27.400 --> 05:34.570
este 'data', eu vou fazer isso um pouco menor para que possamos ver. Agora dentro daqui, o que queremos

05:34.570 --> 05:35.480
fazer primeiro.

05:35.680 --> 05:38.490
Bem, nós vamos querer fazer alguma manipulação DOM.

05:38.620 --> 05:51.700
Então, a melhor coisa que podemos fazer é dizer que 'imagem const' é igual a 'documento' ponto 'getElementById' e nós podemos criar

05:51.700 --> 06:00.370
um elemento ou podemos criar um id chamado 'inputimage' e esta 'imputimage' que estamos pegando vai

06:01.790 --> 06:02.520
esteja aqui.

06:03.270 --> 06:09.660
Esta imagem que liga o 'imageUrl'. Então a imagem que é exibida no nosso aplicativo. Então podemos criar

06:09.660 --> 06:19.720
um 'id' aqui e vamos dizer 'image' ou 'inputimage'.

06:19.730 --> 06:27.410
Então agora esta 'inputimage' está bem aqui nós a pegamos e nós queremos, como você se lembra desta 'caixa delimitadora'

06:27.410 --> 06:32.180
é uma porcentagem da imagem.

06:32.180 --> 06:41.390
Então, se é o ponto dois dois (0.22), isso significa que está em 20% de qualquer altura ou largura das imagens.

06:42.050 --> 06:52.980
No nosso caso, podemos dizer que com certeza queremos ter a largura da nossa imagem, dizendo a 'imagem' ponto 'largura'.

06:53.150 --> 06:57.600
E porque isso vai ser uma string e queremos fazer alguns cálculos sobre isso vamos envolvê-lo em

06:57.600 --> 06:58.470
um número.

06:58.470 --> 07:04.650
Desta forma nós nos certificamos de que é um número, e então faremos 'height' também da imagem que acabamos de

07:04.650 --> 07:06.320
agarrou.

07:09.020 --> 07:15.060
E você sabe, podemos apenas consolar o log agora para ver que estamos fazendo tudo certo, 'width' e 'height'.

07:16.480 --> 07:27.550
Então vamos tentar isso. Eu vou salvar, voltar para a imagem ou para o aplicativo, pegue esta imagem de amostra, coloque-o

07:27.550 --> 07:32.800
em, pressione "Detectar" e vamos olhar para o console.

07:35.450 --> 07:37.610
'getelement', oh! Eu soletrei isso errado.

07:39.330 --> 07:40.450
Graças a Deus pelo console.

07:40.480 --> 07:42.210
Eu admito, não posso soletrar hoje.

07:42.330 --> 07:43.120
Ai está.

07:43.380 --> 07:44.390
Vamos tentar de novo.

07:48.950 --> 07:50.510
Abra e veremos

07:50.510 --> 07:52.740
quinhentos e quatrocentos e noventa e sete.

07:52.850 --> 07:53.080
Tudo bem.

07:53.090 --> 07:57.270
Estamos pegando a altura e a largura da imagem, isso é perfeito.

07:57.470 --> 08:04.720
E como você sabe isso é 500 porque nós dissemos que é 500, lembre-se se formos para 'Face Recognition' e nós temos

08:04.710 --> 08:06.950
com 500 pixels.

08:06.950 --> 08:12.470
E a razão pela qual eu não faço apenas 500 aqui é que, bem, se alguém aparecer talvez um designer e

08:12.530 --> 08:16.270
decide mudar isso, não será afetado aqui.

08:16.280 --> 08:17.850
É sempre vai calcular isso.

08:18.820 --> 08:19.370
Tudo bem.

08:19.430 --> 08:22.320
Então nós temos a largura e a altura.

08:22.340 --> 08:29.410
Também temos a caixa delimitadora do 'Clarifai', que está bem aqui.

08:29.480 --> 08:33.590
Então, vamos receber isso e precisamos fazer um pouco de cálculo.

08:35.500 --> 08:36.880
E eu não vou mentir.

08:36.910 --> 08:42.790
Isso me levou cerca de uma hora e eu decidi não incluí-lo neste vídeo porque era só eu batendo

08:42.790 --> 08:45.420
meu cérebro com um pouco de matemática.

08:45.580 --> 08:53.740
Então eu estou cortando para mim tentando descobrir a matemática para a solução. Mas vou explicar exatamente como

08:53.740 --> 08:55.260
funciona.

08:55.300 --> 09:05.010
Queremos retornar aqui, um objeto, e esse objeto será o que vai preencher o estado 'box'.

09:06.650 --> 09:16.100
Agora este objeto primeiro precisa descobrir o primeiro ponto, o segundo ponto, o terceiro ponto e

09:16.100 --> 09:24.780
quarto ponto, ao redor do rosto e, em seguida, vamos apenas envolvê-lo em uma borda. Mais uma vez, se voltarmos para o

09:24.790 --> 09:28.130
'Clarifai' API e inspecionar,

09:31.170 --> 09:35.900
vemos que a "caixa delimitadora" está fazendo algo semelhante.

09:35.910 --> 09:37.640
E vamos usar alguns desses estilos.

09:40.870 --> 09:52.270
Nós vamos dizer que o leftcolumn esquerdo (lectCol) vai ser o 'clarifaiFace' que recebemos bem aqui.

09:52.350 --> 10:02.070
E, como você se lembra, isso tem uma propriedade 'coluna da esquerda' e agora a coluna da esquerda (coluna da esquerda) é a porcentagem da coluna

10:02.070 --> 10:02.570
largura.

10:02.700 --> 10:05.710
Então, se multiplicarmos pela "largura" que temos aqui,

10:06.000 --> 10:12.630
bem, que é 500, vamos obter a largura da imagem real exibida e onde a esquerda

10:12.630 --> 10:14.260
coluna deve ser.

10:14.280 --> 10:20.250
Então 'largura' e a próxima linha vai ser o 'topRow'

10:23.070 --> 10:31.530
e a linha superior vai ter a coluna 'top_row' ou desculpe o 'top_row' não a coluna e vai

10:31.610 --> 10:43.480
tem a "altura". Novamente, a linha superior diz que a altura é a porcentagem da altura da nossa imagem.

10:44.050 --> 10:58.830
Agora o 'rightColumn' será a subtração da 'largura' do 'clarifaiFace' ponto 'right_column' ponto 'largura'

10:59.780 --> 11:03.720
ou multiplicado pela 'largura'.

11:03.750 --> 11:12.240
Então, novamente, porque a coluna da direita está deste lado, queremos obter o número que é a porcentagem total

11:12.810 --> 11:15.760
menos a largura a partir do lado esquerdo.

11:19.130 --> 11:28.150
E, finalmente, com o 'bottomRow', vai fazer algo semelhante, mas em vez de altura e vai ser o

11:28.160 --> 11:30.390
'clarifaiFace' 'bottom_row'

11:34.380 --> 11:38.170
multiplicado por 'altura'.

11:38.200 --> 11:38.690
Tudo bem.

11:38.800 --> 11:45.130
Hã! isso foi muita matemática, isso é tão louco quanto nós vamos conseguir com a nossa matemática. E eu vou te mostrar

11:45.130 --> 11:49.720
como eu criei esses números, um pouco mais tarde, uma vez que temos as caixas delimitadoras e eu posso mostrar

11:49.720 --> 11:53.190
como você pode brincar no console.

11:53.200 --> 12:00.200
Então agora que temos isso, queremos preencher o estado 'box' com esses valores.

12:00.330 --> 12:12.440
Então, talvez, eu possa criar uma outra função, outro método nesta classe que diz 'displayFacebox'. Não

12:12.450 --> 12:16.190
o maior nome para uma função, mas é o que eu acabei de inventar.

12:16.680 --> 12:20.460
E isso vai receber esse valor de retorno.

12:24.900 --> 12:37.230
E vai dizer 'este' ponto 'setState' para igual 'caixa', 'caixa'. E apenas um lembrete com o ES6, você

12:37.230 --> 12:38.730
pode realmente fazer isso.

12:38.730 --> 12:42.920
Mas só porque isso está claro, por enquanto, vamos continuar assim.

12:42.930 --> 12:43.700
Tudo bem.

12:43.800 --> 12:49.760
Então, temos alguns erros aqui, então vamos verificá-los.

12:49.950 --> 12:52.570
Oh! e é, porque eu fiz ponto e vírgula aqui,

12:52.890 --> 12:57.190
Claro que alguns de vocês estavam assistindo a este vídeo e dizendo, por que ele está colocando ponto-e-vírgula lá?

12:57.270 --> 13:01.990
Eu não gosto de colocar o último. Muito melhor.

13:01.990 --> 13:02.350
Tudo bem.

13:02.350 --> 13:09.170
Então o 'estado' agora é definido com a 'caixa'.

13:09.410 --> 13:12.720
Hmmm! mas até agora tudo está funcionando.

13:12.800 --> 13:19.610
Voltando ao nosso 'onButtonSubmit', então quando clicamos no botão, queremos calcular o local da face com

13:19.610 --> 13:28.360
a resposta, este 'calculateFaceLocation' vai executar esta função, ele vai retornar um objeto

13:30.450 --> 13:34.170
e este objeto é necessário pelo método 'displayFaceBox'.

13:35.220 --> 13:43.450
Então parece que, o que quer que isso retorne, é esse parâmetro "box".

13:43.630 --> 13:56.010
Então, para tornar as coisas limpas, podemos apenas imprimir aqui dizendo 'this display FaceBox' e quebrar essa função

13:58.270 --> 13:58.950
por aí.

13:58.990 --> 14:02.710
Então este 'calculateFaceLocation' recebe uma resposta,

14:03.950 --> 14:11.770
retorna este objeto e esse objeto retornado agora está indo para 'displayFacebox'.

14:12.140 --> 14:17.900
Mais uma vez a beleza do javascript é que, podemos usar funções como estas e lê muito bem também.

14:17.960 --> 14:23.750
Uma vez que recebemos a resposta, calculamos a função interna que é 'calculateFaceLocation' e depois

14:23.870 --> 14:25.910
'displayFacebox'.

14:25.960 --> 14:26.880
Deus! esse é um nome terrível

14:26.890 --> 14:28.970
mas como eu disse por enquanto está tudo bem.

14:29.330 --> 14:29.670
Tudo bem.

14:29.710 --> 14:30.410
Havia muito.

14:30.430 --> 14:33.730
Vamos testar nosso código para nos certificar de que estamos no caminho certo.

14:33.790 --> 14:38.980
Eu vou 'console log' aqui o objeto 'box'.

14:39.230 --> 14:44.550
E se voltarmos ao rosto, colados aqui

14:47.600 --> 14:49.780
clique e abra o console.

14:49.850 --> 14:52.490
Nós temos um objeto.

14:52.820 --> 14:55.100
E tudo bem, nós temos alguns números.

14:55.340 --> 14:56.330
Isso é bom.

14:56.330 --> 15:04.340
Vamos tentar adicionar algumas CSS para que esses números apareçam no rosto. Deve corresponder à largura.

15:04.400 --> 15:14.610
Mas olhando para esses números, não parece tão ruim. Se você se lembra da largura da imagem é de 500 pixels e se

15:14.610 --> 15:22.120
a coluna da esquerda está em 131 pixels, o que provavelmente está por aqui.

15:22.130 --> 15:23.600
E isso não parece tão ruim.

15:23.700 --> 15:29.790
Novamente vamos ter algum CSS para verificar isso. Estamos calculando as coisas certas.

15:29.800 --> 15:37.420
Agora, o que queremos fazer é definitivamente queremos passar este 'estado da caixa' para o nosso componente 'faceRecognition'.

15:38.140 --> 15:47.640
Então, podemos apenas fazer 'caixa', vai ter 'este' ponto 'estado' ponto 'caixa'.

15:47.810 --> 15:49.500
E agora dentro do 'FaceRecognition',

15:52.840 --> 16:01.910
agora temos um novo prop, que podemos usar e este prop pode ser usado criando um novo 'div'.

16:02.420 --> 16:07.010
E esse 'div' vai ficar completamente vazio, porque não estamos exibindo nada além de

16:07.010 --> 16:09.030
uma borda em torno deste 'div'.

16:09.350 --> 16:17.870
Então, o que eu vou fazer, na verdade, é copiar o que 'clarifai' tem, chamando uma classe 'bounding box'

16:18.650 --> 16:21.410
e vamos criar um novo arquivo CSS

16:24.370 --> 16:32.490
'FaceRecognition.css' e só então não esqueça, eu vou importar agora.

16:37.140 --> 16:42.030
E essa classe que tem a 'caixa delimitadora',

16:48.790 --> 16:49.410
terá

16:49.420 --> 16:52.540
bem, vamos ver o que eles têm aqui.

16:52.940 --> 16:54.740
Eu só vou copiar isso, na verdade,

16:58.590 --> 16:59.880
cole aqui.

17:02.800 --> 17:06.910
E há algumas coisas que, como você vê, porque são cross-talk, elas não estão realmente sendo

17:06.910 --> 17:07.490
usava.

17:07.510 --> 17:10.020
Então nós podemos, podemos removê-los.

17:10.030 --> 17:16.270
Você também vê que eles têm os prefixos do navegador para ouvir por enquanto, não estamos muito preocupados em usar outros

17:16.270 --> 17:20.880
navegadores, para que possamos excluí-lo. Se você quiser manter aqueles lá, tudo bem também.

17:25.550 --> 17:27.380
Agora que temos isso, vamos ver o que acontece.

17:27.380 --> 17:29.870
Eu adicionei a 'caixa delimitadora' ao redor do 'div'

17:32.650 --> 17:40.270
e agora, se você olhar para a classe 'div', verá que eles adicionaram um estilo, que é o que podemos querer

17:40.270 --> 17:46.650
para fazer, com nossas propriedades de caixa 'top', 'right', 'bottom', 'left' que acabamos de calcular.

17:46.690 --> 17:48.100
Então vamos fazer isso.

17:48.100 --> 17:53.780
Eu vou dizer 'estilo' igual, novamente,

17:53.970 --> 18:00.950
vamos devolver um objeto e isso terá 'top' como 'box'

18:03.590 --> 18:07.690
e eu não lembro o nome, então vamos voltar aqui.

18:09.150 --> 18:12.430
Linha superior esquerda, coluna esquerda, linha superior,

18:12.440 --> 18:13.640
coluna da direita, linha de baixo.

18:13.940 --> 18:16.810
Vamos ver se consigo me lembrar disso. Coluna esquerda,

18:17.910 --> 18:18.730
Certo

18:18.780 --> 18:22.000
vai ser 'box' dot

18:22.110 --> 18:22.300
ESTÁ BEM.

18:22.320 --> 18:33.370
Eu definitivamente não consigo me lembrar disso. 'topRow' e depois vai ser 'bottom', que terá a coluna da direita

18:34.170 --> 18:38.530
e à esquerda, que terá a linha inferior.

18:42.930 --> 18:49.470
Quando eu adiciono a 'caixa' porque são propriedades do objeto da caixa.

18:49.710 --> 18:54.220
E você já viu que eu cometi o erro, aqui você vê que, deixou eu tenho o fundo.

18:54.280 --> 18:56.000
Então vamos consertar isso.

18:56.140 --> 19:03.210
Queremos que a linha superior seja o 'topRow' aqui.

19:04.590 --> 19:09.500
Queremos que a coluna da direita seja "coluna da direita (rightCol)".

19:09.640 --> 19:14.820
E a linha inferior é a 'bottomRow'

19:18.180 --> 19:25.480
e finalmente a coluna da esquerda (leftcol). Vamos salvar e ver o que acontece.

19:25.500 --> 19:29.600
Quer voltar para o nosso rosto.

19:29.610 --> 19:31.910
Vamos ver se eu ainda tenho, não, eu não tenho o link.

19:31.920 --> 19:39.080
Deixe-me copiar e colar.

19:39.080 --> 19:40.430
Olhe para isso.

19:40.430 --> 19:43.170
Está funcionando.

19:43.260 --> 19:46.020
Vamos apenas inspecionar isso

19:49.060 --> 19:54.570
e em primeiro lugar, o quão legal é isso, que conseguimos que isso funcionasse.

19:54.880 --> 19:57.520
E está enrolado no rosto perfeitamente.

19:58.060 --> 20:00.590
Mas eu quero te mostrar como eu percebi isso.

20:01.820 --> 20:07.940
Agora, quando eu fiz isso pela primeira vez e novamente eu estou poupando você por uma hora de mim tentando descobrir a matemática

20:07.940 --> 20:16.550
por trás disso, eu inicialmente tinha algo em que a caixa estava um pouco fora e tudo que eu fiz foi subir

20:16.550 --> 20:22.210
e descendo por este caminho, e descobrindo onde a caixa deveria estar.

20:22.210 --> 20:27.180
E com base nisso olhando para a matemática e dizendo, hmm! ESTÁ BEM,

20:27.220 --> 20:33.610
de modo que faz sentido que a coluna da esquerda deve ser a porcentagem da coluna da esquerda vezes de largura, porque agora

20:33.610 --> 20:40.320
está calculando a largura total vezes a porcentagem de onde a coluna da esquerda deve estar.

20:40.420 --> 20:42.900
E então vamos dizer por exemplo linha de fundo,

20:43.090 --> 20:49.810
Bem, eu sei que a linha de baixo deve começar na parte inferior. Então a porcentagem que eu recebo do fundo

20:49.810 --> 20:56.300
linha, eu multiplico pela altura e então eu tenho que subtrair a partir da altura total porque o cálculo

20:56.300 --> 20:58.430
começa a partir do topo e não a partir do fundo.

21:00.500 --> 21:06.740
Mas você pode brincar com isso e como você pode ver pressionando as setas para cima e para baixo você pode ajustá-las.

21:06.920 --> 21:10.380
Estou muito empolgado por termos conseguido isso funcionando no primeiro escopo.

21:10.480 --> 21:12.320
Isso parece incrível apenas para testar isso,

21:12.330 --> 21:22.640
Vamos jogar outra foto para ver se esta caixa se move com a imagem.

21:22.670 --> 21:27.480
Vamos fazer algo como Brad Pitt.

21:27.660 --> 21:29.050
E eu disse Brad Pitt

21:29.190 --> 21:30.340
existe um pirralho Pitt?

21:30.340 --> 21:30.800
Tudo bem.

21:30.870 --> 21:35.290
Então uma foto dele onde ele não está olhando, ele não é um centro morto.

21:36.080 --> 21:37.360
Como sobre esta foto.

21:37.390 --> 21:38.950
Este parece bom.

21:39.420 --> 21:40.450
Vamos selecioná-lo

21:40.450 --> 21:45.270
vá ao nosso aplicativo, digite-o, detecte.

21:45.340 --> 21:46.430
Bem, que legal isso?

21:46.480 --> 21:48.280
Está detectando o rosto.

21:48.280 --> 21:48.550
Tudo bem.

21:48.550 --> 21:53.510
Só porque é muito divertido, vou escolher mais um. Vamos fazer um caminhante.

21:59.280 --> 22:05.180
Talvez eu faça um alpinista e vamos ver se eles conseguem detectar esse rosto.

22:05.520 --> 22:06.890
Isso vai ser bem difícil.

22:06.900 --> 22:07.880
Essa é uma foto bem grande. Vamos ver.

22:12.220 --> 22:12.950
Olha isso.

22:12.970 --> 22:17.180
Ele detecta um rosto mesmo que o rosto seja muito pequeno,

22:17.200 --> 22:18.540
ele detecta.

22:18.580 --> 22:20.020
Isso é muito, muito legal.

22:23.400 --> 22:28.820
Tudo bem. Eu quero enfatizar aqui que eu fiz parecer muito fácil.

22:28.980 --> 22:35.820
E um dos mitos que eu realmente quero descobrir aqui é que, como desenvolvedor, ou apenas porque alguma experiência

22:35.820 --> 22:41.580
não significa que eu possa fazer isso rapidamente. Eu definitivamente pratiquei isso e me certifiquei de não perder seu tempo

22:41.580 --> 22:47.970
enquanto você assiste esse vídeo. E que eu mantenho os erros e se faço algo por engano faço intencionalmente

22:47.970 --> 22:48.920
para te mostrar um ponto.

22:50.560 --> 22:56.140
Mas, como eu disse, demorei um pouco para descobrir como essa caixa funciona, principalmente porque eu tinha que fazer um pouco

22:56.140 --> 22:59.750
de matemática e veja como 'clarifai' faz isso.

22:59.900 --> 23:06.800
Mas o poder vem simplesmente com a resposta que obtemos dele. Ao usar essa resposta,

23:07.310 --> 23:08.800
Agora posso adicionar qualquer coisa aqui.

23:08.870 --> 23:12.640
Talvez eu quisesse substituir isso com um emoji como um emoji de rosto sorridente.

23:12.680 --> 23:13.660
Isso é fácil de fazer.

23:13.670 --> 23:17.320
É simplesmente adicionar um estilo CSS.

23:17.530 --> 23:19.840
E apenas para ter certeza de que isso é responsivo.

23:20.030 --> 23:20.400
Sim.

23:20.510 --> 23:23.060
Tudo funciona lindamente.

23:24.870 --> 23:30.330
Agora você tem um aplicativo que pode ser exibido para seus amigos. Mas há algumas outras coisas que quero consertar

23:30.750 --> 23:34.500
antes de começarmos a trabalhar no back-end.

23:34.660 --> 23:41.350
E isso é, quero ter certeza de que o recurso "sair" funciona e temos um formulário de "entrada".

23:41.490 --> 23:44.820
Então, no próximo vídeo, vamos fazer exatamente isso.

23:44.820 --> 23:45.650
Eu vou te ver nessa.
