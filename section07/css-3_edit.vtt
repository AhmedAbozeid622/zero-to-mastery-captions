WEBVTT

00:01.620 --> 00:06.280
Welcome back! In this video we're going to be talking about CSS3.

00:06.570 --> 00:16.470
Now just like with HTML and HTML5, CSS is a standard that constantly evolves to adapt to new demands

00:16.500 --> 00:17.710
of websites.

00:18.350 --> 00:26.450
So CSS3 is the latest evolution of CSS, where we've added new properties and new features so that

00:26.720 --> 00:29.330
we can make our design even better.

00:30.540 --> 00:37.860
So if you remember, in our diagram over here all of these browsers have different developers, different

00:37.860 --> 00:42.840
teams, that work on implementing their features.

00:42.840 --> 00:51.210
Now in an ideal world everybody agrees on what CSS does and when new features and new properties are

00:51.210 --> 00:55.300
added, everybody implements them at the same time.

00:55.380 --> 00:57.710
But that's simply not the case.

00:57.720 --> 01:05.340
Some browsers might work with some property, some might not, because they haven't gotten around to making it

01:05.340 --> 01:05.890
work.

01:06.700 --> 01:10.820
So let's go back to our website.

01:11.040 --> 01:15.760
Now let's play with one of my favorite CSS3 properties.

01:15.840 --> 01:23.930
How cool would it be if when we hover over these pictures, the picture moves. Well with CSS3

01:24.060 --> 01:26.980
they've introduced something called 'transition'.

01:27.390 --> 01:36.450
And if I do 'all 1s' and I'll explain what that does in '1s'. 
'img:hover'.

01:36.450 --> 01:42.360
So this should be familiar, where when we hover we want the image to 'transform'.

01:42.360 --> 01:44.400
This is a new property as well.

01:44.430 --> 01:48.680
And we'll say 'scale: (1.1)'.

01:49.020 --> 01:50.240
So let's see what happens.

01:50.250 --> 01:52.640
I refresh.

01:52.790 --> 01:57.750
Look at that! My images are now moving on hover.

01:57.750 --> 01:58.530
Isn't that cool?

02:00.060 --> 02:07.410
What these properties do is say that I want the image to transition when an action is taken upon it

02:07.830 --> 02:11.690
and I want all the properties to transition over one second.

02:12.660 --> 02:14.880
And what's that transition going to be?

02:14.880 --> 02:20.570
Well, when I hover I want to transform by a scale of 1.1.

02:20.600 --> 02:26.660
So it's essentially growing. If I change this to 4 seconds and I refresh.

02:26.660 --> 02:33.330
Well, now it takes 4 seconds for the image to scale.

02:33.450 --> 02:37.920
You can see over here I'm going to change this back to 1 second, just because it looks better that

02:37.920 --> 02:38.490
way.

02:38.940 --> 02:46.740
If I make this website full screen, you'll see that we now have a beautiful effect for our image gallery

02:47.060 --> 02:48.380
and there is...

02:48.670 --> 02:52.870
there's also another property called 'animation' which you can look at on your own.

02:52.920 --> 03:00.780
But again CSS3 has brought in a lot of these new properties to make websites even more dynamic than

03:00.780 --> 03:01.520
they are now.

03:02.370 --> 03:11.670
But there is a little caveat to using such properties and that is you want to make sure that each browser

03:12.120 --> 03:15.120
has implemented a new feature.

03:15.770 --> 03:21.980
So if I go to one of our favorite websites w3schools, they have a CSS browser support

03:22.070 --> 03:23.030
reference.

03:23.030 --> 03:29.570
And here you can look at all the CSS to make sure that browsers support whatever property you want to

03:29.570 --> 03:30.620
use.

03:30.620 --> 03:39.410
So if we go to transition we see that it is supported by all latest browsers. But you also see that if

03:39.410 --> 03:46.320
we go to something like 'user-select', they have this '-ms-', '-moz-', '-webkit-' line over it.

03:46.580 --> 03:53.090
And if we scroll all the way down I'll show you that it is supported by Internet Explorer with prefix

03:53.180 --> 03:53.840
'-ms-'.

03:53.870 --> 03:54.930
What does that mean?

03:55.250 --> 04:03.410
Well, these are browser prefixes and you'll see them every once in a while. What it is is - these are new

04:03.410 --> 04:08.630
features of CSS that haven't fully been implemented by the browsers.

04:08.750 --> 04:16.550
And you want to use a prefix to make sure that they work as an experimental feature in the browser.

04:16.550 --> 04:18.380
Let me explain what that means.

04:20.090 --> 04:26.630
If I wanted to add, let's say a 'box-shadow', so that means kind of making this look 3D and having a shadow

04:26.840 --> 04:28.390
underneath the edge over here.

04:28.400 --> 04:35.130
Previously I had to do something like this, where I put 'box-shadow'.

04:35.510 --> 04:40.910
And you can read into the property to see what I'm about to do. But I'm going to do '4px 4px 5px'

04:41.180 --> 04:46.590
and then the color, which is a bit of a gray.

04:46.610 --> 04:55.760
So if I do this and refresh. Well that looks nice and my browser is the new Chrome, so it has this feature

04:56.060 --> 05:03.130
but a few years ago, when 'box-shadow' was first introduced, you had to do something like this.

05:04.070 --> 05:16.760
'-moz-box-shadow' then copy and paste this and this be sure that it works on the Mozilla browser and then you

05:16.760 --> 05:29.110
also had 'ms' which made sure that it works on Internet Explorer, you had 'webkit' which made sure that

05:29.110 --> 05:32.160
it works on Safari and Chrome.

05:32.330 --> 05:40.420
And then finally you also had 'o', which made it work on the Opera browser.

05:40.740 --> 05:46.610
Then you also had to still mention the 'box-shadow' without the prefixes is at the bottom.

05:46.920 --> 05:55.830
So now if any of these browsers don't support box shadow, well, they have these prefixes, so that it should

05:55.830 --> 06:02.010
work. And 'box-shadow' - it has been some time now so you don't need to do this anymore. But there is one

06:02.010 --> 06:09.960
great way of seeing if a certain property still needs browser prefixes and that is using something like

06:10.470 --> 06:13.840
this - which I will leave for you so you can check it out.

06:14.940 --> 06:18.940
Another thing I wanted to show you is 'Can I Use'.

06:19.210 --> 06:25.330
So 'caniuse.com' is a great resource to see. Anything that you might want to try out.

06:25.330 --> 06:34.480
So if I type in here 'css-transition', you'll see CSS3 transitions are supported in all these browsers.

06:34.570 --> 06:37.380
Except we have one - Opera Mini.

06:37.720 --> 06:44.690
And it says: 'It's 2.63% of the global usage.'

06:44.740 --> 06:53.070
So if you use CSS3-transitions, 2.63% of population might not be able to see it.

06:53.110 --> 06:58.530
Now what there that is - you are user base or not, you can kind of decide what the trade-offs are.

06:58.750 --> 07:00.710
But this is a great thing to use.

07:00.730 --> 07:10.120
And if we use something like 'Flexbox', well we see that 'Flexbox' has all support. So it should - it shouldn't

07:10.120 --> 07:11.690
be a problem for you to use it.

07:13.000 --> 07:18.350
OK. Let's go back to this and just finish up this website to make it look nice.

07:20.810 --> 07:22.780
So, I don't like that there's space here.

07:22.790 --> 07:24.400
Ideally this is all the way to the left.

07:24.410 --> 07:36.610
If I do 'margin: 0px' and I'll refresh. That actually doesn't change much, because sometimes browsers have

07:36.610 --> 07:39.060
their own default margins.

07:39.190 --> 07:49.160
So the way to get around it is to do margin - 0 for the body. So 'margin:0px'.

07:49.160 --> 07:52.100
Let's save and refresh. Perfect!

07:52.140 --> 07:55.140
Now we have this all the way to the left.

07:55.200 --> 07:57.900
OK. But we do want a bit of a buffer at the top.

07:57.900 --> 08:08.050
So I'm going to get 'margin-top' and we'll do '10px'. Save and refresh.

08:08.100 --> 08:09.040
Perfect!

08:09.060 --> 08:17.610
Now we have a beautiful website and it didn't really take us much. We just wrote a few lines of CSS, few

08:17.610 --> 08:24.180
lines of HTML. And we look what we have. I'll see you in the next one. Bye-bye
