WEBVTT

00:01.220 --> 00:03.020
Dan selamat datang kembali.

00:03.020 --> 00:11.230
Sekarang kita memiliki redux dan bereaksi redux diinstal, mari kita mulai menulis beberapa kode dan mengimplementasikan redux.

00:11.430 --> 00:19.700
Sekarang hal pertama yang ingin kita lakukan adalah membuat sesuatu yang disebut aksi dan juga peredam.

00:19.980 --> 00:30.040
Jika Anda ingat diagram ini, kami menyebutkan bahwa redux memiliki dua komponen ini: aksi dan peredam.

00:30.050 --> 00:33.820
Jadi kita akan membangun keduanya dan menunjukkan apa yang saya maksud.

00:35.460 --> 00:39.440
Hal pertama yang ingin kita lakukan adalah membuat file baru.

00:39.630 --> 00:45.930
Mari kita simpan saja di folder sumber dan kita akan mengatakan bahwa ini akan disebut Tindakan. js dan di dalam

00:47.940 --> 00:54.020
sini kita akan membuat aksi menggunakan javascript biasa.

00:54.090 --> 01:03.680
Kami akan mengatakan bahwa konstanta ekspor dan tindakan pertama yang akan kami lakukan adalah bidang pencarian.

01:03.750 --> 01:09.810
Jadi ingat ketika kita mengetik di kotak pencarian, kita dapat memfilter robot. Kami akan mengatakan bahwa tindakan

01:09.810 --> 01:17.100
yang sedang dalam pencarian mengubah yang kami miliki di aplikasi reaksi, kami akan

01:17.100 --> 01:31.180
mengatakan bahwa ini akan disebut SetSearchField dan bidang pencarian ini akan menerima input teks yang diketik pengguna dan karena kami ingin untuk menjaga ini sekecil mungkin

01:31.180 --> 01:37.840
kita dapat benar-benar membungkusnya dalam kurung keriting sehingga kita dapat menghindari pernyataan

01:37.840 --> 01:38.540
kembali.

01:38.560 --> 01:45.100
Kami baru saja mengembalikan objek dan objek

01:47.810 --> 01:54.430
ini akan memiliki tipe yang disebut katakanlah CHANGE_SEARCHFIELD.

01:57.540 --> 02:06.070
Dan kami juga akan memiliki muatan yang disebut teks.

02:06.210 --> 02:13.980
Jadi, tindakan ini akan - yang disebut Setel bidang pencarian - akan mengambil teks, yang merupakan

02:13.980 --> 02:20.060
input pengguna, dan itu akan mengembalikan objek yang memiliki jenis CHANGE_SEARCHFIELD.

02:20.460 --> 02:28.200
Jadi itulah tindakan yang sedang diambil dan akan dikirim - dan muatan adalah nama umum yang

02:28.200 --> 02:36.750
digunakan dan redoks jadi biasakan saja - muatan adalah kami mengirimkan data apa pun yang diperlukan untuk beralih ke

02:36.750 --> 02:41.680
produsen yang hanya akan menjadi apa pun yang dimasukkan pengguna.

02:42.750 --> 02:43.120
Baiklah.

02:43.150 --> 02:45.220
Kami baru saja menciptakan tindakan kami.

02:45.340 --> 02:46.030
Itu dia.

02:46.180 --> 02:47.800
Itu tindakan kita.

02:47.800 --> 02:49.390
Bagus dan sederhana.

02:49.390 --> 02:57.640
Sekarang di sini saya telah menggunakan huruf kapital karena ini adalah konstanta dan konstanta biasanya dikapitalisasi.

02:57.640 --> 03:07.720
Semua batasan dalam javascript hanyalah standar tetapi saya suka menggunakan variabel konstan aktual karena hanya dengan string kita dapat

03:07.720 --> 03:12.960
salah mengeja sesuatu dan kita mungkin tidak mendapatkan kesalahan.

03:13.000 --> 03:18.220
Tetapi jika kita menggunakan variabel dan kita salah mengeja itu akan benar-benar mendapatkan kesalahan saat kita menjalankan aplikasi.

03:18.220 --> 03:21.210
Jadi ini trik bagus yang bagus.

03:21.220 --> 03:27.990
Dan sebagian besar demo redux juga memiliki file yang konstan di mana mereka melacak semua tindakan ini.

03:28.240 --> 03:34.480
Dan juga menyenangkan memiliki file di mana Anda dapat melihat apa tindakan Anda.

03:34.480 --> 03:39.630
Baris demi baris karena sebagian besar aplikasi akan memiliki lebih dari satu tindakan seperti yang akan Anda lihat.

03:39.700 --> 03:46.130
Jadi mari kita buat file baru dan kita akan menyebutnya konstanta. js.

03:46.330 --> 03:51.390
Dan di sini dalam ekspor saja - mari kita buat ini sedikit lebih besar sehingga Anda bisa melihat

03:51.500 --> 03:52.740
Ini dia.

03:52.780 --> 04:02.070
Kami akan mengekspor CHANGE_SEARCHFIELD konstan.

04:02.310 --> 04:04.290
Dan itu akan menyamai string kita.

04:05.180 --> 04:10.250
Sekali lagi hal yang sama persis CHANGE_SEARCHFIELD tetapi string.

04:13.060 --> 04:16.520
Tampaknya sedikit berlebihan tetapi itu hanya praktik yang baik untuk dimiliki.

04:16.810 --> 04:23.380
Jadi sekarang kita memiliki variabel ini yang merupakan konstanta dan karena kita mengekspornya, kita bisa mengimpornya

04:23.380 --> 04:24.510
di sini.

04:29.680 --> 04:38.070
Dan kita akan mengatakan CHANGE_SEARCHFIELD memastikan bahwa tidak ada kesalahan ejaan dengan cara ini dan kita akan mengatakan

04:38.490 --> 04:41.080
itu impor dari file Konstanta.

04:45.710 --> 04:49.630
Dan mari kita buat ini sedikit lebih kecil supaya semuanya cocok.

04:49.710 --> 04:52.930
Dan begitulah.

04:52.940 --> 04:59.640
Jadi sekarang kita bisa menggunakan bidang pencarian yang berubah, bukan teks.

04:59.780 --> 05:00.660
Dan begitulah.

05:00.730 --> 05:08.650
Kami memiliki file tindakan yang bagus dan tampan dengan tindakan SetSearchField dan Anda dapat membayangkan di sini karena kami mendapatkan

05:08.650 --> 05:14.680
lebih banyak tindakan, kami dapat terus menambahkan hal-hal dan kami terus menambahkan semua konstanta yang

05:14.680 --> 05:18.460
kami butuhkan untuk tindakan yang dilakukan aplikasi kami.

05:18.460 --> 05:18.660
Baiklah.

05:18.670 --> 05:22.020
Hal berikutnya yang kita ingat dengan redux adalah setelah aksi.

05:22.030 --> 05:30.190
Kami juga memiliki peredam yang saya katakan adalah fungsi besar yang hanya membaca tindakan dan meludahkan apa

05:30.190 --> 05:32.420
yang kita sebut keadaan.

05:32.530 --> 05:38.560
Jadi mari kita lakukan itu, mari buat file lain di sini kita akan menyebutnya reduksi. js dan di

05:42.040 --> 05:53.670
dalam sini, mari kita buat peredam itu. Kami pertama kali memulai dengan mengatakan const initialState.

05:54.050 --> 05:56.030
Jadi kita perlu semacam titik awal.

05:56.030 --> 06:00.790
Jadi, Anda mungkin ingat di aplikasi kami. File js dengan aplikasi create react.

06:00.860 --> 06:08.220
Jika saya membukanya, kita melihat bahwa kita memiliki keadaan awal dengan bidang pencarian yang kosong.

06:08.240 --> 06:15.400
Jadi mirip dengan itu kita perlu mengatakan bahwa keadaan awal di sini akan memiliki bidang pencarian yang

06:18.290 --> 06:20.390
sama dengan string kosong.

06:22.080 --> 06:23.510
Jadi itulah kondisi awal.

06:23.550 --> 06:28.050
Itulah objek awal yang akan kita miliki di toko redux.

06:28.530 --> 06:31.850
Dan sekarang kita perlu membuat peredam. Lagi.

06:31.920 --> 06:38.190
Ingat itu adalah fungsi yang sangat mudah dilakukan lagi karena kita akan menggunakannya di tempat lain.

06:38.190 --> 06:46.780
Kami akan mengekspornya dan kami akan mengatakan bahwa ini akan disebut robot pencarian karena itulah

06:46.780 --> 06:52.640
tindakan yang mengambilnya akan mencari robot menggunakan bidang pencarian.

06:52.660 --> 06:58.980
Jadi peredam robot pencarian ini akan membahas beberapa hal.

06:59.030 --> 07:09.470
Pertama adalah keadaan yang merupakan keadaan aplikasi kita dan kemudian yang kedua adalah tindakan.

07:09.490 --> 07:11.720
Jadi itulah tindakan yang baru saja terjadi.

07:13.630 --> 07:20.440
Dan menggunakan ES6, mari kita beri saja parameter default untuk memastikan bahwa jika ini kosong atau tindakan kosong, kami

07:20.440 --> 07:21.890
tidak mendapatkan kesalahan.

07:21.910 --> 07:30.340
Jadi kita akan mengatakan bahwa keadaan akan menjadi keadaan awal yang mengapa kita miliki di sini dan kemudian tindakan hanya

07:30.340 --> 07:32.110
akan menjadi objek kosong.

07:32.110 --> 07:38.790
Ingat tindakan kita hanyalah benda yang kembali.

07:38.820 --> 07:48.690
Jadi dari sini menggunakan fungsi kesalahan kami memiliki peredam pertama kami. Dan reduksi di sini, yang mereka lakukan adalah mereka mendapatkan

07:48.780 --> 07:52.190
masukan dari keadaan dan tindakan ini.

07:52.230 --> 07:58.680
Dan jika mereka peduli dengan tindakan yang mereka terima dalam kasus kami jika kami peduli jika kami menerima tindakan apa pun

07:58.680 --> 08:04.980
yang terkait dengan pencarian robot, kami akan melakukan sesuatu yang kami akan bertindak berdasarkan negara seperti yang akan kami lakukan

08:04.980 --> 08:09.820
lakukan itu kita akan menggunakan pernyataan switch dan kita akan mengatakan dalam pernyataan switch bahwa kita

08:09.820 --> 08:12.960
akan melakukan suatu tindakan. ketik ingat

08:15.650 --> 08:17.370
tindakan. mengetik.

08:17.480 --> 08:20.280
Itu adalah sesuatu yang kami gunakan dalam aksi. file js ..

08:20.510 --> 08:25.480
Ingat kami memiliki jenis bidang pencarian perubahan.

08:25.610 --> 08:31.390
Jadi melihat ini sepertinya kita akan peduli dengan jenis tindakan bidang pencarian perubahan.

08:31.430 --> 08:41.910
Jadi mari kita impor file konstanta di sini untuk redux atau untuk peredam kami juga.

08:42.050 --> 08:51.530
Dan di sini kita dapat mengatakan bahwa jika jenis tindakan.

08:51.730 --> 08:54.730
Whoops, mari kita lakukan

08:56.370 --> 09:07.100
CHANGE_SEARCHFIELD Jika itu masalahnya, kami ingin mengembalikan negara baru dan ini kembali ke tiga prinsip yang kami

09:07.100 --> 09:08.060
bicarakan.

09:08.060 --> 09:08.850
Mari kita lihat.

09:10.240 --> 09:15.610
Tiga pelaku dalam bereaksi adalah bahwa kita memiliki satu-satunya sumber kebenaran yang merupakan satu-satunya objek besar yang

09:15.610 --> 09:16.690
menggambarkan aplikasi kita.

09:16.840 --> 09:22.490
Jadi kita memiliki variabel status awal yang telah kita tetapkan. Status hanya baca.

09:22.540 --> 09:26.880
Itu berarti kita tidak pernah bisa memodifikasi objek itu.

09:26.900 --> 09:37.170
Satu-satunya hal yang dapat kita lakukan adalah membuat objek baru yang memiliki, sama seperti sebelumnya, objek sebelumnya keadaan sebelumnya yang

09:37.200 --> 09:43.670
kita miliki, dengan modifikasi apa pun yang kita miliki adalah status Read-Only.

09:43.740 --> 09:50.190
Dan kemudian hal ketiga adalah bahwa perubahan hanya menggunakan fungsi murni, sekarang ingat fungsi

09:50.430 --> 09:59.520
murni adalah fungsi yang mendapatkan semacam input seperti yang kita miliki di peredam dan mengembalikan output yang tidak memiliki efek

09:59.520 --> 10:00.440
samping.

10:00.450 --> 10:03.120
Itu tidak mengubah apa pun.

10:03.300 --> 10:07.940
Setiap kali kita memasukkan input, hasilnya selalu sama.

10:08.400 --> 10:15.310
Jadi berdasarkan pada prinsip-prinsip ini jika kita kembali, kita tahu bahwa kita ingin ini

10:15.310 --> 10:22.270
direduksi menjadi fungsi murni yaitu mengambil semacam input dan harus mengembalikan negara baru, dan cara

10:22.270 --> 10:32.800
kita melakukannya tanpa hanya melakukan keadaan. SearchField dan memodifikasi properti yang akan kita lakukan objek. menetapkan.

10:32.960 --> 10:43.970
Dan cara kita melakukan ini adalah kurung keriting koma keadaan yang kita terima yang merupakan keadaan awal awal dan

10:43.970 --> 10:50.270
akhirnya apa pun yang ingin kita ubah pada objek itu.

10:50.270 --> 10:58.280
Dalam kasus kami, kami tertarik untuk mengubah properti bidang pencarian dan properti bidang

10:58.280 --> 11:03.690
pencarian akan memiliki tindakan. muatan

11:03.790 --> 11:06.800
Sekali lagi saya akan membuat ini sedikit lebih kecil.

11:06.970 --> 11:13.920
Kami mengembalikan negara baru seperti yang Anda lihat di sini dengan objek. menetapkan bahwa akan memiliki segalanya di negara

11:13.920 --> 11:14.730
bagian.

11:14.880 --> 11:23.070
Plus, kami akan memperbarui properti bidang pencarian apa pun, properti bidang pencarian baru yang kami miliki dengan tindakan. payload Ingat tindakan memiliki dua hal

11:23.130 --> 11:28.760
yang dikirim: objek dengan tipe, dan objek dengan payload.

11:28.780 --> 11:32.310
Jika kita kembali, kita melihat tipe dan payload.

11:32.450 --> 11:37.370
Jadi ini hanya mengatakan kami menerima tindakan yang disebut CHANGE_SEARCHFIELD.

11:37.490 --> 11:45.280
Jika itu masalahnya, kembalikan negara baru dengan tindakan. payload apa pun yang dimasukkan pengguna.

11:45.320 --> 11:50.510
Saya tahu ini bisa sedikit membingungkan tetapi ini hanya sintaks redux standar yang Anda

11:50.510 --> 11:51.330
harus terbiasa.

11:52.550 --> 11:53.400
Hanya kepala.

11:53.400 --> 11:57.050
Ada cara lain untuk melakukan ini yang disukai beberapa orang dan lebih bersih.

11:57.050 --> 12:05.760
Pilihan lain adalah melakukan perusakan objek atau operator penyebaran objek yang artinya kita bisa melakukan sesuatu seperti

12:06.150 --> 12:06.810
ini.

12:10.550 --> 12:12.370
Yang bekerja dengan baik juga.

12:12.410 --> 12:15.230
Untuk saat ini, mari kita tetap

12:18.720 --> 12:23.960
seperti itu dan selalu ingat bahwa fungsi murni selalu perlu mengembalikan sesuatu.

12:23.960 --> 12:39.640
Jadi jika jenis tindakannya tidak seperti ini, kami juga ingin mengatakan default untuk selalu kembali ke keadaan semula.

12:39.640 --> 12:40.130
Ini dia.

12:40.150 --> 12:41.790
Kami telah membuat peredam.

12:42.040 --> 12:44.830
Itu adalah fungsi murni.

12:44.830 --> 12:52.990
Sekarang di sini kita bisa menggunakan pernyataan if jika kita mau, tetapi saya suka menggunakan sakelar dan bereaksi dokumentasi

12:52.990 --> 12:59.550
juga merekomendasikan sakelar karena Anda dapat memiliki banyak kasus, beberapa tindakan yang bertindak atas peredam

12:59.560 --> 13:06.040
robot pencarian dan jauh lebih mudah untuk hanya menambahkan dan menambahkan pada berbagai hal

13:06.250 --> 13:08.590
yang mempengaruhi keadaan robot.

13:08.590 --> 13:09.100
Baiklah.

13:09.160 --> 13:10.830
Itu tidak terlalu buruk, benar.

13:10.930 --> 13:21.170
Kami telah membuat peredam dengan beberapa kondisi awal dan kami juga memiliki konstanta dan tindakan kami.

13:21.300 --> 13:28.530
Jadi diagram yang saya tunjukkan itu mulai masuk akal sedikit. Dalam video berikutnya.

13:28.530 --> 13:33.870
Mari kita sambungkan ini karena saat ini tidak terhubung ke apa pun yang tidak terhubung

13:33.870 --> 13:36.520
ke aplikasi kita, untuk reaksi kita.

13:36.570 --> 13:39.850
Kami baru saja membuat file-file semacam ini hidup sendiri.

13:40.380 --> 13:42.030
Sampai jumpa di yang berikutnya.

13:42.050 --> 13:42.590
Sampai jumpa.
