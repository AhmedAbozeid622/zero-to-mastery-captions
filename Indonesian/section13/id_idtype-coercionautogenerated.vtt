WEBVTT

00:01.850 --> 00:03.660
Ketik paksaan.

00:03.890 --> 00:09.940
Jika ada satu hal yang akan membuat Anda mencabut rambut karena frustrasi.

00:10.150 --> 00:19.290
Ini jenis hati-hati jika Anda mengetikkan asal Google di JavaScript dan melihat beberapa posting Anda akan melihat banyak orang

00:19.290 --> 00:26.310
marah pada beberapa hal funky yang dilakukan JavaScript dan kami akan membicarakannya dan saya akan

00:26.310 --> 00:32.700
hanya memberi Anda gambaran singkat karena itu benar-benar rumit dan itu adalah sesuatu

00:32.730 --> 00:39.390
yang Anda harus mengerti dan tahu apa itu tetapi Anda tidak perlu tahu setiap

00:39.510 --> 00:43.630
detail karena sebagian besar bagian yang rumit.

00:43.680 --> 00:48.060
Yah Anda tidak boleh menggunakannya dalam kode Anda karena itu membingungkan

00:48.060 --> 00:50.500
Jadi apa yang menyebabkan tipe.

00:51.620 --> 00:59.620
Ini sesuatu seperti ini sama dengan dua string satu dan itu sama dengan dua.

00:59.690 --> 01:08.000
Benar Anda melihat tipe hati-hati berarti bahwa ketika penampilan itu adalah hal-hal ke kiri dan

01:08.510 --> 01:13.070
ke kanan operator adalah tipe yang berbeda.

01:13.120 --> 01:22.150
Itu bukan tipe string akhir salah satunya akan dikonversi menjadi nilai yang setara oleh mesin JavaScript.

01:22.990 --> 01:27.740
Jadi mesin JavaScript akan mengatakan 1 sama dengan string 1.

01:27.940 --> 01:29.890
Saya pikir maksud Anda nomor satu.

01:29.890 --> 01:39.550
Jadi itu akan melakukan ini untuk kita dan membandingkan nomor satu ke nomor satu sekarang berdasarkan

01:39.640 --> 01:47.100
pada jenis definisi hati-hati berarti bahasa mengubah jenis tertentu ke jenis lain.

01:47.150 --> 01:55.460
Izinkan saya mengajukan pertanyaan apakah semua bahasa memiliki tipe hati-hati.

01:55.490 --> 01:58.900
Apa yang Anda pikirkan ya mereka lakukan.

01:59.470 --> 02:07.230
Karena kita selalu perlu mengkonversi tipe antar program untuk melakukan hal-hal di memori.

02:07.290 --> 02:12.240
Berbagai jenis terlihat sangat berbeda dari apa yang kita ketik.

02:12.250 --> 02:16.290
Tulis angka lima dalam memori fisik aktual.

02:16.290 --> 02:23.070
Oh komputer saya direpresentasikan dalam sekali dalam nol dan semua bahasa melakukan ini.

02:23.070 --> 02:29.110
Jadi ada semacam jenis kehati-hatian di berbagai tingkat tumpukan.

02:29.430 --> 02:37.650
Kebetulan bahwa JavaScript memiliki penyebab jenis yang sangat berat di dalamnya karena JavaScript adalah jenis

02:37.650 --> 02:40.460
yang dinamis yang menyebabkannya.

02:40.500 --> 02:50.170
Mari kita kembali ke contoh dalam tipe JavaScript yang hati-hati terjadi ketika Anda menggunakan tanda sama dengan ganda sama dengan ganda berarti

02:50.170 --> 02:59.410
membandingkan kedua nilai tersebut dan jika mereka memiliki tipe yang berbeda cobalah untuk memaksa satu dengan baik ke dalam tipe yang

02:59.920 --> 03:00.790
sama.

03:02.330 --> 03:13.880
Jika kita kembali dan melakukan string di sini dan saya melakukan tiga sama dengan dan saya menjalankan saya mendapatkan salah karena tiga sama

03:13.940 --> 03:17.180
dengan JavaScript berarti dibandingkan dengan nilai.

03:17.360 --> 03:25.300
Tetapi jangan mencoba dan mengutuk nilai-nilai secara eksplisit dengan perbandingan Anda dan lakukan persis apa yang saya katakan.

03:25.470 --> 03:32.000
Jadi apakah pernah ada waktu Anda hanya harus menggunakan dua sama dengan bukannya tiga sama.

03:32.160 --> 03:33.340
Mm hmm.

03:33.510 --> 03:34.410
Saya akan mengatakan itu.

03:34.410 --> 03:35.970
Tidak ada.

03:36.000 --> 03:43.930
Beberapa orang mungkin berpendapat bahwa dobel sama sebenarnya dapat memiliki beberapa aplikasi menarik di mana kita memaksa sesuatu

03:44.010 --> 03:51.890
dan kita melakukan semacam pengecekan dengan sangat cepat tetapi itu bukan kode yang dapat diprediksi, benar.

03:51.900 --> 03:53.000
Ini bisa membingungkan.

03:53.040 --> 04:00.100
Itu bisa benar-benar menjadi gotcha dan menipu beberapa orang jadi selalu gunakan tiga sama dengan bukan dua.

04:00.300 --> 04:04.590
Sekarang tipe hati-hati tidak terjadi hanya dengan tanda sama dengan.

04:04.590 --> 04:06.870
Anda juga dapat melakukan pernyataan if.

04:07.020 --> 04:19.930
Jadi jika satu maka kembali lima dan jika saya menjalankan ini dengan baik tidak ada fungsi di sini kurang untuk menghibur

04:21.030 --> 04:22.900
Saya sudah merekam hari yang panjang hari ini juga.

04:22.910 --> 04:24.560
Jadi, beri aku istirahat, semuanya.

04:24.640 --> 04:25.360
Baiklah.

04:25.530 --> 04:29.540
Jika saya menjalankan ini lima dicatat.

04:29.580 --> 04:30.450
Mengapa demikian.

04:30.480 --> 04:35.400
Karena tentu saja javascript sama dengan benar.

04:35.490 --> 04:36.930
Bagaimana jika saya nol di sini.

04:36.990 --> 04:44.220
Jika saya melakukan nol, tidak ada javascript tentu saja dan mengatakan baik saya ingin boolean di sini.

04:44.430 --> 04:53.050
Jadi saya akan mengambil nol Anda dan mengubahnya menjadi false sekarang jenis hati-hati ada banyak spesifik

04:53.050 --> 04:55.390
yang menarik untuk itu

04:56.260 --> 05:02.470
Dan sebenarnya ada sebuah situs web kecil yang bagus yang menunjukkan kepada Anda beberapa perbandingan yang

05:02.470 --> 05:04.990
dilakukan JavaScript dengan tiga yang sama.

05:04.990 --> 05:08.920
Itu tanpa jenis hati-hati hal masuk akal.

05:08.920 --> 05:13.860
Anda melihat bahwa false sama dengan dua false dan hanya itu.

05:13.910 --> 05:23.070
Anda dapat melihat bahwa string false hanya triple sama dengan dan mengembalikan true dengan string false lagi.

05:23.540 --> 05:26.740
Tetapi jika kita melakukan double sama dengan baik.

05:27.440 --> 05:27.810
Oh Boy.

05:27.830 --> 05:30.790
Itu hanya kekacauan bukan.

05:30.800 --> 05:41.210
Misalnya string satu sama dengan true, array yang berisi satu juga benar jika dibandingkan dengan

05:41.210 --> 05:42.880
string satu.

05:43.100 --> 05:47.200
Dan ada banyak kasus kecil yang aneh di sini.

05:47.390 --> 05:49.820
Jika Anda ingin bermain-main dengan ini, lakukan saja.

05:49.820 --> 05:53.330
Tapi saya ingin tetap dengan triple sama dengan.

05:53.360 --> 06:03.260
Anda juga dapat melihat beberapa pernyataan if di sini dan beberapa kasus F yang benar-benar rumit sekarang jika kita masuk ke halaman MDMA

06:03.380 --> 06:10.550
ini yang akan saya tautkan dalam video ini, kita melihat bahwa kita memiliki dobel sama dengan triple

06:11.090 --> 06:12.410
sama dengan.

06:12.500 --> 06:20.270
Tetapi kemudian juga sesuatu yang disebut Object dot adalah hal yang cukup baru untuk JavaScript dan ini adalah hal yang menarik

06:20.270 --> 06:23.380
yang kemungkinan besar tidak akan sering Anda lihat.

06:23.390 --> 06:24.790
Tapi saya pikir ini menarik.

06:24.800 --> 06:31.730
Jadi kita akan membicarakannya dengan cepat yang Anda lihat di JavaScript ada konsep

06:32.360 --> 06:35.120
negatif nol dan tambah nol.

06:35.120 --> 06:35.850
Aneh, aku tahu.

06:36.200 --> 06:48.850
Jadi jika saya melakukan nol nol sama dengan nol dan saya menjalankan saya mendapatkan benar tetapi mereka secara teknis hal yang berbeda

06:49.030 --> 06:55.180
dalam JavaScript sehingga saya benar-benar dapat melakukan objek dot dan diberi

06:59.190 --> 07:04.190
dua parameter dan jalankan dan saya mendapatkan false.

07:04.400 --> 07:12.910
Sekarang mengapa ini berguna jika kita kembali ke halaman ini kita melihat bahwa objek yang berfungsi hampir sama dengan

07:12.940 --> 07:16.300
triple sama dengan kecuali untuk beberapa kasus.

07:16.420 --> 07:19.220
Itu adalah plus dan negatif 0.

07:19.390 --> 07:29.790
Dan jika kita gulir ke bawah ke funky kecil ini dan bukan tidak, dan kita bisa melakukan keseluruhan kursus tentang betapa

07:29.790 --> 07:39.360
anehnya ini bukan angka tetapi jika saya tidak nomor yang mewakili tidak dalam angka dalam JavaScript dan saya melakukan tiga

07:39.700 --> 07:46.020
kali lipat sama bukan angka yang saya dapatkan salah tapi mengapa begitu.

07:46.020 --> 07:49.200
Ini adalah ini harus sama dengan benar.

07:49.470 --> 07:54.240
Jadi jika kita menggunakan objek yang ini berubah menjadi kenyataan.

07:54.240 --> 08:01.470
Sekali lagi kemungkinan besar dalam kehidupan pemrograman sehari-hari Anda, Anda tidak akan pernah menghadapi masalah ini.

08:01.680 --> 08:09.140
Tetapi saya ingin menunjukkan kepada Anda betapa hati-hati tipenya bisa membingungkan dan jika Anda tipe orang yang suka mengetik hati-hati

08:09.140 --> 08:14.860
dan ingin membaca semua tentang hal itu dan memahami semua seluk-beluk ini, saya akan ditautkan

08:14.870 --> 08:22.880
dengan spesifikasi aktual yang berbicara tentang bagaimana algoritma perbandingan kesetaraan bekerja untuk saya jika saya membaca ini saya akan menjadi pembacaan

08:22.910 --> 08:26.440
pengantar tidur yang baik untuk membuat saya tertidur.

08:26.570 --> 08:28.970
Jika Anda tertarik, Anda dapat melihatnya.

08:28.970 --> 08:36.980
Keuntungan utama dari sini adalah sebaiknya Anda menggunakan triple sama dengan karena jenis hati-hati dalam

08:37.220 --> 08:39.780
JavaScript bisa sangat rumit.

08:39.970 --> 08:46.090
Ngomong-ngomong sebagai catatan kecil yang menyenangkan ada tangkapan layar yang saya ambil dari Netflix menonton film dokumenter

08:46.270 --> 08:51.650
yang sangat lucu ini dan Anda melihat bahwa bug dalam kode tidak dapat dihindari.

08:51.730 --> 08:58.300
Bahkan Netflix yang perkasa sesekali memiliki masalah di suatu tempat bukan angka.

08:58.300 --> 08:58.670
Baiklah.

08:58.870 --> 08:59.760
Itu saja untuk sekarang.

08:59.800 --> 09:01.230
Saya melihat yang berikutnya.
