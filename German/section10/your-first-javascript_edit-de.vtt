WEBVTT

00:00.980 --> 00:05.400
Hallo! Lass uns ein bisschen JavaScript lernen.

00:05.400 --> 00:11.160
Wir werden Google Chrome hier öffnen und gehen zu "Ansicht", (dann) "Entwickler".

00:11.320 --> 00:13.640
Und diesmal "JavaScript-Konsole"

00:13.720 --> 00:22.670
Sie können also 'CMD Option + J' auch tun und es öffnet diese Konsole, die, wenn Sie sich an Elemente erinnern,

00:22.690 --> 00:23.800
Du hast es schon mal gesehen.

00:23.830 --> 00:30.680
Das ist dein HTML. In der Konsole können wir JavaScript schreiben. Auf der rechten Seite sehen Sie den Umriss von

00:30.680 --> 00:33.740
worüber wir in diesem JavaScript-Segment sprechen werden.

00:33.770 --> 00:35.480
Wir werden eins nach dem anderen gehen.

00:36.050 --> 00:42.760
Und zu einigen von ihnen werden wir zurückkommen. Aber, keine Sorge, am Ende wirst du alles hier wissen.

00:43.910 --> 00:54.220
Sprechen wir also über JavaScript. JavaScript hat 7 Arten. Sie können sich Typen als Werte für JavaScript vorstellen

00:54.220 --> 00:55.890
kann haben.

00:55.900 --> 00:57.330
Beginnen wir mit dem ersten.

00:57.970 --> 01:06.260
Und das ist "Nummer". Also der Typ "Nummer". Nun, in JavaScript können Sie so etwas tun:01:07.970 --> 01:12.880
Sieh dir das an. Die Konsole erlaubt es uns, so viel JavaScript zu schreiben, wie wir wollen.

01:12.880 --> 01:21.160
Wenn wir dies schreiben und die Konsole uns eine Antwort gibt, heißt das:"Ja, das ist ein gültiges JavaScript". OK! Was

01:21.160 --> 01:25.800
sonst können wir tun? Nun, wir können '3 * 5' machen

01:26.110 --> 01:30.400
'15', '12 / 4 ',' 3 '.

01:30.400 --> 01:31.090
Das ist großartig.

01:31.090 --> 01:36.630
Was können wir sonst noch tun? '12 -4 ',' 8 '.

01:36.680 --> 01:37.940
Können wir das machen?

01:37.940 --> 01:43.580
Können wir das machen? "(3 + 4) * 2".

01:43.730 --> 01:47.480
Das ist also '7 * 2', '14'.

01:47.610 --> 01:55.070
Ja! Es klappt! Und wir können das sogar machen [%]. Und das ist ein besonderer Charakter, den Sie vielleicht noch nie gesehen haben

01:55.390 --> 01:56.360
Es heißt "modulo".

01:56.360 --> 01:59.970
Und lass uns sehen, was passiert. Gibt mir '0'.

02:00.350 --> 02:07.330
Was ist, wenn ich '12% 5 'mache? Es gibt mir "2". Was dieses Symbol bewirkt -

02:07.370 --> 02:13.930
Und lass es größer werden, damit du klar sehen kannst. Und ich werde das löschen, nur damit du es sehen kannst

02:13.940 --> 02:19.490
besser. Und ich kann hier klarstellen, mit diesen Klammern und es wird alles für mich aufräumen.

02:19.910 --> 02:29.150
Also noch einmal. Was ich gemacht habe, war '12% 5 'und das gibt mir' 2 '. Und welches Modul tut es - es gibt mir

02:29.240 --> 02:38.060
der Rest. Also '12% 5 'ist ... Nun, es gibt mir einen Rest von' 2 ', weil' 5 'nur auf' 10 'gehen kann und dann

02:38.060 --> 02:39.540
Du hast den Rest übrig.

02:39.560 --> 02:52.760
Also, wenn ich das tue, sagen wir "12% 5" oder "9", bekomme ich einen Rest von "3". Und du denkst 'Oh Gott! Du bist nur

02:52.870 --> 02:53.760
Lehre mich Mathe! '

02:53.770 --> 02:56.890
Aber mach dir keine Sorgen. Das ist nur ein kleiner Teil davon.

02:56.920 --> 03:03.040
Ich möchte Ihnen nur zeigen, dass der erste JavaScript-Typ eine 'Nummer' ist und wir Operationen für sie ausführen können

03:03.220 --> 03:06.470
genau wie der Taschenrechner.

03:06.480 --> 03:10.190
Der zweite Typ in JavaScript ist ein 'String'.

03:12.010 --> 03:19.720
'String' ist also nur Text und alles, was Sie tun müssen, um JavaScript wissen zu lassen, dass Sie ein Stück davon schreiben

03:19.720 --> 03:22.960
Text ist doppelte Anführungszeichen.

03:23.090 --> 03:30.020
Also kann ich einfach "Bob" sagen. Ich kann meinen Namen ["Andrei"] sagen. Und Sie können auch einfache Anführungszeichen verwenden.

03:35.350 --> 03:38.220
Und das ist ein 'String'.

03:38.810 --> 03:40.720
Aber was können wir noch mit dem String machen?

03:40.960 --> 03:43.630
Lass mich das klären. Gut

03:43.640 --> 03:46.070
Sie können dies auch tun.

03:46.130 --> 03:47.240
Sie können "Hallo" sagen

03:49.830 --> 03:50.640
+ "Dort!".

03:50.730 --> 03:52.070
Was denkst du wird hier passieren?

03:53.350 --> 03:56.210
Mal schauen. "Hallo!"

03:56.800 --> 04:08.960
Aber es ist ein Wort. Wir brauchen einen Platz. Also müssten wir "Hallo" + "da!" Machen.

04:09.190 --> 04:11.370
Und da haben wir den Platz.

04:11.430 --> 04:16.700
OK. So können wir Dinge hinzufügen. Fügen Sie also zwei Sätze zusammen.

04:17.970 --> 04:23.170
Was wenn wir es tun. Was ist, wenn wir so etwas tun?

04:23.280 --> 04:28.260
"Das ist nicht sehr nett"

04:29.860 --> 04:30.920
Ich drücke 'Enter' und.

04:31.090 --> 04:31.780
OK, das funktioniert.

04:31.780 --> 04:32.230
Das ist gut.

04:32.290 --> 04:34.830
Was aber, wenn ich hier einfache Anführungszeichen verwende?

04:34.900 --> 04:36.120
Was ist, wenn ich so gehe -

04:36.140 --> 04:40.330
Und vergiss nicht, ich habe gesagt, dass ich in JavaScript einfache Anführungszeichen verwenden kann.

04:40.690 --> 04:45.650
Nun, Sie sehen die Syntax ändert sich und ich bekomme einen kleinen Fehler.

04:45.790 --> 04:52.430
Nun, weil ich ein einfaches Anführungszeichen verwende und dann innerhalb der Zeichenfolge versuche ich ein einfaches Anführungszeichen zu verwenden. Und

04:52.430 --> 04:54.850
das würde auch passieren, wenn ich doppelte Anführungszeichen verwende.

04:54.860 --> 05:01.220
Wenn wir also zurück zum Beispiel gehen, füge ich hier ein weiteres Zitat hinzu.

05:01.350 --> 05:04.460
Nun, wieder, ich bekomme einen Fehler.

05:04.620 --> 05:07.330
Also lass mich das klären.

05:07.400 --> 05:12.060
Wie können wir dieses Problem vermeiden? Nun, mit einem String in JavaScript können wir so etwas machen:05:13.650 --> 05:16.240
'This' - Verwenden wir einfache Anführungszeichen.

05:16.230 --> 05:23.800
Das ist nicht - Und was ist das?

05:23.810 --> 05:27.490
'Das ist nicht sehr nett' (Fehler).

05:27.730 --> 05:31.170
Und dieser Backslash [\] hat eine besondere Bedeutung.

05:31.270 --> 05:35.600
Das "/" sagt "Hey, was auch immer danach kommt,

05:35.670 --> 05:41.720
Es ist eine besondere Bedeutung. Bedeutet, "ignorieren Sie es einfach - sagen Sie nicht, dass dies ein Stück Schnur ist.

05:41.790 --> 05:43.970
Ich will nur die hinteren Ticks. "

05:44.100 --> 05:45.770
Also wenn ich so renne.

05:45.820 --> 05:48.150
Hoppla! Ich habe die Syntax hier falsch gemacht.

05:48.180 --> 05:49.760
Offensichtlich müssen die Zitate übereinstimmen.

05:49.770 --> 05:50.890
Lass es uns nochmal versuchen.

05:52.420 --> 05:53.170
Da gehst du hin!

05:53.200 --> 05:56.190
Das ist sehr nett. OK

05:56.290 --> 05:57.320
Ich habe eine andere Frage.

05:57.430 --> 05:59.800
was geschieht hier?

06:00.310 --> 06:07.350
10 + "34". Das ist 'Nummer' 10 + 'String' von 34.

06:07.420 --> 06:08.440
Mal sehen was passiert.

06:10.450 --> 06:18.480
Hmm ... Seltsam. Also schaute sich JavaScript automatisch das an und sagte "Hmm, er fügt eine Nummer und einen String hinzu.

06:18.820 --> 06:22.320
Er versucht wahrscheinlich, Strings hinzuzufügen ".

06:22.390 --> 06:28.110
Also konvertiert JavaScript die Zahl '10' in eine Zeichenfolge '10' und macht '1034'.

06:28.450 --> 06:29.500
Das ist irgendwie komisch, oder?

06:29.500 --> 06:32.180
Es ist eine der Eigenheiten von JavaScript - es gibt ein paar von ihnen.

06:32.320 --> 06:33.770
Sie müssen sich nur daran gewöhnen.

06:34.150 --> 06:34.990
Lass uns etwas anderes versuchen.

06:34.990 --> 06:36.180
Was ist, wenn ich es tue?

06:36.420 --> 06:42.290
10 - "3"? Drücken Sie Enter.

06:42.410 --> 06:43.560
Ich bekomme 7.

06:43.780 --> 06:46.120
Was geht hier vor sich?

06:46.150 --> 06:56.360
Und weil du mit der Saite die Saite nicht wirklich subtrahieren kannst und ich meine, lass uns sehen, ob ich "Hallo" - "Tschüss" sage.

06:57.810 --> 07:02.500
Ich bekomme dieses komische Symbol, auf das wir zurückkommen werden. Aber das funktioniert nicht.

07:02.500 --> 07:08.320
So, jetzt sagt JavaScript "Ich werde" - weil er subtrahiert,

07:08.330 --> 07:10.400
Ich gehe nur davon aus, dass er die Zahl "3" meint.

07:10.400 --> 07:12.670
Also versucht er dir zu helfen.

07:13.550 --> 07:20.230
Aber! Manchmal kann es unerwartetes Verhalten haben, also solltest du niemals solche Dinge tun.

07:20.290 --> 07:25.540
Im Idealfall behalten Sie Zahlen mit Zahlen und Strings mit Strings und Sie behalten die Aktionen zwischen den

07:25.540 --> 07:26.430
wie Typen.

07:27.400 --> 07:34.520
Also lass uns zurückgehen. Was ist gerade passiert, wenn ich "Hallo" sage - "Tschüss"? Nun, NaN steht für "Nicht

07:34.550 --> 07:39.010
a Number 'und es ist technisch - in JavaScript können Sie hier die blaue Hervorhebung sehen.

07:39.140 --> 07:41.030
Es ist Teil des Typs "Nummer".

07:41.390 --> 07:47.390
So können Zahlen. Sie wissen, kann von 1 bis 10 reichen .. Sie wissen 567.

07:47.420 --> 07:54.820
Aber es gibt auch das 'NaN', wenn es heißt 'Hey, was auch immer du gerade geschrieben hast, ist keine Nummer'.

07:54.860 --> 07:56.480
Das ist also auch der Fall.

07:56.480 --> 08:02.470
Ich weiß, es ist wirklich sehr verwirrend, aber mach dir keine Sorgen. Es sind nur die Macken der Sprache, die wir lernen.

08:02.890 --> 08:03.230
OK.

08:03.350 --> 08:06.070
Ich werde Ihnen einen anderen JavaScript-Typ zeigen.

08:06.440 --> 08:10.000
Bevor wir im nächsten Video auf einige lustige Dinge kommen.

08:10.200 --> 08:12.960
Der nächste ist also 'Boolean'.

08:15.080 --> 08:19.980
Und der Boolesche Typ ist sehr einfach. Boolean bedeutet nur "wahr".

08:21.380 --> 08:22.680
Oder falsch'. Das ist es.

08:22.910 --> 08:29.420
Und manchmal kann das als '1'-s und' 0'-s dargestellt werden und für diejenigen, die viel über Computer wissen

08:29.420 --> 08:35.420
Sie wissen vielleicht, dass der Computer ziemlich oft auf '1'-s und' 0'-s läuft und das ist, wo er herkommt

08:35.420 --> 08:35.890
von.

08:36.780 --> 08:41.250
Aber Booleans sind sehr - sehr nützlich, weil wir jetzt etwas wie tun können

08:41.250 --> 08:44.040
"3 & gt; 2".

08:44.390 --> 08:47.820
Und ich sage 'wahr':'3' ist größer als '2'.

08:48.060 --> 08:51.780
Wenn ich '5 & gt; 10' mache.

08:51.930 --> 08:55.740
wir sagen 'falsch':'5' ist nicht größer als '10'.

08:55.770 --> 09:03.360
Wir können auch '5 & gt; = 5' machen.

09:03.420 --> 09:06.350
Also werde ich 'wahr' sagen, weil ich mehr als oder gleich machen kann.

09:06.450 --> 09:13.950
Und ich kann auch '5 & lt; = 5' tun.

09:15.810 --> 09:23.160
Was nun, wenn ich sagen möchte, ist "3 = 3"?

09:23.440 --> 09:24.790
Ich bekomme einen Fehler.

09:24.820 --> 09:26.720
Warum das?

09:26.750 --> 09:32.960
Weil in JavaScript, wenn du etwas sagen willst, etwas gleich ist, musst du '===' sagen

09:33.080 --> 09:37.640
'3 === 3' und ich werde 'wahr'.

09:37.750 --> 09:41.680
Und im nächsten Video erzähle ich dir, warum das so ist.

09:41.710 --> 09:42.850
Es ist sehr, sehr interessant.

09:42.850 --> 09:50.210
Aber denken Sie daran, dass das für Anfänger immer ein heikles Problem ist.

09:50.250 --> 09:57.300
Denken Sie daran, wenn Sie zwei Dinge, 3 gleiche Zeichen, '===' vergleichen. Der letzte, den ich dir zeigen möchte, ist folgendes:09:57.930 --> 10:03.930
'3! == 3' (ist nicht gleich).

10:03.940 --> 10:05.170
Ist das nicht verwirrend?

10:05.170 --> 10:14.770
Also, das sagt 'Ist 3 nicht gleich 3'? Falsch, weil '3' gleich '3' ist.

10:14.780 --> 10:15.320
Ich kenne.

10:15.380 --> 10:17.200
Es kann wirklich sehr verwirrend werden.

10:17.300 --> 10:21.590
Aber denken Sie daran als das Gegenteil des Gleichheitszeichens.

10:21.590 --> 10:27.800
Wenn ich zum Beispiel '4! == 5' mache, werde ich 'wahr' bekommen, weil du recht hast.

10:27.800 --> 10:31.170
'4' ist nicht gleich '5'.

10:31.180 --> 10:39.530
Also, was wir gerade gelernt haben, sind JavaScript-Vergleiche und sie sind die Dinge direkt hier.

10:39.660 --> 10:40.170
Das ist es.

10:40.170 --> 10:42.650
Sie müssen sich nur an diese erinnern.

10:42.840 --> 10:45.140
Nun, das hat Spaß gemacht, oder?

10:45.630 --> 10:47.470
Aber wir fangen gerade erst an.

10:48.060 --> 10:50.860
Nach diesem Video habe ich ein Übungsblatt für dich hinterlassen.

10:51.090 --> 10:55.440
Versuchen Sie, die Antworten auf die Probleme zu finden, kopieren Sie sie und fügen Sie sie ein.

10:55.470 --> 10:59.920
Jede der Fragen, der Linien in die JavaScript-Konsole.

10:59.970 --> 11:08.110
Wenn ich zum Beispiel "Werde 3 + 5" sagen, dann kopierst du dies, legst es in die Konsole und

11:08.110 --> 11:09.440
Drücken Sie einfach die Eingabetaste.

11:09.610 --> 11:15.320
Und ich möchte, dass Sie es sich bequem machen, mit der Konsole zu arbeiten und damit herumzuspielen und herumzuexperimentieren.

11:15.460 --> 11:18.990
Und wie gesagt:Versuch wirklich, an den nächsten Problemstellungen zu arbeiten.

11:19.000 --> 11:24.400
Ich habe dir nicht viel gegeben, weil ich nicht will, dass du überwältigt wirst.

11:24.760 --> 11:27.950
Es gibt viel mehr interessante Dinge in JavaScript als das passiert.

11:28.150 --> 11:33.550
Und Sie können das ziemlich leicht aufnehmen. Aber ich ermutige Sie, dafür zu sorgen, dass Sie die Übungen machen.

11:33.790 --> 11:36.900
Nun, können Sie alle von ihnen bekommen?

11:36.930 --> 11:38.330
Viel Glück!

11:38.440 --> 11:40.190
Wir sehen uns im nächsten Video.

11:40.190 --> 11:40.710
Tschüss
