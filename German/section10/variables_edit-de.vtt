WEBVTT

00:01.350 --> 00:05.940
Willkommen zurück! Bis zu diesem Punkt haben wir mit einigen JavaScript-Typen herumgespielt.

00:06.040 --> 00:09.250
Nur 3 von 7 Punkten. Keine Sorge, wir kommen zu den anderen.

00:09.400 --> 00:12.040
Aber es gibt ein Problem.

00:12.040 --> 00:15.070
Wie erinnert sich das Programm an Dinge?

00:16.050 --> 00:25.770
Zum Beispiel, wenn wir schreiben "Diese Brezeln machen mich durstig".

00:26.850 --> 00:28.350
Und wir werden das tun.

00:28.350 --> 00:30.350
"+" Wir brauchen den Ausruf "!".

00:30.390 --> 00:31.040
OK.

00:31.620 --> 00:32.540
Ich gebe das ein.

00:32.700 --> 00:34.100
OK. Ich verstehe das. Das ist - das ist gut.

00:34.110 --> 00:36.750
Aber wenn ich das nochmal benutzen muss.

00:36.940 --> 00:42.300
Gut. Wieder muss ich schreiben "Diese Brezeln

00:44.630 --> 00:47.980
machen mich durstig ".

00:49.060 --> 00:52.870
Und stellen Sie sich vor, wenn Sie das hunderte Male machen müssen.

00:53.020 --> 00:55.160
Das ist irgendwie nervig, oder?

00:55.180 --> 01:00.560
Das ist - Computer sollen uns helfen, aber stattdessen schreiben wir weiter und schreiben weiter.

01:00.580 --> 01:02.990
Und das ist nicht sehr effizient, oder?

01:04.070 --> 01:07.100
Nun, Werte zu fangen und zu halten

01:07.100 --> 01:15.630
JavaScript hat etwas namens Variable. Und Variablen können verwendet werden

01:16.880 --> 01:18.870
mit dem Wort "var".

01:19.200 --> 01:34.590
So, jetzt, wenn ich 'var george' gehe, so 'var george = "Diese Brezeln machen mich durstig"

01:35.620 --> 01:36.580
plus [+] "!".

01:39.900 --> 01:44.470
Beachten Sie das "Semikolon" hier - ich werde erklären, was das in einem Stück macht.

01:44.520 --> 01:46.850
Ich drücke 'Enter'. Ich bekomme 'undefiniert'.

01:46.850 --> 01:48.140
Machen wir uns keine Sorgen.

01:48.210 --> 01:49.610
Das ist im Moment nicht wichtig.

01:49.800 --> 01:57.000
Und jetzt, wenn ich 'George' gehe, wirst du sehen, dass Google Chrome mir tatsächlich hilft und es erkennt.

01:57.090 --> 01:58.260
Ich drücke 'Enter'.

01:58.650 --> 02:03.250
"Diese Brezeln machen mich durstig!". Wie großartig ist das?

02:03.960 --> 02:06.250
Also können wir diesen Wert speichern.

02:07.110 --> 02:12.510
Und das ist natürlich einfach, aber stell dir vor, das war eine lange Rechnung, die wir machen mussten und die wir haben wollten

02:12.510 --> 02:13.330
um darauf zuzugreifen.

02:13.380 --> 02:17.180
Nun, alles, was wir jetzt tun müssen, ist "George".

02:17.190 --> 02:18.840
Es ist eine "Variable".

02:18.870 --> 02:25.490
So, jetzt siehst du im letzten Video, als ich sagte, dass wenn wir Dinge vergleichen, wir '===' benutzen müssen

02:25.850 --> 02:34.850
Nun, denn wenn Sie "3 = 3" sagen, heißt es:"Weisen Sie die Nummer 3 zu 3 zu".

02:35.100 --> 02:38.280
Aber es gibt eine Regel mit Variablen. Mit Variablen

02:38.420 --> 02:47.180
Sie können nicht mit Zahlen beginnen. Wenn ich also 'var 3 = 3' gehe, erhalte ich einen Fehler.

02:47.360 --> 02:53.790
Aber wenn ich 'var three = 3' gehe, ist das kein Problem.

02:54.200 --> 02:57.960
Und Variablen haben ein paar Regeln.

02:58.910 --> 03:03.710
Die Regeln lauten:Nun, es muss mit einem Brief beginnen.

03:03.710 --> 03:11.550
Es kann mit einer Zahl enden, das ist in Ordnung, aber es muss mit dem Buchstaben beginnen und es darf nicht mit einem Symbol beginnen.

03:11.660 --> 03:22.030
Also kann ich 'var & hallo = 5' machen. Jetzt bekomme ich einen Fehler.

03:22.040 --> 03:28.480
Also eine Variable muss mit dem Buchstaben beginnen, kann in einer Zahl enden, das ist in Ordnung.

03:28.700 --> 03:37.140
Und es gibt ein paar andere spezielle Fälle. Eine Variable kann auch mit '$' oder '_' beginnen.

03:37.520 --> 03:42.950
Aber wir müssen uns nicht zu sehr darum kümmern und den Standard und das JavaScript, damit Sie keine bekommen

03:42.950 --> 03:43.400
Error.

03:43.430 --> 03:52.610
Wenn dies passiert, aber Sie tun etwas namens "Camel Case". Also, wenn es ein Wort war, sagen wir 'Vorname', du

03:52.710 --> 03:56.660
Mach 'Kamelfall', denn das sind zwei getrennte Wörter. Du machst Kleinbuchstaben

03:56.690 --> 04:01.120
das erste Wort. Das zweite Wort wird in Großbuchstaben geschrieben.

04:01.160 --> 04:08.200
Also 'Vorname'. Sie haben den ersten Buchstaben großgeschrieben und das heißt "Kamelfall".

04:08.200 --> 04:16.030
Also immer noch nicht, was Variablen sind? Nun, ich werde diesen Punkt weiter demonstrieren

04:16.030 --> 04:20.620
und warum wir Werte in einer Programmiersprache speichern müssen.

04:20.620 --> 04:28.210
Ich werde Ihnen einen kleinen, coolen Trick vorstellen, der "prompt" genannt wird. Und 'prompt ()', wenn ich diese Klammern verwende

04:29.710 --> 04:30.920
und ich drücke 'Enter' ...

04:31.570 --> 04:32.520
Sieh dir das an.

04:32.630 --> 04:37.470
Ich habe etwas hier und es fragt nach etwas und ich drücke OK.

04:37.610 --> 04:38.790
Und sieh dir das an!

04:38.930 --> 04:40.380
Es gibt zurück, was auch immer ich tippte.

04:40.550 --> 04:42.680
Lass es uns nochmal versuchen. Wenn ich 'prompt ()' gehe,

04:43.700 --> 04:47.030
Drücken Sie "Enter" und sagen Sie "Hallo", drücken Sie "OK".

04:48.240 --> 04:49.840
Ich bekomme diese Antwort zurück.

04:50.210 --> 04:50.420
OK.

04:50.430 --> 04:55.430
Wie können wir also etwas wie "Was ist dein Benutzername?" Sagen? und diesen Wert speichern?

04:55.470 --> 05:02.790
Das ist etwas, das wir ziemlich oft auf Websites verwenden, oder? Nun, mit 'prompt' können Sie 'prompt ()' machen.

05:02.790 --> 05:11.930
Dann sagen wir hier "Was ist dein Benutzername?".

05:12.000 --> 05:13.890
Also gehen wir hier in die Zeichenfolge.

05:14.160 --> 05:17.380
Und wenn ich 'Enter' drücke.

05:17.510 --> 05:20.000
OK, so heißt es "Was ist dein Benutzername".

05:20.000 --> 05:28.880
Also wenn ich jetzt meinen Benutzernamen "andrei" eintippe, bekomme ich den "username". Also mit diesem Wissen,

05:29.080 --> 05:33.940
Lass uns einen Taschenrechner machen. Machen wir 'var first = prompt ()'

05:38.420 --> 05:40.310
"erste Nummer eingeben"

05:43.120 --> 05:49.840
Und dann gebe ich 'gedrückte' Shift 'hier ein, damit ich eine neue Zeile hinzufügen kann. Also 'Shift', 'Enter' und ich werde sagen

05:50.680 --> 05:54.840
'var second = Eingabeaufforderung ()'

05:58.060 --> 06:00.710
"zweite Nummer eingeben"

06:04.550 --> 06:14.580
Wenn ich jetzt 'Enter' drücke, bekomme ich 'erste Nummer eingeben'. Ich sage '5', drücke OK, dann 'zweite Nummer eingeben' und ich

06:14.580 --> 06:17.460
Sagen Sie "10" und drücken Sie OK.

06:19.210 --> 06:19.430
OK.

06:19.450 --> 06:21.970
Aber jetzt habe ich 'undefiniert'.

06:22.330 --> 06:23.730
Aber hier ist die coole Sache.

06:23.750 --> 06:31.470
Jetzt habe ich diese Werte in diesen Variablen, damit ich sie verwenden kann. Wenn ich "zuerst" überprüfe,

06:31.510 --> 06:35.260
Ich habe "5"; wenn ich "Sekunde" überprüfe,

06:35.480 --> 06:37.080
Ich habe "10".

06:37.340 --> 06:39.810
Aber Sie werden bemerken, dass ich doppelte Anführungszeichen [""] um sie herum habe.

06:39.980 --> 06:46.230
Und das, weil 'prompt' automatisch zu String wechselt, es erwartet eine Form von Text.

06:46.280 --> 06:50.540
Es gibt also einen Trick, um einen String in eine Zahl zu verwandeln.

06:50.730 --> 06:56.960
Und alles, was wir tun müssen, und das ist nur Syntax, die wir uns merken müssen, ist "Nummer (zuerst)".

06:59.640 --> 07:00.730
Und es wird uns "5" geben.

07:00.900 --> 07:21.280
Alles, was wir jetzt tun müssen, ist 'Nummer (erste) + Nummer (zweite)'. Und wir werden die Summe dieser 2 bekommen.

07:21.310 --> 07:23.530
Aber wieder können wir hier eine Variable verwenden.

07:23.530 --> 07:25.260
Ich möchte das nicht weiter tippen.

07:25.270 --> 07:33.400
Also, wenn ich 'var sum = Nummer (erste) + Nummer (zweite)' mache

07:33.640 --> 07:39.340
Drücken Sie Enter'. Noch nichts, weil es jetzt in der 'Summe' ist.

07:40.740 --> 07:45.410
Also wenn ich nach 'Summe' frage, bekomme ich '15'.

07:45.510 --> 07:45.720
OK.

07:45.720 --> 07:50.340
Also lasst uns hier unser erstes Programm schreiben.

07:50.520 --> 07:54.800
Ich werde dir einen weiteren coolen Trick zeigen und das ist "wachsam".

07:54.810 --> 08:01.710
Anstatt "prompt" verwenden wir "alert". Und 'Alarm ()'.

08:01.720 --> 08:04.600
Was es tut ist - es sagt "Hallo!"

08:08.330 --> 08:14.510
Wenn ich 'Enter' drücke, bekomme ich ein Pop-up, aber ohne etwas einzugeben, nur einen 'OK'-Knopf.

08:14.530 --> 08:18.550
So können wir einen Taschenrechner erstellen.

08:18.730 --> 08:19.870
Also lass uns das tun.

08:19.900 --> 08:25.960
Und in Chrome, wenn Sie tatsächlich auf "↑" drücken, werden Sie sich an Ihre Geschichte erinnern und Sie können was auch immer machen

08:25.960 --> 08:27.080
du hast getippt.

08:27.250 --> 08:31.410
Also erinnerst du dich hier, wir haben 'erste', 'zweite'.

08:31.500 --> 08:47.420
Das sind also die zwei 'prompt'-s und dann sage ich' var sum = Number (first) + '

08:48.850 --> 08:54.200
'Nummer (Sekunde);'

08:54.230 --> 08:58.680
Und schließlich nochmal 'Shift', 'Enter', damit der Code nicht ausgeführt wird.

08:58.880 --> 09:03.330
Und ich mache 'Alarm (sum);'.

09:03.390 --> 09:06.570
Wenn Sie das betrachten, was wird Ihrer Meinung nach passieren?

09:06.580 --> 09:12.990
Ich fragte zuerst nach einer "prompt" und ich speicherte diesen Wert in "first"; Die zweite "Aufforderung" fragte nach einer "zweiten" Nummer.

09:13.030 --> 09:14.590
Speichert es in der 'zweiten'.

09:14.590 --> 09:18.840
Die 'Summe' berechnet die zwei Zahlen und dann 'alarmiere' ich die 'Summe'.

09:19.030 --> 09:20.730
Ich werde "Enter" drücken und sehen, was passiert.

09:22.460 --> 09:24.730
Geben Sie die erste Nummer ein. Ich werde '15' sagen.

09:25.160 --> 09:29.010
OK. Nächste Nummer. Ich werde '20' sagen.

09:29.030 --> 09:30.460
OK.

09:30.510 --> 09:31.710
Und sieh dir das an!

09:31.830 --> 09:36.460
Ich habe '35' als Antwort bekommen.

09:36.560 --> 09:42.660
Und wieder, wenn ich weiß, was wir über Strings und Numbers wissen, kann ich jetzt

09:42.660 --> 09:46.750
wieder habe ich '↑' gedrückt, um genau das zu haben, was ich zurückgeschrieben habe,

09:46.770 --> 09:57.950
Jetzt kann ich innerhalb der 'Warnung sagen ("Die Summe ist:" + Summe);'.

09:58.010 --> 10:08.750
Mal sehen. Wenn ich 'Enter' drücke, gehe ich '3 + 4'. "Die Summe ist:7". Sieh dir das an! Unser erstes Programm.

10:09.380 --> 10:18.720
Variablen können einen beliebigen JavaScript-Typ enthalten. Stellen Sie sich diese als kleine Schubladen in Ihrem Schreibtisch vor.

10:18.720 --> 10:25.830
In deinem Schreibtisch kannst du die Schublade öffnen und alles mitnehmen, was du willst:deine Stifte, Papier, Radiergummis,

10:25.830 --> 10:29.630
Taschenrechner und Sie können diese Schublade schließen.

10:29.670 --> 10:34.680
Und wann immer Sie brauchen, einen Stift oder einen Taschenrechner, können Sie diese Schublade öffnen und greifen.

10:34.680 --> 10:37.210
Und das sind Variablen.

10:37.400 --> 10:44.950
Nun, die eine Sache, die ich irgendwie ausgelassen habe und von der ich dir nicht erzählt habe, ist dieses kleine komische Semikolon hier.

10:44.990 --> 10:46.430
Warum brauchen wir es?

10:46.430 --> 10:55.640
Ich meine, wir konnten '3 + 4' machen und wir haben kein 'Semikolon' gesehen. Nun, in JavaScript

10:55.640 --> 11:00.930
"Semikolon" bedeutet das Ende eines Ausdrucks.

11:00.960 --> 11:02.870
Was bedeutet das?

11:03.860 --> 11:11.850
Ein Codefragment, das einen Wert erzeugt, wird als "Ausdruck" bezeichnet. Also jeder Wert der wirklich geschrieben wird

11:11.850 --> 11:12.550
ist ein "Ausdruck".

11:12.570 --> 11:20.910
Also, wenn ich '3' tue, das ist ein 'Ausdruck', erzeugt es einen Wert. '3 + 4' ist ein 'Ausdruck'. Im

11:20.910 --> 11:21.930
JavasScript

11:21.990 --> 11:25.820
Die Regel ist - und es gibt Leute, die Semikola nicht mehr benutzen.

11:25.830 --> 11:33.080
Aber die Art und Weise, wie es gebaut wurde und wie es funktionieren soll, ist "3 + 4" und fügt ein "Semikolon" hinzu.

11:33.270 --> 11:37.140
Die meiste Zeit, wenn Sie es vergessen, wird es immer noch funktionieren.

11:37.180 --> 11:39.950
Es gibt nur kleine Fälle, in denen ich dein Programm brechen werde.

11:40.020 --> 11:47.010
Aber nur um gute Gewohnheiten für jetzt, am Ende jedes Ausdrucks, zu bilden, das ist alles, was wir getan haben

11:47.010 --> 11:50.890
weit, fügen Sie ein 'Semikolon' hinzu und Sie werden sich daran gewöhnen.

11:52.710 --> 12:01.600
OK. Lassen Sie uns mit Variablen weitermachen, weil sie sehr interessant sind. Was, wenn ich 'var a = true' mache?

12:02.090 --> 12:06.060
Denn erinnern Variablen können alles enthalten.

12:06.380 --> 12:15.500
So können Variablen boolesche Variablen enthalten und Variablen können Strings enthalten, und Variablen können Zahlen enthalten, wie wir gesehen haben.

12:15.500 --> 12:17.610
Also halten wir einfach 'var a = true'.

12:17.650 --> 12:22.170
Aber was nun, wenn ich -

12:22.560 --> 12:27.360
Nun, ich kann auf 'a' zugreifen, aber was ist, wenn ich 'a =' Hallo 'sage?'

12:27.710 --> 12:35.300
Was denkst du wird passieren, wenn ich 'a' und dann 'Enter' drücke?

12:35.300 --> 12:46.710
Nun, ich bekomme "Hallo", weil Sie einen Wert an "a" neu zuweisen können, weil das Programm anfangs dachte "a" ist gleich "wahr".

12:46.720 --> 12:49.770
Aber dann sagten wir:"Nun," a "=" Hallo "jetzt".

12:49.810 --> 12:58.810
Also hat es den 'wahren' Wert verworfen und jetzt ist 'a' gleich 'Hello' und wir haben 'echt' völlig vergessen

13:00.340 --> 13:01.040
OK.

13:01.390 --> 13:02.710
Ein weiterer kleiner Trick.

13:02.770 --> 13:06.940
Was passiert, wenn ich so gehe? [var a;]

13:06.940 --> 13:08.420
Funktioniert das oder bekomme ich einen Fehler?

13:08.470 --> 13:11.740
Mal schauen.

13:11.890 --> 13:12.490
OK. 'nicht definiert'.

13:12.490 --> 13:14.530
Ich habe diesen roten Balken nicht bekommen, keinen Fehler.

13:14.560 --> 13:18.010
OK. Was, wenn ich auf das 'a' zugreife, mal sehen was passiert.

13:18.010 --> 13:24.880
Gut "Hallo" wurde im letzten Teil zugewiesen. Lass uns eine andere Variable machen. Also wenn ich die Variable 'b' mache, welche

13:24.880 --> 13:31.860
wir haben es vorher nicht benutzt. Und ich tue das. Mal sehen, ob wir darauf zugreifen können. 'nicht definiert'.

13:32.000 --> 13:44.110
'b' ist undefiniert. Und das mag Ihnen schon vorher aufgefallen sein, aber "undefined" ist unser 4. Typ in JavaScript. Und

13:44.110 --> 13:50.920
Ich weiß, es ist komisch, weil du, du fragst dich "Was ist undefiniert?". Undefiniert ist nur eins

13:51.160 --> 13:54.630
Sache in JavaScript. Wie der Name schon sagt,

13:54.640 --> 13:57.600
das bedeutet, dass die Variable nicht zugewiesen wurde.

13:58.090 --> 14:07.240
Also, denken Sie daran, wie Sie 'undefiniert' bekommen, wenn die Variable 'Passwort' so ist.

14:07.270 --> 14:15.760
Wenn also ein Nutzer kein "Passwort" eingibt, dann wird "undefiniert" und Sie können sagen "Gut 'Passwort"

14:15.760 --> 14:16.750
ist nicht definiert".

14:16.810 --> 14:20.750
Sie müssen ein "Passwort" eingeben oder ein Formular benötigt eine E-Mail-Adresse.

14:20.750 --> 14:30.250
Nun, wenn E-Mails nicht definiert sind, können Sie sie nicht im Formular anmelden. Also 'undefiniert' wird verwendet, wenn nichts

14:30.250 --> 14:33.750
ist einer Variablen zugeordnet.

14:33.770 --> 14:38.740
Erinnere dich also daran, wie du Sachen aus der Schublade in deinem Schreibtisch verschiebst und etwas anderes hineinlegst

14:38.740 --> 14:43.490
In können Variablen verschiedenen Dingen zugewiesen werden.

14:43.490 --> 14:51.730
Ich kann meinen Stift von einer Schublade zur anderen bewegen, ich kann Dinge in dieser Schublade ändern und wenn es nichts gibt

14:51.730 --> 14:52.560
in dieser Schublade,

14:52.600 --> 14:56.400
Nun, es ist "undefiniert". OK.

14:56.880 --> 14:59.370
Das ist ein sehr, sehr großes Konzept in JavaScript.

14:59.370 --> 15:04.100
Hoffentlich verstehst du. Ich habe ein paar Übungen für dich am Ende dieses Videos.

15:04.110 --> 15:05.720
Ich weiß, dass Sie es tun können!

15:05.730 --> 15:08.870
Viel Glück! Und wir sehen uns im nächsten Video.

15:08.940 --> 15:09.150
Tschüss
