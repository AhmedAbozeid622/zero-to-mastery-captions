WEBVTT

00:00.840 --> 00:03.000
Und willkommen zurück!

00:03.000 --> 00:10.830
Wir werden eine kurze Pause vom Lernen der JavaScript-Syntax machen, um Ihnen zu zeigen, wie JavaScript implementiert wird

00:11.190 --> 00:12.170
im Browser.

00:12.450 --> 00:15.730
Wir werden zu diesem Bild zurückkehren, das wir schon oft gesehen haben

00:15.780 --> 00:22.650
in diesem Kurs. Und wir haben eine ziemlich gute Vorstellung davon, was HTML und CSS tut.

00:22.650 --> 00:31.740
Wenn Sie sich erinnern, wird HTML an den Browser gesendet, dann sieht es das "Link" -Tag und das CSS wird gesendet

00:31.740 --> 00:32.570
der Browser.

00:32.670 --> 00:36.270
Aber was ist mit unserem neuen Freund JavaScript hier?

00:36.300 --> 00:37.380
Was passiert mit ihm?

00:38.260 --> 00:43.350
Nun, in diesem Video werden wir genau das lernen.

00:43.390 --> 00:49.340
Also habe ich hier eine index.html Datei. Ich werde es mit Google Chrome öffnen.

00:49.450 --> 00:50.940
Es ist jetzt völlig leer.

00:51.250 --> 00:57.630
Und ich werde es auch in meinen Sublime-Text ziehen, damit wir etwas hinzufügen können.

01:00.370 --> 01:06.790
So habe ich Sublime Text und den Browser, und wir werden unseren kleinen kurzen Befehl verwenden, um eine schnelle zu erstellen

01:06.790 --> 01:09.660
HTML-Datei - 'Javascript'.

01:09.970 --> 01:21.600
Und haben wir einfach einen einfachen 'Header', der 'Javascript in HTML' sagt. Speichern und aktualisieren.

01:21.650 --> 01:22.260
Perfekt!

01:22.280 --> 01:23.910
Wir haben schon Meister davon.

01:23.930 --> 01:25.760
Wir wissen alle, was vor sich geht.

01:26.180 --> 01:29.830
Also, wie fügen wir JavaScript dazu?

01:29.840 --> 01:41.620
Ich meine:Mit CSS hatten wir das Link-Tag, richtig? Und wir hatten dieses "href" wo wir es erzählen wo es ist. Gut, wenn

01:41.620 --> 01:49.910
Sie erinnern sich, dass JavaScript wieder genauso wie HTML und CSS nur eine Datei ist.

01:50.050 --> 01:54.550
Also lass uns zuerst eins erstellen. In erhabenem Text

01:54.550 --> 01:55.950
Ich werde eine neue Datei erstellen.

01:56.100 --> 02:00.170
Ich werde es speichern und ich werde "script.js" sagen.

02:00.220 --> 02:01.160
"script.js".

02:01.180 --> 02:02.860
Sehen Sie den 'Punkt js' am Ende?

02:02.860 --> 02:04.550
Das bedeutet JavaScript.

02:04.660 --> 02:10.050
Beachten Sie, was passiert, wenn ich auf "Speichern" klicke. Am Ende Sublime Text

02:10.090 --> 02:13.780
jetzt konvertierte Syntax zu JavaScript.

02:13.850 --> 02:21.440
So jetzt kann ich etwas wie '4 + 3' schreiben und ich bekomme die coolen JavaScript-Farben als, und ich kann schreiben

02:21.890 --> 02:35.850
'if (4 + 3 === 7)', kann ich 'warnen ("Du bist schlau!").

02:36.500 --> 02:38.800
So können Sie sehen, dass es die Syntax für mich tut.

02:39.870 --> 02:40.450
OK.

02:40.830 --> 02:42.220
Perfekt.

02:42.330 --> 02:44.650
Dann speichere ich das einfach.

02:44.760 --> 02:47.840
Mal sehen, ob wir das zu ... oops hinzufügen können.

02:47.880 --> 02:49.390
Ich habe das Semikolon hier vergessen.

02:49.410 --> 02:51.080
Ich vergesse es auch immer.

02:51.210 --> 02:53.210
Fügen wir das unserem HTML hinzu.

02:53.430 --> 02:58.720
Wenn es funktioniert, erhalten wir eine "Warnung", die sagt:"Du bist schlau!"

02:58.920 --> 03:00.190
Wie können wir das machen?

03:01.240 --> 03:06.780
Nun, es gibt ein HTML-Tag namens "Skript" -Tag.

03:07.150 --> 03:15.510
Also "Link" -Tag - für Stylesheet, "Script" -Tag für - JavaScript. Und alles, was wir tun, ist folgendes:03:15.680 --> 03:25.250
Wir haben den 'type = "text / javascript"'. Du siehst hier, wie wir mit CSS "text / css" haben. Nun, wir sagen es

03:25.250 --> 03:36.380
Hier ist das JavaScript. Und hier kann JavaScript direkt hier geschrieben werden.

03:37.280 --> 03:45.150
Ich gehe 'alarm' ('hallo') und du erinnerst dich vielleicht daran, weil es so etwas wie das 'style'-Tag für CSS ist.

03:45.310 --> 03:46.400
Mal sehen was passiert.

03:47.380 --> 03:49.930
Ich werde mich erfrischen und ich bekomme

03:50.060 --> 03:50.790
'Hallo'.

03:51.140 --> 03:51.950
Sieh dir das an!

03:51.950 --> 04:01.520
Wir haben JavaScript zu HTML hinzugefügt. Aber ich möchte diese Datei wirklich verwenden. Wie wir mit CSS wissen wir

04:01.520 --> 04:06.890
nicht unbedingt wollen, dass unser JavaScript auf HTML lebt, wir wollen Trennung von Anliegen, wir wollen das

04:06.890 --> 04:08.620
JavaScript in der JavaScript-Datei.

04:09.180 --> 04:14.480
Nun, die Art, wie wir das machen, ist - durch eine Quelldatei.

04:15.040 --> 04:20.830
Alles, was wir tun ist "src". Sie erinnern sich vielleicht an Bilder.

04:20.860 --> 04:27.690
Also haben wir anstelle von 'href' und 'link' 'src' und wir sagen 'script.js'.

04:28.660 --> 04:34.300
Ich spare und ich erfrische mich. Und ich bekomme "Du bist schlau!".

04:34.310 --> 04:41.980
Jetzt können wir wieder 'script.js' sagen, denn, nun, es ist im selben Ordner - es ist im Desktop-Ordner.

04:42.050 --> 04:49.130
Wenn das nicht der Fall wäre, dann wäre dieser HTML-Code nicht im Desktop-Ordner enthalten, wir müssten etwas tun

04:49.160 --> 04:51.350
wie 'desktop / script.js ...'. OK.

04:59.150 --> 05:05.310
Das ist sehr interessant. Was ist, wenn ich mehrere JavaScript-Dateien habe, könnten wir das gesehen haben

05:05.330 --> 05:09.440
in ... erinnern Bootstrap und Bootstrap wir haben wie drei 'Skript' Tags.

05:09.810 --> 05:10.600
Nun, ja.

05:10.700 --> 05:18.020
Sie können, nur - wie Sie mit "Link" können Sie mehrere "Skript" -Tags haben und Sie können einfach sagen "script2",

05:18.050 --> 05:24.490
'script3' und wieder wird jeder einzeln ausgeführt.

05:25.660 --> 05:26.320
OK.

05:26.730 --> 05:36.540
Eine Frage, die Sie vielleicht haben, ist:Warum habe ich das "Skript" -Tag hier unten, ganz unten, platziert?

05:36.540 --> 05:38.200
vom Körper?'

05:38.260 --> 05:39.190
Warum haben wir nicht -

05:39.220 --> 05:41.200
und lass mich das jetzt einfach entfernen ...

05:41.200 --> 05:47.550
Warum stellen wir es nicht einfach an die Spitze, wie wir es mit der CSS-Datei tun?

05:47.680 --> 05:49.140
Nun, lass mich dir etwas zeigen.

05:49.240 --> 05:50.560
Lass es uns hier aufstellen.

05:50.560 --> 05:51.690
Mal sehen was passiert.

05:52.000 --> 05:59.350
Ich werde mich auffrischen. OK. Ich bekomme "Du bist schlau!"

05:59.390 --> 06:00.350
Ich weiß nicht, ob du das gesehen hast.

06:00.350 --> 06:02.030
Hast du JavaScript gesehen?

06:02.180 --> 06:03.300
Lass uns das schnell ändern.

06:03.320 --> 06:10.750
Nehmen wir an, unsere Website ist jetzt neu und neu und ich werde "Warten auf Javascript" sagen.

06:11.010 --> 06:15.080
Ich werde sparen. Beachten Sie, was mit der Kopfzeile passiert.

06:15.380 --> 06:18.970
Ich erfrische mich. Es hat sich noch nicht geändert.

06:19.190 --> 06:22.500
Ich muss klicken "Du bist schlau!"

06:22.550 --> 06:24.600
Du siehst, es ist komplett weg.

06:24.610 --> 06:34.640
Klicken Sie auf "OK" und erst dann wird es angezeigt, weil der Browser die Datei liest, geht und die CSS-Datei abruft

06:34.640 --> 06:39.070
dann sieht er das "Skript" -Tag und sagt "Oh, ich werde lesen, was hier drüben ist!"

06:39.140 --> 06:42.770
Und hier ist eine "Warnung" und was für eine "Warnung" tut es ...

06:42.830 --> 06:50.090
Es wartet darauf, dass wir auf "OK" klicken, damit der Browser nicht auf JavaScript warten kann.

06:50.090 --> 06:56.750
Sie werden also ältere Leute sehen, die die "Script" -Tags hier einfügen, aber das verzögert tatsächlich was

06:56.750 --> 06:58.470
wird vom Benutzer gesehen.

06:58.820 --> 07:11.270
Stattdessen, wenn wir es hier ablegen und den Text wieder auf "Nicht warten" und einen Speichervorgang ändern. Schau was passiert.

07:13.260 --> 07:20.440
'Nicht auf Javascript warten' - das hat sich geändert. Daher möchten wir unsere "Skript" -Tags am besten unten stellen

07:20.440 --> 07:21.200
vom Körper.

07:21.400 --> 07:31.270
Was das bedeutet ist, dass die Website angezeigt wird, gerendert wird und wir dann noch warten müssen

07:31.270 --> 07:34.000
das zu ladende JavaScript - sagen wir, wir hätten eine coole Animation.

07:34.000 --> 07:36.070
Ich muss warten, bis das geladen ist.

07:36.220 --> 07:43.090
Aber für einen Benutzer scheint es, als würde die Website viel schneller geladen, da sie möglicherweise nicht auf ein Dropdown-Menü klicken

07:43.090 --> 07:48.790
Menü, oder sehen Sie die Animation sofort und beachten Sie, dass es eine Verzögerung gibt, aber sie werden eine Verzögerung sehen, wenn sie

07:48.790 --> 07:50.310
sehe nichts auf der Seite.

07:50.350 --> 07:54.030
Also 'Skript' Tags an der Unterseite.

07:54.110 --> 07:55.220
Eine letzte Sache.

07:56.370 --> 08:00.600
Wie bekommen wir diese Konsole, um Zeug zu drucken?

08:01.440 --> 08:05.760
Es wäre schön, wenn ich nicht ständig alarmieren könnte, um etwas in die Konsole zu bekommen.

08:05.910 --> 08:14.060
Nun, in JavaScript können Sie etwas tun, "console.log" genannt.

08:14.140 --> 08:18.710
Und hier kann ich "Helooooo" sagen.

08:18.820 --> 08:20.640
Also diese Syntax ist ein bisschen komisch.

08:20.650 --> 08:29.580
Ich werde später erklären, was hier vor sich geht, aber "console.log" ist eine spezielle kleine Syntax, die wir verwenden können.

08:29.590 --> 08:39.420
Und wenn ich jetzt die Seite aktualisiere, logge ich mich hier ein. Also kann ich hier soviel schreiben wie ich will.

08:39.430 --> 08:46.130
Ein bisschen wie "Alarm", aber ohne das lästige Pop-up immer wieder und wieder auffrischen.

08:46.310 --> 08:47.430
Und ich bekomme 'Hellooooo'.

08:47.480 --> 08:51.800
In den nächsten Videos werden wir viel "console.log" verwenden.

08:51.820 --> 08:59.170
Sie können sehen, dass es eine gute Möglichkeit ist, etwas auf die Konsole zu drucken, bevor wir lernen, wie das geht

08:59.530 --> 09:01.210
ändere unser HTML.

09:02.420 --> 09:03.380
Also werde ich in der nächsten sehen. Tschüss
