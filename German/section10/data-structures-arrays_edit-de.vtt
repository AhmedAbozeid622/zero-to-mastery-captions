WEBVTT

00:02.180 --> 00:08.210
Willkommen zurück. Ich hoffe du hast nach dem Funktionsvideo eine schöne lange Pause gemacht, weil ich weiß, dass wir uns ein Bild davon gemacht haben

00:08.210 --> 00:08.930
Menge.

00:09.410 --> 00:12.510
Wir werden diesmal etwas leichter lernen.

00:12.770 --> 00:16.430
Und wir werden unsere erste Datenstruktur lernen.

00:16.700 --> 00:19.630
Nun, was ist eine Datenstruktur?

00:19.640 --> 00:29.000
Bisher haben wir nur über Zahlen, Strings, Booleans, 'undefined' und Funktionen gelernt. Aber wie geht es dir?

00:29.000 --> 00:31.460
alle speichern?

00:31.490 --> 00:37.250
Wir haben gesagt, dass eine Variable wie eine Schreibtischschublade ist, aber Sie wollen nicht alles hineinwerfen und haben

00:37.250 --> 00:42.170
eine riesige Sauerei. Oder du willst nicht nur einen Stift werfen und diese Schublade schließen.

00:42.170 --> 00:49.560
Im Idealfall können Sie mehr Dinge speichern, Sie können sie organisieren. Datenstrukturen sind wie Fachfächer

00:49.560 --> 00:56.680
in deinem Schreibtisch, irgendwie wie dieses Bild hier drüben. Verschiedene Datenstrukturen sind in verschiedenen Dingen gut.

00:56.800 --> 01:03.820
Zum Beispiel sieht es in diesem Bild so aus, als ob der Aktenschrank wirklich sehr gut ist, Dinge zu finden,

01:03.820 --> 01:11.510
weil es in alphabetischer Reihenfolge sortiert ist. Und Datenstrukturen geben uns diese Fähigkeit, Informationen zu speichern

01:11.960 --> 01:17.010
und greifen Sie auf eine für uns nützliche Weise zu.

01:17.120 --> 01:20.840
Also lasst uns unsere erste Datenstruktur lernen und das ist es

01:24.160 --> 01:26.010
"Array".

01:26.180 --> 01:32.690
Öffnen wir unsere Konsole und wir haben unsere Skriptdatei hier und wir werden unser erstes Array schreiben

01:33.050 --> 01:53.130
indem Sie die Variable 'Liste' ausführen. Und wir werden eckige Klammern haben:"Tiger", "Katze", "Bär" und "Vogel".

01:53.180 --> 01:55.320
Es ist also immer noch eine Variable.

01:55.610 --> 01:57.530
Und du siehst hier Strings.

01:57.530 --> 02:02.400
Das einzige, was anders ist, sind diese eckigen Klammern.

02:03.630 --> 02:10.860
Aber ich nenne diese 'Liste' und es sieht wie eine Liste aus, aber ich hätte das alles so nennen können:'listOfAnimals'

02:10.860 --> 02:12.450
beispielsweise.

02:13.580 --> 02:17.780
Aber ein Array, wie ich schon sagte, ist eine Möglichkeit, Informationen zu organisieren.

02:17.950 --> 02:20.140
Und das ist auf diese Weise organisiert.

02:20.140 --> 02:25.860
Aber wie greifen wir es? Wie greifen wir eines dieser 4 Teile aus der Schreibtischschublade?

02:26.080 --> 02:31.040
Die Art, wie Sie auf ein Array zugreifen, ist - mit so etwas.

02:36.320 --> 02:36.610
OK.

02:36.630 --> 02:45.540
Also, Variablenname - eckige Klammern - eine Zahl und - eckige Klammern. Lass uns 'console.log' machen und sehen was passiert.

02:50.330 --> 02:52.420
Ich bekomme 'Katze'.

02:53.060 --> 02:57.820
Hmmm, die meisten von euch hätten vielleicht gedacht, dass wir "Tiger" bekommen würden.

02:57.830 --> 03:03.000
Ich meine 'Liste', wir wollen den ersten Punkt in der 'Liste'.

03:03.020 --> 03:07.830
Vielleicht liest man es so, aber so funktioniert es nicht. In der Informatik

03:07.880 --> 03:14.510
Entwickler mögen von '0' zählen. Also war "0" die erste Zahl, dann "1", dann "2", dann "3".

03:14.870 --> 03:17.890
Also beginnen wir immer mit "0" zu zählen.

03:17.900 --> 03:22.580
Wenn du also 'Tiger' von dieser Liste bekommen willst, machst du '0'.

03:22.800 --> 03:33.620
Und lass uns auffrischen und wir bekommen 'Tiger'. Lass uns in der Konsole damit spielen. Wenn ich die 'Liste' kopiere und

03:33.620 --> 03:34.730
sag es so. OK.

03:40.630 --> 03:42.550
Die Konsole gibt uns tatsächlich einen netten Eindruck

03:45.550 --> 03:51.780
Protokolliere das Array. Und wir sehen, dass wir haben:0 - Tiger, 1 - Katze, 2 - Bär, 3 - Vogel.

03:51.790 --> 04:02.530
Wie Sie sehen können, ist ein Array nur eine nette Möglichkeit, Elemente in einer Reihenfolge von "0", "1", "2" und "3" aufzulisten.

04:02.530 --> 04:07.300
Welche Art von Dingen können Arrays halten oder sind es nur Strings?

04:07.500 --> 04:09.190
Nicht wirklich.

04:09.220 --> 04:13.870
Wir können variable 'Zahlen' machen.

04:15.370 --> 04:21.420
Und habe '1, 2, 3, 4'.

04:21.700 --> 04:33.930
Wir können "boolean" haben und wir können wieder "wahr, falsch" und "wahr" haben.

04:35.520 --> 04:37.730
Und das ist der spaßige Teil.

04:37.740 --> 04:43.830
Sie können auch Funktionen als Array verwenden.

04:43.990 --> 04:46.840
So kann ich 'Funktion Apfel' tun:04:50.720 --> 04:52.070
'console.log (Apfel)'.

04:57.400 --> 04:59.770
Und dann schließen Sie mit den eckigen Klammern.

05:01.560 --> 05:13.000
Und 'functionList' hat jetzt ein Array an der Position '0' von 'Apple'. Hier ist es noch wahnsinniger, du kannst es tun

05:14.360 --> 05:26.480
Variable, nennen wir es eine 'MixedList' und das kann Strings enthalten, kann Zahlen haben, undefiniert haben, Sie

05:26.480 --> 05:29.280
kann Booleans haben.

05:29.780 --> 05:33.860
Und wie ich dir zuvor gezeigt habe, kannst du Funktionen haben.

05:36.930 --> 05:44.190
Und "MixedList" hat jetzt eine ganze Reihe verrückter Sachen.

05:44.210 --> 05:47.960
Dies wird nicht empfohlen.

05:47.960 --> 05:53.870
Es ist ein bisschen ein Leistungsproblem, wenn Sie Arrays mit verschiedenen Typen haben.

05:53.870 --> 05:59.580
Also, du willst es gleich behalten, aber ich möchte dir das zeigen. Wir können alles in Arrays setzen.

05:59.780 --> 06:07.870
Wir können auch Arrays innerhalb eines Arrays erstellen.

06:07.950 --> 06:16.510
Siehst du, was ich gerade hier gemacht habe? Wir haben ein Array, das eine Reihe von 'Tiger', 'Katze', 'Bär', 'Vogel' hat.

06:16.620 --> 06:20.040
Also, wenn wir das speichern und aktualisieren, was wird Ihrer Meinung nach passieren?

06:22.270 --> 06:29.380
Wir bekommen ein Array, das 'Tiger', 'Katze', 'Bär', 'Vogel' hat. Aber wir haben auf '0' zugegriffen.

06:30.860 --> 06:32.740
Lass es uns nochmal ohne die '0' versuchen.

06:32.780 --> 06:34.030
Mal sehen was passiert.

06:35.490 --> 06:42.370
Diesmal erhalten wir ein Array, genau wie es hier steht, in dem sich ein Array befindet.

06:43.220 --> 06:45.180
Also, wie bekommen wir, sagen wir, ertragen?

06:45.290 --> 06:54.090
Nun, wir würden sagen, wir wollen das erste Array. Und dann noch ein Paar eckige Klammern.

06:54.450 --> 07:04.260
Und weil 'Tiger' auf '0, 1, 2' steht, wollen wir '2'. Oder ich sage 'Tiger' und dann 'Bär'.

07:04.310 --> 07:07.360
Also bekommen wir das erste Array, dieses.

07:07.700 --> 07:13.470
Und in diesem ersten Array wollen wir das "0, 1, 2" - den "Bären".

07:13.470 --> 07:14.910
Mal sehen, ob das funktioniert.

07:15.780 --> 07:17.550
Und dann werden wir "Bär".

07:17.850 --> 07:23.740
Jetzt sind Arrays cool, weil JavaScript vordefinierte Methoden für sie hat.

07:23.940 --> 07:32.110
Und was sind das? Für jetzt denke an sie als Funktionen. Sie sind Funktionen, die wir für Arrays verwenden können.

07:32.240 --> 07:35.620
Machen Sie sich keine Sorgen über den Begriff der Methode, wir werden später darauf eingehen.

07:35.870 --> 07:37.690
Aber lass mich dir zeigen, was ich meine.

07:38.090 --> 07:40.310
Wenn wir diese "Liste" so zurückgeben, wie sie war.

07:43.860 --> 07:47.330
Zurück zu 'Tiger', 'Katze', 'Bär', 'Vogel'.

07:47.450 --> 07:50.200
Also, lassen Sie uns, schauen wir uns 'Liste' an, was wir jetzt in 'Liste' haben.

07:50.210 --> 07:53.490
Jetzt haben wir Tiger, Katze, Bär, Vogel. OK.

07:53.540 --> 08:02.250
Sehen wir uns an, welche Methoden wir der "Liste" hinzufügen können. 'list' lass uns 'shift' machen.

08:02.410 --> 08:03.740
Und lass uns sehen, was das macht.

08:03.900 --> 08:08.910
Ich bekomme 'Tiger' zurück, aber wenn ich jetzt auf die 'Liste' schaue, wurde 'Tiger' verschoben.

08:08.910 --> 08:15.610
Ich habe das Array verschoben, um 'Tiger' zu entfernen, und jetzt hat sich alles nach links verschoben.

08:16.390 --> 08:19.840
Was, wenn ich 'list.pop' mache?

08:24.550 --> 08:26.200
Ich bekomme 'Vogel'.

08:26.440 --> 08:34.180
Also, wenn wir jetzt auf die 'Liste' schauen - es ist 'Vogel' weg vom Ende des Arrays 'gepoppt'.

08:34.460 --> 08:43.550
Und jetzt habe ich nur "Katze" und "Bär". Was ist, wenn wir 'list.push' und dann 'push' machen? Muss ein Argument haben,

08:43.570 --> 08:44.600
Lass uns 'Elefant' machen.

08:47.550 --> 08:51.250
Und jetzt kommen wir zurück zur Nummer '3'.

08:51.400 --> 08:52.850
Sie könnten raten, was das bedeutet.

08:52.870 --> 08:54.340
Und schauen wir uns 'Liste' an.

08:54.480 --> 08:56.890
Jetzt haben wir "Katze", "Bär" und "Elefant".

08:56.980 --> 09:00.070
Also 3 Elemente im Array.

09:00.250 --> 09:04.310
Lassen Sie uns das ein bisschen aufräumen und lassen Sie uns einfach überprüfen, was wir in der 'Liste' haben.

09:04.420 --> 09:05.470
Perfekt.

09:05.470 --> 09:07.310
Was können wir noch tun?

09:07.750 --> 09:14.500
Nun, wir können auch 'list.concat' machen. Zum Verketten.

09:15.040 --> 09:19.900
Und hier können wir tatsächlich ein weiteres Array hinzufügen.

09:19.940 --> 09:32.800
Lass uns 'Biene' und 'Hirsch' machen. Lassen Sie uns 'Enter' drücken, und jetzt haben wir ein Array von 5 Elementen:09:32.870 --> 09:43.760
Katze, Bär, Elefant, Biene und Hirsch. Und ich habe dir das nicht gesagt, aber wenn wir uns die Zahlen '0, 1, 2, 3, 4' ansehen, sind sie das

09:43.760 --> 09:48.280
"Index" in Arrays genannt.

09:48.530 --> 09:53.010
"Index" bedeutet also:"Katze" hat einen "Index" von "0",

09:53.210 --> 10:00.210
"Bär" - ein Index von "1", "Elefant" - von "2", "Biene" - von "3", "Hirsch" - ein Index von "4". OK

10:01.340 --> 10:09.030
Lass uns eine letzte Sache machen und dann kannst du ein paar Übungen machen. Wie Sie sehen können, sind eine Menge Spaß.

10:10.150 --> 10:17.280
Eine letzte Sache, die ich dir zeigen möchte, ist diese:wenn wir 'list.sort' machen. Nun, wie der Name schon sagt,

10:20.300 --> 10:26.670
Wir haben jetzt eine sortierte 'Liste'. Aber warum haben wir nur 3 Gegenstände?

10:26.670 --> 10:28.530
Warum nicht 5?

10:28.860 --> 10:30.300
Und das ist ein bisschen schwierig.

10:30.300 --> 10:34.200
Sie müssen, müssen Sie ein wenig mit den Arrays üben, um sie zu verstehen.

10:34.290 --> 10:39.260
Wir haben unser Array sortiert, aber nur das Original.

10:39.520 --> 10:46.780
Die eine, die wir verkettet haben, die wir hinzugefügt haben, haben wir nicht einer Variablen zugewiesen. So hat es ein erstellt

10:46.780 --> 10:49.270
neues Array

10:49.310 --> 10:59.010
So, jetzt hatten wir zwei Arrays:die 'Liste', die nur 'Bär', 'Katze' und 'Elefant' hatte. Und noch eine "Liste" concat

10:59.020 --> 11:02.060
"Biene", "Hirsch", dass wir den Wert von nicht erfasst haben.

11:02.060 --> 11:09.420
Wir haben es keiner Variablen zugewiesen. Um es dir zu zeigen, lass uns das nochmal kopieren.

11:11.500 --> 11:15.910
Und versuchen Sie dies:Variable 'myList' ist gleich

11:19.530 --> 11:33.810
OK. Wir haben diese 5 Elemente und lassen uns die Variable 'myNewList' gleich 'myList.concat' machen.

11:37.010 --> 11:42.830
Und wir werden ein Array mit "Affen" machen.

11:42.840 --> 11:49.790
Also, wenn ich mir 'myList' anschaue, habe ich 5 Dinge:11:49.930 --> 11:51.920
"Katze", "Bär", "Elefant", "Biene", "Hirsch".

11:52.380 --> 11:57.850
Aber wenn ich mir 'myNewList' anschaue - habe ich 6 Dinge:mit 'Affen' drin.

11:59.470 --> 12:08.980
Es gibt also einige Methoden, die neue Listen erstellen:wie 'concat'; und einige Methoden:wie 'push' oder 'pop', das

12:09.670 --> 12:13.730
Erstellen Sie keine neue Liste, ändern Sie nur die aktuelle.

12:13.740 --> 12:17.260
Ich habe am Ende dieses Videos einige Übungen für dich.

12:17.280 --> 12:19.050
Dies ist eine wirklich lustige Datenstruktur.

12:19.050 --> 12:21.140
Hoffentlich freuen Sie sich darauf, diesen zu lernen.

12:22.170 --> 12:23.480
Das ist es für Arrays.

12:23.790 --> 12:29.260
Sobald Sie die Syntax und die Struktur verstehen, hat dies eine Menge Macht.

12:30.420 --> 12:35.790
Das letzte, was ich dir zeigen wollte, war, dass unser guter Freund, W3C ',

12:41.520 --> 12:51.690
hat eine große Liste von Referenzen, welche Methoden Arrays haben.

12:52.140 --> 12:54.950
So können Sie diese bei der Arbeit an Ihren Übungen lesen.

12:54.960 --> 13:00.060
Es gibt ein paar Dinge, die ich in dem Video nicht behandelt habe, dass du dich hier selbst durchforschen musst

13:00.450 --> 13:03.500
um herauszufinden, was Sie brauchen, um die Probleme zu lösen.

13:04.510 --> 13:05.980
Wir sehen uns im nächsten.

