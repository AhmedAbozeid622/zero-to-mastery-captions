WEBVTT

00:00.420 --> 00:07.110
Willkommen zurück. Lassen Sie uns unser Wissen über Knoten aus dem vorherigen Video erweitern und eine Skriptdatei erstellen

00:07.140 --> 00:08.210
dass wir laufen können.

00:08.270 --> 00:13.920
Lassen Sie uns einfach den 'touch'-Befehl erneut ausführen, um eine Datei zu erstellen, und wir nennen sie einfach' script.js '.

00:14.850 --> 00:20.870
Du wirst hier auf der linken Seite sehen, dass ich 'script.js' in meinem Knoten-Ordner habe.

00:20.920 --> 00:24.110
Jetzt kann ich in diesem Ordner alles in JavaScript machen.

00:24.130 --> 00:29.600
Ich kann 'const a = 5' sagen.

00:29.770 --> 00:38.920
Und das ist nicht der Ordner, den ich will ... wir wollen das öffnen und wir sagen 'const a = 4'

00:38.920 --> 00:40.800
'const b = 5'

00:41.140 --> 00:50.780
Und dann können wir einfach 'console.log (a + b)'. Wenn ich das speichere, um dieses Skript auszuführen,

00:50.790 --> 00:55.400
Alles, was ich tue, ist 'Knoten' und dann der Skriptname:'script.js'.

00:55.480 --> 00:58.770
Und weil wir im Verzeichnis sind, wird es wissen, was "script.js" ist.

00:58.870 --> 01:02.420
Und es wird uns 9 geben.

01:02.460 --> 01:03.460
Wie cool ist das?

01:03.490 --> 01:09.480
Jetzt siehst du auch, dass es ausging; es blieb nicht im Programm, und das ist, weil am Ende der

01:09.480 --> 01:12.840
Datei, sobald es alles liest und ausführt

01:12.840 --> 01:21.620
- Das letzte, was es ausführt, ist "console.log" - es läuft "process.exit" und verlässt die Datei. Lass es mich zeigen

01:21.620 --> 01:22.310
Du etwas.

01:22.520 --> 01:33.040
Wenn ich etwas namens 'setTimeout' gemacht habe, was wir eigentlich in Node haben; wenn ich mache

01:33.370 --> 01:40.600
'node' 'global.setTimeout', bekomme ich eine Funktion.

01:40.630 --> 01:47.120
Also, wenn ich "setTimeout", kann ich eine Funktion erneut mit unseren Pfeilfunktionen ausführen.

01:48.750 --> 01:57.000
Und hier kann ich "console.log ()" machen, und "setTimeout" ist cool, weil Sie sagen können:"Hey, wann

01:57.060 --> 01:59.240
Willst du das ausgeführt werden? "

01:59.370 --> 02:03.400
Und das ist der zweite Parameter und ich sage 3 Sekunden.

02:03.420 --> 02:15.210
Also, wenn ich speichere und ich 'node script.js' - eins, zwei, drei, und da gehst du:9, und dann 'Prozess' beendet

02:17.070 --> 02:19.180
Knoten ist schlau genug, um dies zu durchlaufen

02:19.200 --> 02:24.280
Sobald dies erledigt ist, endet der Prozess und kommt zurück zum Terminal.

02:24.510 --> 02:25.280
Sehr cool.

02:25.380 --> 02:30.000
Und wieder innerhalb des Knotens können wir tatsächlich verwenden

02:32.770 --> 02:37.210
Dinge, die für uns nützlich sein könnten, basierend auf den globalen Objekten, die wir haben.

02:37.300 --> 02:45.000
Zum Beispiel einer der beliebtesten ist '__dirname' - wenn ich das speichern und ausführen

02:45.060 --> 02:45.510
'Knoten script.js' ...

02:45.520 --> 02:47.530
Ich bekomme mein Verzeichnis:'Knoten'.

02:50.480 --> 02:53.750
Und ich werde Ihnen zeigen, warum das nützlich ist, wenn wir mit dem Aufbau eines Servers beginnen.

02:54.710 --> 03:01.130
Aber wie Sie sehen können, haben wir die Macht des Browsers und führen die Skripte aus, die wir hier haben wollen

03:01.190 --> 03:02.650
in unserem Terminal.

03:02.660 --> 03:03.790
Wir sehen uns im nächsten Video, Tschüss.
