WEBVTT

00:01.050 --> 00:09.260
Nun gehe ich zurück zu meinem Beispiel. Lassen Sie uns eine neue Datei hinzufügen, und wir werden dies 'script2.js' nennen.

00:09.270 --> 00:09.820
-

00:11.820 --> 00:20.110
Jetzt kann 'script2.js' eine Konstante namens 'largeNumber' haben.

00:20.340 --> 00:24.320
Und sagen wir mal, das ist 356.

00:24.780 --> 00:35.410
Und wenn wir das exportieren und 'export default largeNumber' sagen wollen und jetzt in 'script.js', dann tue ich es

00:35.410 --> 00:44.880
"Importieren Sie largeNumber aus 'script2.js'".

00:44.940 --> 00:47.000
- Lass uns das ein bisschen kleiner machen -

00:47.220 --> 00:48.810
Und jetzt habe ich das geändert zu

00:51.920 --> 00:59.120
'largeNumber' machen wir einfach 'a + b' wenn ich 'node script.js' starte

00:59.160 --> 01:05.660
Ich erhalte den Fehler 'Unerwarteter Token-Import'.

01:05.890 --> 01:13.390
Und das, weil Node die neue ES6-Funktion von Importanweisungen noch nicht implementiert hat.

01:15.090 --> 01:19.910
Und es gibt Möglichkeiten, und Sie können Pakete hinzufügen, um dies zu ermöglichen.

01:20.170 --> 01:25.980
Aber ich werde dir den CommonJS Weg zeigen, weil die meisten Server, auf die du stoßen wirst, die haben werden

01:25.980 --> 01:26.710
CommonJS Weg.

01:26.790 --> 01:29.730
Und im Laufe der Jahre wird dieser [Import] und dieser [von] häufiger werden.

01:29.730 --> 01:32.750
Aber Sie wissen bereits, wie man das aus dem Front-End-Bereich macht.

01:32.820 --> 01:34.260
Also nichts ist hier anders.

01:34.260 --> 01:40.460
Damit Sie sich mit CommonJS vertraut machen können, verwenden wir das Formular 'require'.

01:40.470 --> 01:44.200
Also wie können wir das so machen, wie es funktioniert?

01:44.280 --> 01:44.950
-

01:45.120 --> 01:47.150
in Knoten 8.9, welche Version haben wir?

01:51.100 --> 02:01.040
Nun, wir müssen eine 'const largeNumber = require (' ./ script2.js ') machen'

02:01.110 --> 02:04.140
- wieder könnte das vertraut sein -

02:04.330 --> 02:10.850
Und dann müssen wir hier den Dateipfad angeben. Mit "erfordern"

02:10.910 --> 02:16.040
wir haben jetzt 'largeNumber' und wollen es jetzt auch exportieren.

02:16.210 --> 02:25.750
Und die Art, wie Exporte mit CommonJS funktionieren, ist, dass du 'modulex.export' verwendest, und das liegt daran, - lass mich das klarstellen

02:25.750 --> 02:36.350
das und zeige es dir. Wenn ich 'Knoten' und ich 'Modul' mache, sehen Sie, dass 'Modul' ein globales Objekt ist, auf das wir Zugriff haben

02:36.350 --> 02:42.140
und "modula.exports" verwenden

02:42.190 --> 02:49.880
Ich kann sagen, welche Objekte ich in diese Datei exportieren möchte.

02:49.880 --> 02:52.760
In unserem Fall wird es "largeNumber" geben.

02:56.170 --> 03:05.090
Wenn ich das speichere und jetzt unser 'node script' ausführe - oops muss den Prozess zuerst beenden.

03:06.880 --> 03:07.800
klar

03:07.880 --> 03:09.750
Wenn ich 'node script.js' starte

03:09.790 --> 03:16.110
Ich bekomme [Objekt Objekt] 5.

03:16.220 --> 03:17.200
Hmm, warum ist das so?

03:17.600 --> 03:25.250
Nun, weil wir dieses Objekt und die Art, wie wir darauf zugreifen wollen, hier exportiert haben,

03:26.110 --> 03:29.350
Wir exportieren ein globales Objekt, das wir beliebig benennen können.

03:29.350 --> 03:39.620
In unserem Fall können wir 'script2' sagen und um die Eigenschaft von 'script2' gut zu bekommen, werden wir sagen

03:39.700 --> 03:41.780
'script2.largeNumber'

03:41.780 --> 03:49.730
Und jetzt, wenn ich das ausführe, bekomme ich 361, und das kann alles benannt werden, was es ist, nur eine Variable, die du deklarierst.

03:49.770 --> 03:56.470
Also können wir es einfach 'c' - 'c.largeNumber' nennen und es funktioniert immer noch.

03:57.980 --> 04:01.610
Es ist ein bisschen anders, als wir es von der Front gewohnt sind.

04:02.630 --> 04:09.230
Und das nur, weil wir das nicht implementiert haben, oder Node den Import und Export nicht implementiert hat

04:09.350 --> 04:10.770
mit dieser Version davon.

04:11.000 --> 04:12.140
Aber es wird irgendwann kommen.

04:12.140 --> 04:19.190
Hab keine Angst, wenn du es so siehst; Wenn man sich einmal an die Syntax gewöhnt hat, ist es ziemlich ähnlich.

04:19.210 --> 04:21.540
In Ordnung, wir sehen uns im nächsten.

04:21.550 --> 04:22.020
Tschüss.
