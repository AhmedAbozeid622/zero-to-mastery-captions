WEBVTT

00:01.280 --> 00:02.510
Willkommen zurück.

00:02.750 --> 00:08.870
Ich möchte ein Video machen, um über etwas zu reden, das viele Leute stolpern lässt, wenn sie anfangen

00:08.870 --> 00:19.830
Aus mit Reagieren. Denken Sie daran, dass React nur eine Ansichtsschichtbibliothek ist. Daher ermöglicht React nur das Erstellen einer Komponente

00:19.920 --> 00:29.720
getriebene Benutzeroberflächen. Und es hat einige Lösungen, wie seine eigene lokale Zustandsverwaltung, und ein einfaches

00:29.720 --> 00:34.040
Möglichkeit, mit Ereignissen umzugehen, um Interaktionen auf unserer Website zu ermöglichen.

00:35.440 --> 00:40.110
Aber am Ende des Tages ist es eine einfache Bibliothek, die mit der Ansicht hilft.

00:40.360 --> 00:48.430
Sobald Sie beginnen, große Anwendungen zu erstellen, müssen Sie oben auf React hinzufügen.

00:48.700 --> 00:55.630
Die Stärke von React liegt in der Fähigkeit, neue Funktionen und neue Bibliotheken zu integrieren. um zu

00:55.630 --> 00:59.520
Passen Sie es an Ihre eigene App an.

00:59.660 --> 01:08.270
Wenn Anwendungen wachsen oder Sie für ein großes Unternehmen arbeiten, werden Sie feststellen, dass sie einige andere Tools verwenden

01:08.360 --> 01:14.810
oben auf reagieren. Und ich wollte schnell rübergehen, einige der häufigsten, die es zu sehen gibt

01:14.810 --> 01:16.270
dort draußen.

01:16.300 --> 01:20.710
Wir haben zuerst "REACT ROUTER" und das ist für Routing.

01:20.890 --> 01:29.080
Das Ändern von Seiten und das Ändern von Routen in unserer URL ist also der Standard, wenn es um React und

01:29.080 --> 01:30.190
Redux-Projekt.

01:30.520 --> 01:32.930
Also sehr empfehlenswert.

01:33.100 --> 01:35.010
Sehr einfach zu bedienen.

01:35.320 --> 01:36.650
Sehr einfach zu lernen.

01:36.700 --> 01:39.640
Es dauert einen Tag und Sie können es ziemlich leicht abholen.

01:41.160 --> 01:49.650
Sie haben auch Dinge wie Utility-Bibliotheken. Und das sind Bibliotheken, die dem aktuellen Javascript hinzugefügt werden

01:49.770 --> 01:52.440
Werkzeuge, die Sie aus der Box bekommen.

01:52.440 --> 01:56.740
Betrachten Sie es als zusätzliche Funktionen zu JavaScript.

01:56.950 --> 01:58.720
Die beliebtesten sind 'Ramda'.

01:58.810 --> 02:06.080
Wenn Sie wirklich die funktionale Programmierideologie behalten wollen, eine wirklich sehr gute Bibliothek. Und da ist

02:06.100 --> 02:16.690
auch das beliebteste "Lo Dash", das Ihnen wiederum zusätzliche Tools bietet, die Sie mit Javascript verwenden können. Du auch

02:16.820 --> 02:20.570
möchte über das Styling mit React nachdenken.

02:20.630 --> 02:27.380
Und wieder gibt es eine Reihe von Tools, die Menschen zum Stylen verwenden. Da ist 'glamourös' was ich wirklich wirklich

02:27.380 --> 02:28.170
mögen.

02:28.250 --> 02:35.480
Es gibt "gestylte Komponenten", die wiederum sehr nett sind und "glamourös" sehr ähnlich sind.

02:35.570 --> 02:38.520
Und dann gibt es Dinge wie "CSS-Module".

02:38.630 --> 02:46.490
Nehmen wir an, diese drei sind wahrscheinlich am besten zu verwenden, wenn Sie auf eine klügere Weise angehen wollen

02:46.580 --> 02:47.830
Stile in Reagieren.

02:47.870 --> 02:50.300
Und wieder sind diese ziemlich leicht zu erlernen.

02:50.300 --> 02:52.720
Sie können einen Tag mit ihnen verbringen und den Dreh raushaben.

02:53.860 --> 02:57.490
Als nächstes haben wir etwas, das 'gatsby dot js (gatsbyjs)' genannt wird.

02:58.060 --> 03:02.980
Und das ist wirklich gut für statische Websites in React.

03:02.980 --> 03:06.340
Das sind also einfache textbasierte Webseiten.

03:06.460 --> 03:08.920
Wenn Sie in die React-Dokumentation gehen,

03:18.840 --> 03:28.110
Ihre Dokumentation wird tatsächlich mit 'gatsby dot js (gatsbyjs)' serviert, weil sie einfach nur textbasiert sind

03:28.860 --> 03:29.640
Seiten.

03:29.760 --> 03:31.310
Das funktioniert wirklich sehr gut.

03:33.430 --> 03:35.710
Dann gibt es auch "Weiter"

03:35.750 --> 03:41.510
dot js ', extrem beliebt für serverseitig gerenderte Apps.

03:41.740 --> 03:45.490
Und darüber reden wir, wenn wir zum serverseitigen Bereich kommen. Und wir werden es tatsächlich tun

03:45.490 --> 03:52.330
Erstellen Sie eine einfache "Next.js" -App. Aber sehr populär und ich empfehle sehr, wenn Sie etwas bauen

03:52.330 --> 04:00.040
Serverseite. Als nächstes wahrscheinlich, wofür React bekannt ist und ich habe hier nur zwei Optionen ausgewählt, aber es gibt sie

04:00.040 --> 04:01.230
so viele da draußen.

04:01.230 --> 04:05.920
Reagieren ist wirklich sehr gut, weil wir wiederverwendbare Komponenten erstellen können.

04:05.970 --> 04:12.270
Also, wenn ich eine wirklich coole Kalenderkomponente erstelle, kann ich sie online stellen, und andere Leute können das einfach greifen

04:12.270 --> 04:15.800
Komponente, und verwenden Sie es auch in ihren Projekten.

04:16.770 --> 04:23.610
Einige der größeren sind also "materielle", "materielle" Komponenten, die Sie wieder verwenden können.

04:23.820 --> 04:33.940
Und es gibt auch die Bibliothek "semantic ui", die eine Tonne von React-Komponenten enthält, die Sie verwenden können.

04:34.050 --> 04:41.760
Wiederum ist ein anderer toller Grund, React zu verwenden, diese Komponenten, die Leute teilen. Und du kannst einfach hinzufügen

04:41.760 --> 04:44.510
auf Ihrer Website.

04:44.670 --> 04:49.810
Und schließlich gibt es Tools, die Redux besser und effizienter machen.

04:49.980 --> 04:56.310
Sie haben Dinge wie "erneut auswählen", die Sie in den meisten Redux-Projekten sehen, die mit etwas namens helfen

04:56.310 --> 05:01.620
Selektoren und verbessern Sie die Leistung Ihrer Apps.

05:01.650 --> 05:09.240
Sie haben auch Dinge wie 'Redux-Saga', die asynchrone Aktionen in Redux behandelt.

05:09.240 --> 05:16.080
Also, denke an es als Redux-Thunk, aber supercharged. Wenn die Dinge immer komplexer werden, hast du es

05:16.080 --> 05:18.510
mehr und mehr asynchrone Aktionen,

05:18.510 --> 05:23.040
Vielleicht möchtest du Dinge wie "Redux Saga" betrachten.

05:23.040 --> 05:25.840
Es ist ein bisschen kompliziert, es zuerst zu lernen.

05:26.100 --> 05:28.500
Und es gibt Leute, die es lieben und es hassen.

05:28.500 --> 05:32.650
Aber definitiv etwas, das versucht, das Problem zu lösen

05:32.670 --> 05:36.200
Was machen wir, wenn wir anfangen, immer größere und größere Apps zu bekommen?

05:36.510 --> 05:43.950
Und dann haben Sie auch etwas wie "IMMUTABLE" js, das Sie als Bibliothek verwenden können, um das sicherzustellen

05:43.950 --> 05:49.260
Ihr Status bleibt unveränderlich und erzwingt das unter Ihren Entwicklerteams.

05:50.300 --> 05:57.310
Nun, ich erwarte nicht, dass Sie jeden einzelnen davon kennen, und verwenden Sie jeden einzelnen davon in Ihren Projekten.

05:58.420 --> 06:04.510
In der Tat möchte ich vor ihnen warnen. Und jedes Mal, wenn du etwas hinzufügst, frage dich, tu es

06:04.510 --> 06:05.710
Ich brauche es wirklich?

06:05.710 --> 06:08.390
Was ist der Vorteil, dass ich hier rauskomme?

06:09.640 --> 06:17.020
Da jede Bibliothek zu unserem Projekt hinzugefügt wird, fügt zusätzliches Gewicht hinzu, fügt zusätzliches Javascript hinzu, das wir liefern müssen

06:17.020 --> 06:17.960
an den Client.

06:18.340 --> 06:26.140
Stellen Sie also sicher, dass Sie, wenn Sie eines dieser Dinge hinzufügen, einen berechtigten Grund haben, der sich tatsächlich verbessert

06:26.230 --> 06:29.370
der Wert Ihres Produktes.

06:30.290 --> 06:32.820
Und es hilft auch bei der Entwicklung.

06:32.840 --> 06:38.930
Wenn Sie also an Wert denken, denken Sie nicht nur, dass Kunden und Anwender auch an Entwicklerteams denken

06:38.930 --> 06:44.970
Menschen mit denen du arbeitest. Profitieren sie davon, wenn Sie Ihrer Codebasis "IMMUTABLE" js hinzufügen.

06:45.260 --> 06:52.730
Oder, ist die zusätzliche Lernkurve und die Frustration, die Entwickler mit "IMMUTABLE" haben könnten, wert

06:53.060 --> 06:57.170
die Sicherheitsmaßnahmen, die es Ihrem Projekt hinzufügen könnte.

06:58.010 --> 07:05.780
Aber ich möchte betonen, dass Sie als Senior-Entwickler immer Vor-und Nachteile berücksichtigen, ob Sie

07:05.780 --> 07:13.940
brauche etwas und wenn du etwas brauchst, analysiere wirklich, was das beste Werkzeug für den Job ist.

07:13.940 --> 07:15.280
Ich fühle mich wie eine Platte gebrochen.

07:15.290 --> 07:22.700
Ich habe das schon oft gesagt, aber es ist ein wirklich wichtiges Konzept. Fügen Sie nicht einfach "IMMUTABLE" js hinzu, weil

07:22.880 --> 07:26.470
Sie lesen es in einem Blog-Post, dann schwärmen alle davon.

07:26.480 --> 07:32.480
Jedes Projekt ist anders, Sie müssen also in der Lage sein, diese Entscheidungen für sich selbst zu treffen, für Ihr Projekt

07:32.510 --> 07:33.940
für dein Entwicklerteam.

07:35.690 --> 07:40.100
Okay, genug von mir zu reden, wir sehen uns im nächsten. Tschüss