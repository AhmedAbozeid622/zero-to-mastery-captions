WEBVTT

00:00.700 --> 00:09.660
Lassen Sie uns KNEX verwenden, um einige unserer anderen Routen zu beenden. Wenn wir zur Profil-Schrägstrich-ID gehen.

00:09.790 --> 00:11.500
Wir verwenden das noch nicht wirklich in unserer App.

00:11.500 --> 00:14.440
Es ist etwas für die zukünftige Entwicklung.

00:14.440 --> 00:20.260
Dies ist ein gutes Beispiel, weil Back-End-Ingenieure manchmal Endpunkte entwickeln, die möglicherweise nicht verwendet werden

00:20.260 --> 00:25.750
für das Front-End, aber sie könnten in zukünftigen Installationen wie diesem brauchen, wo wir vielleicht könnten

00:25.750 --> 00:33.250
eine Profilseite für jeden unserer Benutzer haben und diese bearbeiten können und vielleicht einen Beitrag haben können, a

00:33.250 --> 00:36.240
löschen, ein Put.

00:36.270 --> 00:42.240
Lasst uns daran arbeiten mit der Profilpunkt-ID, die ich möchte den Benutzer greifen.

00:42.240 --> 00:45.580
Das ist eine sehr einfache Operation mit unserem Datenbankrecht.

00:45.600 --> 00:53.040
Wir können das jetzt einfach entfernen und DB-Punktauswahl sagen

00:55.700 --> 01:05.120
alles, weil wir alles von der Benutzertabelle aus der Benutzertabelle wollen. Scheint ein bisschen zu einfach

01:05.120 --> 01:05.830
Recht.

01:05.840 --> 01:07.910
Mal sehen, ob das klappt, dann mache ich einen Punkt.

01:10.040 --> 01:11.420
Ich werde den Benutzer zurückgeben.

01:13.260 --> 01:23.510
Und trödeln Sie das Protokoll einfach erneut, um alles zu testen. Wir loggen den Benutzer ein.

01:23.550 --> 01:24.960
Lass uns zum Profil gehen.

01:24.960 --> 01:26.050
Schrägstrich-ID

01:26.220 --> 01:36.760
Und denken Sie daran, wenn wir zu unserer Datenbank zurückkehren, haben wir ID 1, 2, 3, 6, also machen wir einfach ID 1. Mit unserem Postboten

01:37.880 --> 01:40.890
Wir werden das Profil greifen. Wir werden sehen, ob wir hier eine davon haben.

01:40.890 --> 01:41.340
Da gehst du.

01:41.340 --> 01:45.670
Es gibt eine Anfrage, und wir werden Profil 1, senden.

01:45.920 --> 01:54.630
Und wenn wir zurück zur Konsole gehen, bekommen wir alle unsere Benutzer. Aber erinnern Sie sich mit Profil-ID wir

01:54.630 --> 02:01.220
möchte sicherstellen, dass es die ID ist und nicht jeder einzelne Nutzer, den wir suchen.

02:01.450 --> 02:11.200
Also können wir einfach Punkt wo und innerhalb der WHERE-Klausel sagen, wenn wir zurück zu KNEX gehen und ich demonstrieren möchte

02:11.200 --> 02:14.170
zu dir hier, dass dies ein Entwickler ist.

02:14.170 --> 02:20.120
Sie kennen nicht jede einzelne Spezifikation einer Bibliothek oder eines Pakets.

02:20.140 --> 02:26.080
Sie werden wirklich gut darin, Dokumentation zu lesen und zu sehen, warum Sie so etwas brauchen wie hier und wir

02:26.080 --> 02:32.940
ein Objekt dessen, was wir überprüfen wollen. Also Vorname Test Nachname Benutzer.

02:32.980 --> 02:46.650
In unserem Fall wollen wir ein Objekt, dessen ID die ID ist, die wir in den Parametern erhalten haben. Wenn wir das speichern und ausführen

02:46.650 --> 02:52.120
wieder durch Postgres, gehe zurück zu unserem Beispiel und sieh dir das an.

02:52.220 --> 03:04.840
Wir haben Ann. Und wir wollen das Array des Benutzers erfassen, also können wir einfach - oops, und wir können einfach null tun.

03:04.860 --> 03:05.280
Tolle.

03:06.550 --> 03:08.390
Nur um das kurz zu halten

03:08.400 --> 03:16.000
Mit ES6 können wir genau das tun, weil sowohl die ID als auch der Wert identisch sind.

03:16.060 --> 03:27.040
Ich werde speichern, und jetzt, statt Konsolenprotokollierung, werden wir Antwort Dot Json Benutzer, der der Benutzer sein wird

03:27.040 --> 03:28.040
das bekommen wir.

03:28.330 --> 03:30.560
Und wir brauchen das nicht mehr, oder?

03:30.700 --> 03:32.160
Lass uns jetzt den Code aufräumen.

03:32.360 --> 03:40.080
Und wenn das nicht gut gefunden wird, erhalten wir in diesem Fall ein leeres Array.

03:41.230 --> 03:46.960
Aber lassen Sie uns zuerst sehen, was wir mit unserer Antwort bekommen, und dann werden wir den Fehlerfall berühren. Wir werden sparen

03:47.920 --> 03:53.390
Geh zurück zum Postboten, wir senden, und wir erhalten einen Fehler.

03:53.410 --> 03:57.480
Gefunden ist nicht definiert und wir sollten das auskommentieren.

03:57.670 --> 04:01.380
Wir werden es versuchen, klicken Sie erneut auf senden.

04:02.370 --> 04:04.220
Gut, wir bekommen Ann.

04:04.530 --> 04:05.540
Das ist so cool.

04:06.750 --> 04:08.250
Und wenn wir 2 tun

04:11.430 --> 04:21.990
wir bekommen Anne mit einem e. Wenn wir sechs machen, haben wir Amy und wenn ich drei mache, bekomme ich John. Was ist, wenn ich eine Nummer mache?

04:21.990 --> 04:23.010
existiert nicht.

04:25.000 --> 04:27.360
Ich bekomme 200 OK ohne Antwort.

04:28.600 --> 04:36.770
Denn wir haben diesen Benutzer nicht. Aber lassen Sie uns einfach loggen und sehen, ob wir einen Benutzer davon zurückbekommen.

04:36.890 --> 04:43.450
Wenn ich speichere und sende, bekomme ich ein leeres Array.

04:43.750 --> 04:49.350
Es gibt also immer noch etwas zurück, es sagt nur, dass es keinen Benutzer gibt.

04:49.540 --> 04:54.770
Wenn ich hier einen Punkt-Cache mache - lass mich hier einfach die Ausrichtung korrigieren.

04:58.250 --> 05:11.880
Und ich mache den Fehler mit JSON oder Response, dass Status 400 und wir werden nur nicht finden, wenn ich das speichere

05:12.780 --> 05:16.640
und gehen Sie zurück zum Briefträger klicken Sie erneut senden mit der falschen ID.

05:16.770 --> 05:28.960
Ich bekomme immer noch 200 OK nicht den Fehler, den wir fangen, weil in Javascript, wenn ich das Chrom wieder öffne. Trick

05:28.980 --> 05:32.270
von Javascript. Wenn ich mache

05:32.280 --> 05:35.860
Boolesches Array ein leeres Array.

05:36.120 --> 05:39.030
Es ist technisch wahr.

05:39.070 --> 05:51.380
So wie wir es mit dem leeren Array abgleichen wollen, sagen wir einfach, ob die User-Punktlänge darin existiert

05:51.380 --> 06:01.420
Fall wird es größer als 1 oder gleich 1 wird mit dem Benutzer antworten.

06:01.540 --> 06:05.150
Sonst werden wir mit antworten

06:09.840 --> 06:14.130
Unser Status nicht gefunden und vielleicht können wir auch hier drin sagen

06:17.250 --> 06:26.730
Fehler beim Abrufen des Benutzers. Wenn wir jetzt speichern und zurückgehen - lassen Sie uns die Konsole entfernen, weil wir sie nicht mehr brauchen.

06:27.050 --> 06:28.040
Geh zurück zum Postboten.

06:30.920 --> 06:34.090
Klicken Sie auf Senden. Nicht gefunden.

06:34.130 --> 06:35.040
Das ist großartig.

06:35.180 --> 06:41.150
Wir haben eine 400 schlechte Anfrage, aber wenn wir jemanden schnappen, den wir wollen, funktioniert es jetzt.

06:42.320 --> 06:45.900
Sehr cool. Wir können jetzt diesen hässlichen Code entfernen.

06:46.790 --> 06:50.540
Wir haben jetzt eine viel bessere Syntax.

06:50.910 --> 06:53.150
Und wir haben auch das Register gemacht.

06:53.640 --> 06:55.630
Wir lassen das Schild bis zum Ende stehen.

06:55.980 --> 06:59.580
Aber arbeiten wir mit dem nächsten Bildpunkt.

07:00.780 --> 07:02.160
Ich werde es sehen. Tschüss.
