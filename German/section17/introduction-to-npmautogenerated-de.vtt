WEBVTT

00:02.210 --> 00:10.700
NPM wurde für Entwickler erstellt, damit sie den von ihnen geschriebenen JavaScript-Code teilen können. Diesen Weg

00:10.790 --> 00:16.660
Jeder Entwickler auf der ganzen Welt kann den Code eines anderen greifen, der sein Problem lösen könnte.

00:17.780 --> 00:23.780
Dies schafft eine große Wissensbasis von Skripten, die Benutzer ständig aktualisieren oder verbessern und erstellen können

00:23.780 --> 00:26.330
auf. In der Tat,

00:26.330 --> 00:32.140
Es ist sehr selten, dass eine App oder eine Website heutzutage rein von Grund auf neu aufgebaut wird.

00:32.990 --> 00:39.140
Indem wir die kollektive Intelligenz nutzen, können wir Teile des Codes greifen, die wirklich gut sind und auf der Spitze aufbauen

00:39.140 --> 00:40.950
davon, um unser Produkt zu schaffen.

00:41.710 --> 00:48.070
Zum Beispiel mit JavaScript können Sie Virtual Reality-Anwendungen schreiben, aber Sie müssen nicht herausfinden

00:48.070 --> 00:50.120
alles selbst aus.

00:50.140 --> 00:56.980
Jemand da draußen hat bereits daran gearbeitet, JavaScript VR zu benutzen. Also benutzt du den Code dieser Person

00:56.980 --> 00:58.200
Starten Sie Ihr Projekt.

00:58.270 --> 01:01.190
Lass uns darüber sprechen, wie NPM funktioniert.

01:02.650 --> 01:05.490
NPM sieht so aus.

01:05.560 --> 01:13.180
Eine Website mit einer Suchleiste ähnelt Google, aber hier können Sie nach sogenannten Paketen suchen

01:15.210 --> 01:23.180
und diese Pakete befinden sich in der NPM-Registrierung und diese Registrierung verfolgt Dateien, die haben

01:23.180 --> 01:25.130
eingereicht worden.

01:25.180 --> 01:33.100
Jeder kann diese Dateien, die Pakete oder Module genannt werden, einreichen und sie enthalten zwei Dinge;

01:33.100 --> 01:35.640
Eine JavaScript-Datei und eine package.json-Datei.

01:35.680 --> 01:43.010
und die package.json-Datei, die Sie noch nie zuvor gesehen haben, ist eine Metafile, die beschreibt

01:43.280 --> 01:45.020
dieses Paket.

01:45.230 --> 01:54.540
So können Sie hier sehen, dass diese NPM-Registrierung nur eine Registrierung all dieser Dateien von JavaScript ist

01:54.570 --> 01:55.770
andere Leute haben geschrieben.

01:56.850 --> 02:03.090
Und die Idee ist, kleine JavaScript-Dateien zu haben, die wirklich eine Sache wirklich gut machen, so dass andere Leute

02:03.270 --> 02:03.950
kann es benutzen.

02:05.140 --> 02:16.820
Anschließend erstellen oder kombinieren Sie verschiedene Codeabschnitte und verschiedene Pakete in Ihrem Projekt, um Funktionen hinzuzufügen

02:17.660 --> 02:22.400
und nicht etwas neu schreiben müssen, das schon von einer anderen Person geschrieben wurde.

02:23.110 --> 02:29.980
So wie Sie hier sehen können, habe ich sagen, eine Person, die gerade eine JavaScript-Datei geschrieben hat, ist wirklich

02:29.980 --> 02:30.970
sehr nützlich.

02:30.970 --> 02:39.100
Nun, sie denken, dass andere Leute in der Lage sind, es zu benutzen, so dass sie es in die NPM Registry schieben und

02:39.100 --> 02:46.670
Mit der Suchleiste hier kann jemand Ihr Paket finden, vielleicht suchen sie eine Skriptdatei

02:46.720 --> 02:52.460
Das erstellt eine Liste von Arrays für Katzeninteressierte.

02:52.570 --> 03:02.100
Nun, sie können diese Datei finden und von NPM Registry auf ihren Computer herunterladen.

03:02.170 --> 03:05.140
Lasst uns über die Vorteile sprechen.

03:06.470 --> 03:11.360
Nun, du bekommst Expertise von anderen, vielleicht weißt du nicht alles,

03:11.370 --> 03:13.560
vielleicht sind andere besser als du

03:13.630 --> 03:18.280
Diese bestimmte Sache gut verwenden Sie dieses kollektive Wissen, um ihren Code zu verwenden.

03:19.180 --> 03:21.580
Aber da ist auch ein Nachteil.

03:21.780 --> 03:24.770
Nicht alle Pakete sind guter Code.

03:24.840 --> 03:34.080
Jeder kann seine Datei bei NPM ablegen, und Sie fügen Ihrem Projekt auch weitere Bytes hinzu, die Ihre Daten ausmachen

03:34.080 --> 03:36.210
Projektgröße noch größer.

03:36.210 --> 03:43.940
Wenn Sie all diese Dateien in Ihr Projekt aufgenommen haben, dann sind das viele Dateien und jeder wird es tun

03:43.940 --> 03:47.820
müssen vom Server an den Browser gesendet werden.

03:48.050 --> 03:54.110
Und wie Sie aus den vorherigen Abschnitten wissen, möchten wir die Größe unseres Projekts minimieren, also haben wir schnell gebaut

03:54.250 --> 04:01.540
Web-Apps und es gibt eine Kunst, gute NPM-Pakete zu finden und man gewöhnt sich daran nach ein bisschen

04:01.540 --> 04:02.300
Erfahrung.

04:02.320 --> 04:04.000
Also mach dir keine Sorgen.
 
04:04.270 --> 04:08.380
Jetzt siehst du auch hier, dass ich etwas das Garn genannt habe.

04:08.690 --> 04:15.320
Garn verwendet immer noch das NPM-Register, aber Sie sehen es möglicherweise genauso wie NPM.

04:15.370 --> 04:19.010
Es ist ein Werkzeug, um Dinge aus der NPM Registry zu holen.

04:19.030 --> 04:26.560
Wir werden in diesem Kurs nicht darüber reden, aber denken Sie daran, dass Garn und NPM sehr ähnlich sind.

04:26.560 --> 04:32.800
Wenn du einen lernst, dann kennst du den anderen, also hab keine Angst, wenn du von einem Projekt hörst, das Garn benutzt

04:32.800 --> 04:38.470
anstelle von NPM. Jetzt können Sie NPM durchsuchen und Dinge finden.

04:38.790 --> 04:42.840
Aber es gibt normalerweise drei Arten von Paketen.

04:43.060 --> 04:46.640
Einer davon sind Pakete, die Sie im Browser verwenden können.

04:46.640 --> 04:52.390
Also auf der Front-End, so dass Sie JQuery von NPM herunterladen können.

04:52.850 --> 04:58.010
Sie können alle Arten von Skripts herunterladen, die Ihnen beim Front-End-Workflow helfen.

04:58.030 --> 05:04.330
Der zweite Typ gibt Ihnen neue Befehle, die Sie in der Befehlszeile verwenden können und die ich Ihnen zeigen werde

05:04.330 --> 05:06.760
ein Beispiel, das später in diesem Abschnitt.

05:06.790 --> 05:15.100
Und schließlich ist die dritte Art von NPM-Paket einmal, dass Sie auf Node.js auf dem Back-End verwenden können.

05:15.100 --> 05:21.640
Und das hört sich vielleicht beängstigend an, aber machen Sie sich keine Sorgen, wenn wir zum Abschnitt Node.js kommen. Ich zeige Ihnen einige der Node-Pakete

05:21.640 --> 05:25.240
dass Sie verwenden können, aber es ist ziemlich genau dasselbe wie JavaScript.

05:25.480 --> 05:29.610
In der Tat steht NPM für Node Package Manager.

05:29.620 --> 05:35.200
Es war ursprünglich für Knoten gebaut, aber es war so gut und so beliebt, dass Sie es jetzt für das Front-End verwenden können

05:35.200 --> 05:36.220
auch.

05:36.930 --> 05:38.820
Aber es ist alles dasselbe.

05:38.820 --> 05:40.430
Es funktioniert alles gleich.

05:40.530 --> 05:43.330
Wie ich schon sagte, es sind nur Skripte

05:43.350 --> 05:49.710
Sie können verwenden, dass andere Leute geschrieben haben, und wir werden sie in diesem Kurs sehr oft verwenden.

05:49.710 --> 05:53.730
Jetzt fragst du dich vielleicht, warum lernst du das?

05:53.790 --> 05:57.600
und dieser Kurs? Ich meine, ist das wirklich so wichtig?

05:57.960 --> 06:00.710
Ja, eigentlich müssen drei Dinge tun.

06:00.810 --> 06:06.570
Jetzt, wenn Sie ein Projekt im Jahr 2018 starten, werden Sie es in jedem einzelnen Projekt sehen.

06:06.570 --> 06:09.690
Einer ist, dass sie eine HTML-Datei haben,

06:09.820 --> 06:12.610
CSS-Datei oder JavaScript-Datei.

06:12.960 --> 06:18.660
Sie haben vielleicht -sie könnten mehrere davon haben, aber alle Projekte haben solche, besonders solche, die es sind

06:18.660 --> 06:19.820
webbasiert.

06:19.830 --> 06:27.060
Sie müssen auch Ihr Projekt auf GitHub haben und Source Control wie Git verwenden. Niemand speichert ihre eigenen

06:27.060 --> 06:28.260
Projekt auf ihrem Computer.

06:28.260 --> 06:31.820
Sie haben es immer mit Quellcodeverwaltung.

06:31.950 --> 06:39.090
Und schließlich verwalten Sie Abhängigkeiten, die Pakete sind, die andere Leute geschrieben haben. Mit NPM mit

06:39.300 --> 06:41.480
package.json-Datei.

06:41.490 --> 06:48.300
In diesem Abschnitt werden wir daran arbeiten und unser Setup für ein typisches Projekt fertigstellen

06:48.300 --> 06:52.520
sieht aus wie 2018 und wir wissen, wie man die ersten beiden macht, oder?

06:52.770 --> 06:58.650
In den nächsten zwei Videos werde ich Ihnen zeigen, wie Sie mit NPM Dateien herunterladen und verwenden können

06:58.650 --> 07:01.900
package.json, um diese Dateien zu verwalten.

07:02.250 --> 07:07.060
Es ist ein wichtiger Teil eines Entwicklerworkflows. Ich sehe dich also im nächsten. Tschüss.
