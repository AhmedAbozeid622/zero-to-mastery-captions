WEBVTT

00:01.490 --> 00:02.290
Willkommen zurück.

00:02.290 --> 00:07.840
Es ist Zeit, ein Anmeldeformular zu erstellen. Vielleicht sogar ein 'Registration'-Formular, denn für neue Benutzer willst du

00:07.850 --> 00:09.020
registriere sie.

00:10.850 --> 00:11.870
Also lasst uns daran arbeiten.

00:14.010 --> 00:21.550
Zunächst möchten wir vielleicht eine Anmelde- und eine Registrierungskomponente erstellen. Also lass uns das tun.

00:21.570 --> 00:32.120
Ich werde einen neuen Ordner erstellen, nennen Sie es "SignIn" und dieser Ordner wird eine neue Datei namens "signIn" haben

00:32.390 --> 00:32.970
Punkt

00:33.190 --> 00:33.780
"js".

00:37.270 --> 00:45.900
Und wieder mit unserem besten Freund, kopieren und einfügen, können wir das verwenden und dies "Signin" nennen.

00:46.210 --> 00:52.390
Und wir haben kein CSS dafür. Und noch keine Requisiten. Hier drin

00:52.390 --> 01:02.050
wir wollen definitiv eine 'Signin'-Form haben. Und zum Glück für uns, weil wir "Tachyonen" benutzen, naja, wenn wir

01:02.830 --> 01:14.370
Suche 'Tachyonen' Form, sie sollten haben, oh! sieht so aus, als hätten sie nur für uns eine Anmeldung, damit wir sie benutzen können.

01:14.430 --> 01:15.370
Alles klar, das sieht großartig aus.

01:15.420 --> 01:19.400
Wir können diesen Code einfach kopieren und einfügen,

01:19.740 --> 01:24.650
und weil wir Tachyonen haben, werden die Klassen automatisch angewendet.

01:24.700 --> 01:27.460
Also lass uns das tun. Einrückung etwas korrigieren.

01:32.290 --> 01:36.230
Lass uns sparen. Und Sie sehen hier, dass die Syntax falsch ist.

01:36.640 --> 01:41.780
Das liegt daran, dass wir mit JSX hätten wegkommen können, wenn wir

01:41.780 --> 01:45.090
lass mich das kleiner machen. In HTML,

01:45.260 --> 01:52.580
Wir mussten die Eingabefelder nicht unbedingt schließen. Aber hier mit JSX müssen wir sicherstellen, dass die

01:52.580 --> 01:57.530
Eingabe-Tags sind gesperrt.

01:57.560 --> 02:05.030
So, jetzt haben wir drei Eingänge, glaube ich. Also können wir das speichern und es ist immer noch etwas los. Mal schauen,

02:05.030 --> 02:06.480
Was hatten wir sonst noch?

02:06.880 --> 02:08.510
Und wir haben noch einen "Input" hier drin.

02:09.670 --> 02:10.210
Gut.

02:10.030 --> 02:12.030
Sie sehen, dass die Hervorhebung behoben ist.

02:12.140 --> 02:15.440
Lassen Sie uns einfach sicherstellen, dass dies funktioniert, indem Sie diese Anmeldekomponente zu unserer App hinzufügen

02:15.440 --> 02:16.320
Punkt js.

02:25.950 --> 02:32.180
Und dann, endlich, können wir es vorerst ganz oben stellen, um sicher zu gehen, dass es funktioniert.

02:34.930 --> 02:36.180
Mal sehen was passiert.

02:36.580 --> 02:41.400
Es ist erfolgreich kompiliert, zurück und in Ordnung, wir haben das Formular.

02:41.650 --> 02:47.170
Es sieht nicht schlecht aus, aber es gibt definitiv ein paar Dinge. Wir wollen dieses Grundzeug nicht und

02:47.170 --> 02:51.110
Wir brauchen alles zentriert.

02:51.140 --> 02:54.830
Nun, eine Sache, ich will, ich möchte das eine Karte darunter haben.

02:54.900 --> 02:59.220
Wenn ich also zu Tachyonen und Tachyons zurückkomme,

03:02.920 --> 03:05.170
es ist wie eine Produktkarte.

03:05.170 --> 03:05.590
Gut.

03:05.600 --> 03:09.250
Ich mag das Aussehen dieser Produktkarte, aber ich mag einfach die Grenzen davon.

03:09.290 --> 03:16.620
Ich muss den Inhalt nicht kopieren. Also werde ich einfach dieses "Artikel" -Tag kopieren und es hinzufügen

03:20.050 --> 03:20.780
hier drin.

03:23.980 --> 03:25.540
Schließe das "Artikel" -Tag,

03:29.420 --> 03:30.600
und mal sehen, wie das aussieht.

03:34.410 --> 03:38.960
In Ordnung, wir haben wenigstens die Boundary Box, aber alles ist abgestoßen.

03:39.000 --> 03:41.760
Wieder fangen wir an, einige Dinge zu entfernen, die wir nicht brauchen.

03:41.990 --> 03:44.850
Wir brauchen nicht das "Passwort vergessen",

03:45.330 --> 03:47.130
wir brauchen nicht das "Remember Me".

03:51.000 --> 03:53.850
Lass uns sparen, geh zurück.

03:54.090 --> 04:01.560
Und wieder wollen wir sicherstellen, dass dies zentriert ist, und wir wollen die Klassen hier wirklich ändern,

04:02.480 --> 04:03.010
zu,

04:03.010 --> 04:05.280
wieder habe ich befehlskontrolle,

04:08.060 --> 04:14.700
command control 'g', um all diese multiplen Cursor zu haben und ich werde nur 'className' sagen und wir wollen es wirklich

04:14.700 --> 04:20.260
Um dieses "Zentrum" hier zu entfernen, haben wir es schon hier oben.

04:20.340 --> 04:23.090
Alles in allem fängt es an, ein bisschen besser auszusehen.

04:23.100 --> 04:30.400
Ich möchte ein bisschen Schatten um die Grenze machen, also ändere vielleicht den "Grenzradius" auf drei

04:30.900 --> 04:41.160
und ändern Sie einige dieser Werte, ich werde meinen Lieblingsschatten hinzufügen, und ich glaube nicht, dass ich das brauche.

04:41.290 --> 04:42.520
Mal sehen, wie das aussieht.

04:43.610 --> 04:47.610
Ok, schau dir die Grenze an, die sehr gut aussieht.

04:49.950 --> 04:56.620
Und vielleicht wollen wir das ein bisschen größer und das sollte "Registrieren" statt "Anmelden" heißen, weil

04:56.640 --> 05:00.540
Nun, wir möchten idealerweise ein anderes Formular für eine Registrierung haben.

05:00.750 --> 05:12.030
Also werden wir hier 'Registrieren' sagen, und dann für ein 'Anmelden' werden wir 'f1' sagen, speichern Sie das, gehen Sie zurück.

05:12.060 --> 05:13.300
Gut.

05:13.410 --> 05:15.000
Das sieht eigentlich gar nicht so schlecht aus.

05:17.930 --> 05:21.150
Und wenn ich Dinge hier tippe, sieht alles gut aus.

05:23.130 --> 05:23.460
Perfekt.

05:23.460 --> 05:27.470
Wir haben also die Anmeldeform. Dieses Anmeldeformular,

05:27.620 --> 05:32.810
Nun, wir möchten nicht, dass dies angezeigt wird, wenn diese App aktiv ist.

05:32.810 --> 05:40.860
Idealerweise haben wir ein Anmeldeformular und sobald ein Nutzer sich anmeldet, kann er auf die Startseite zugreifen.

05:40.970 --> 05:42.220
Also lass uns das tun.

05:42.230 --> 05:45.770
Es klingt, als ob wir ein bisschen Staat brauchen.

05:46.020 --> 05:55.320
Wenn ich zu App Punkt js gehe, und dies ist ein Problem, das sehr häufig in Karten ist und es gibt Bibliotheken, die Sie können

05:55.320 --> 05:57.910
verwenden, aber für uns möchte ich das von Grund auf neu erstellen.

05:57.920 --> 06:06.810
Wir verstehen also besser, wie die Dinge funktionieren. Wir können einen Routenstatus erstellen und die Route beibehalten

06:06.810 --> 06:09.410
Spur von wo wir auf der Seite sind.

06:09.450 --> 06:14.120
In unserem Fall möchten wir, dass es mit der Anmeldung beginnt.

06:14.130 --> 06:21.250
Wenn die App also zum ersten Mal geladen wird und der Konstruktor ausgeführt wird, sollte 'signing' oder 'route' 'signing' sein.

06:21.520 --> 06:24.130
So, jetzt, wo wir das haben,

06:24.130 --> 06:27.240
Nun, es klingt wie eine bedingte Aussage richtig.

06:27.250 --> 06:34.460
Wir können das einfach sagen, wenn und ich kann hier eine if-Anweisung machen, weil wir uns in einer return-Anweisung befinden.

06:35.010 --> 06:41.110
Aber weil das nur so ist, ist das nur JSX, wir können Dinge in geschweifte Klammern schreiben.

06:41.500 --> 06:43.570
Und jetzt ist es ein Javascript-Ausdruck.

06:43.780 --> 06:47.120
Also werden wir sagen, wir werden das in geschweifte Klammern schreiben,

06:47.200 --> 06:49.640
Und wir wollen die Navigation dort egal was.

06:49.720 --> 06:55.330
Wenn 'dieser' Punkt 'Zustand' Punkt 'Route' gleich ist

06:58.380 --> 07:00.300
'anmelden'.
 
07:00.630 --> 07:09.610
Wenn das stimmt, dann möchte ich, dass Sie die 'Signin' Komponente zurückgeben. Andernfalls können Sie zurückkehren,

07:12.400 --> 07:13.940
die "Logo" -Komponente.

07:14.150 --> 07:18.210
Ändern wir einfach den Abstand hier, nur damit es ein bisschen besser aussieht. Lass uns sparen,

07:22.010 --> 07:23.670
und schau, ob das funktioniert.

07:23.690 --> 07:30.440
Da gehst du hin, fügte hinzu. Wir sehen, dass wir einen Fehler bekommen, der sagt:Nun, JSON AJAX Elemente müssen eingepackt werden

07:30.440 --> 07:34.800
ein einschließendes Tag Denken Sie daran, dass wir hier mehrere Elemente zurückgeben,

07:34.910 --> 07:35.590
das geht nicht.

07:35.600 --> 07:36.760
Wir müssen sie einpacken.

07:37.130 --> 07:39.610
Ja, diese Fehlermeldung ist ein bisschen knifflig.

07:42.130 --> 07:47.890
Aber man gewöhnt sich nach einer Weile daran, also wollen wir das einpacken

07:52.330 --> 07:58.360
"div". Lass uns sparen. Lass uns zurück gehen.

07:58.380 --> 07:58.790
Gut.

07:58.810 --> 08:00.680
Schauen wir uns die Konsole an,

08:00.820 --> 08:05.380
keine Fehler, aber immer noch "signin". Lassen Sie uns also überprüfen, ob wir das richtig gemacht haben.

08:05.950 --> 08:11.140
Wenn 'dieser' Punkt 'Zustand' Punkt 'Route' gleich 'Signierung' ist.

08:11.310 --> 08:13.580
Und wie du sehen kannst, habe ich das falsch geschrieben.

08:15.050 --> 08:16.300
Und deshalb (es) hat nicht funktioniert.

08:16.490 --> 08:18.840
Wenn ich spare.

08:19.060 --> 08:19.940
Da gehst du.

08:20.100 --> 08:21.870
Wir bekommen unser "Anmelden".

08:21.960 --> 08:25.140
Und wenn ich das zu etwas anderem ändere,

08:25.440 --> 08:28.680
In diesem Fall bekommen wir unseren Homescreen.

08:28.920 --> 08:29.700
Tolle.

08:29.880 --> 08:33.740
Nur einfache Bedingungen in Javascript, und wir haben unsere selbst-direkt (?).

08:33.950 --> 08:37.330
Lassen Sie uns darauf eingehen. Lass uns einloggen.

08:37.530 --> 08:40.440
Und jetzt, wenn der Benutzer sich anmeldet,

08:43.350 --> 08:51.110
während wir sie auf die Homepage leiten wollen. Lassen Sie uns also eine Funktion für 'Signin' und diese Prop-Willen erstellen

08:51.120 --> 08:55.500
haben wir es "onRouteChange" nennen.

08:55.500 --> 09:02.390
Wenn sich die Route ändert, wird es "dieser" Punkt "onRouteChange" sein.

09:02.400 --> 09:05.180
Und lasst uns diese Funktion schreiben.

09:05.430 --> 09:11.320
Wir können 'onRouteChange' mit Pfeilfunktionen sagen.

09:11.460 --> 09:19.210
Lassen Sie uns darüber nachdenken, denn jetzt können wir 'this' dot 'setState' auf 'home' speichern. Bedeutet nicht viel, aber

09:19.390 --> 09:23.550
es ändert sich, die 'signin' Route nach 'home'.

09:25.780 --> 09:29.970
Also lass uns das funktionieren lassen. Ich werde sparen.

09:30.160 --> 09:34.310
Oh! Ich muss das in geschweifte Klammern schreiben, weil es ein Objekt ist.

09:34.320 --> 09:34.630
Ja.

09:34.840 --> 09:44.680
Und jetzt, wenn wir in die 'Signin'-Komponente gehen, können wir sagen, für diese' Eingabe 'können wir einfach einen' onClick'-Event-Handler haben.

09:44.680 --> 09:50.640
Also lassen Sie mich, fügen Sie das auf einem neuen Platz hinzu, nur damit Sie ein besseres sehen können.

09:58.060 --> 10:08.510
Machen Sie das etwas größer, Sie werden einen 'onClick' und 'onClick' machen, dieser 'signin' bekommt den 'onRouteChange'

10:09.880 --> 10:20.320
Event-Handler, und wir sagen nur 'onRouteChange', wird gespeichert. Gehen wir zurück und klicken auf "Anmelden" und es funktioniert.

10:23.180 --> 10:25.320
Okay, wir wollen auch auf "onSignOut" klicken

10:25.340 --> 10:28.420
und es sollte uns auf die Anmeldeseite bringen.

10:28.460 --> 10:30.190
Also wieder haben wir den 'onRouteChange',

10:33.060 --> 10:44.020
aber dieses mal auf dem klick des sign out, welches die 'navigation' hier ist, wollen wir es zur route bringen.

10:44.030 --> 10:45.240
Wie können wir das machen?

10:45.330 --> 10:53.520
Wir gehen zur Komponente "Navigation" und wir möchten auf dem P-Tag sagen, dass es einen "onClick" geben wird

10:54.720 --> 11:02.610
und das "onclick" -Ereignis, das wir noch nicht geschrieben haben, aber wir haben das 'onRouteChange'.

11:02.660 --> 11:11.290
Basierend darauf kann ich das als Requisite weitergeben und zurück zur App dot js gehen,

11:11.340 --> 11:21.910
wir können in 'Navigation' 'onRouteChange', 'this' dot 'onRouteChange' einfügen.

11:22.160 --> 11:33.240
Aber es gibt ein Problem hier, denn sobald ich mich 'anmelde' und ich auf 'Abmelden' klicke, während nichts passiert. Wir sind niemals

11:33.390 --> 11:35.600
Ändern der Route zum "Anmelden".

11:35.640 --> 11:45.750
Im Idealfall wenn wir klicken, ändern wir die Route zu "Anmelden", so dass diese Aussage hierüber ausgewertet wird

11:45.750 --> 11:50.310
wahr und wir bekommen das Zeichen in Form.

11:50.320 --> 11:57.880
Es klingt also so, als würden wir statt "statisch" nach "onRouteChange" nach Hause gehen, müssen wir dynamisch

11:58.210 --> 11:59.800
sag das unsere Route

12:02.750 --> 12:05.320
wird sein, wo wir es geben.

12:05.330 --> 12:07.460
Wir müssen 'onRouteChange' und 'signing' ändern,

12:07.490 --> 12:12.130
und 'onRouteChange' und 'Navigation'.

12:12.340 --> 12:16.180
Also gehen wir zuerst zu 'Signin' und sagen 'onRouteChange' 'home'.

12:18.930 --> 12:24.240
Jetzt möchten wir diese Funktion nicht ausführen. So wie wir es jetzt haben, werden wir das ausführen

12:24.240 --> 12:27.850
Funktion, wenn es gerendert wird.

12:27.860 --> 12:33.170
Aber das ist nicht das, was Sie wollen, wir wollen, dass es läuft, wenn 'onClick' passiert und dann 'onClick' ruft

12:33.170 --> 12:34.410
diese Funktion.

12:34.410 --> 12:42.340
So wie wir das machen, können wir eine Pfeilfunktion ausführen. Und diese Pfeilfunktion wird nur eine 'onRoute' haben

12:43.030 --> 12:43.980
Ändern Sie "Zuhause".

12:44.180 --> 12:50.870
Es ist also nur eine Funktion, die aufgerufen wird. Hier definieren wir nur die Funktion.

12:51.010 --> 12:54.020
Lassen Sie uns dasselbe in der Navigation tun.

12:54.070 --> 13:03.440
In 'Navigation' 'onRouteChange' wird jetzt ein Parameter übergeben, aber anstelle von 'home' wird 'signin' angezeigt. Mal schauen

13:03.440 --> 13:04.400
wenn das geht.

13:05.650 --> 13:14.800
Gehen Sie zu "Anmelden" und "Abmelden". "Anmelden" und "Abmelden", großartig.

13:14.860 --> 13:18.940
Wir werden uns nicht allzu viele Gedanken darüber machen, ob wir einen Fehler bekommen, weil wir nichts eingegeben haben.

13:18.940 --> 13:21.200
Fürs Erste wollen wir sicherstellen, dass die Routen funktionieren.

13:21.480 --> 13:21.690
Gut.

13:21.690 --> 13:24.480
Lassen Sie uns auch das Register für einen neuen Benutzer erstellen.

13:24.480 --> 13:26.700
Wir wollen, dass sie ein Register haben.

13:26.710 --> 13:32.730
Vielleicht wird auch nach dem Namen des Benutzers gefragt.

13:32.900 --> 13:38.650
Und um die Dinge einfach zu halten, fügen wir einfach einen neuen Ordner in "Komponenten" hinzu.

13:38.870 --> 13:46.740
Und das wird "registrieren" und das wird sehr ähnlich wie "Anmelden".

13:46.760 --> 13:54.680
Also werden wir ein bisschen eine Code-Duplizierung haben. Aber wieder bauen wir es nur ziemlich schnell, so sollte es sein

13:54.680 --> 13:55.630
für jetzt gut.

13:59.160 --> 14:04.730
Wenn wir das von "Signin" kopieren, können wir einfach alles von "Signin" kopieren und zu "Register" gehen.

14:04.890 --> 14:13.790
Und jetzt ändern Sie das 'Anmelden' in 'Registrieren' und das 'Registrieren' vielleicht fügen wir ein Zahlenfeld hinzu.

14:13.960 --> 14:29.620
Vielleicht wird dieses Feld oben nur den Namen haben. Und wir sagen 'für' 'Name', 'Typ' 'Text' und 'Name' wird sein

14:29.680 --> 14:38.050
nur "Name". 'id' werden wir nur 'name' sagen. Wir brauchen diese Eigenschaften, die sie gerade mit dem Formular erhalten haben, nicht

14:38.050 --> 14:40.570
dass ich kopiere und aus "Tachyonen" einfügen.

14:40.900 --> 14:44.280
Aber, es macht den Job für jetzt, es sollte gut sein.

14:44.450 --> 14:47.510
Und wir brauchen den Link "Registrieren" nicht unten.

14:50.880 --> 14:52.020
Lass uns sparen.

14:52.430 --> 14:57.810
Und wenn wir zurück zum 'Signin' gehen, wollen wir auch nicht, dass dies ein Anker-Tag ist.

14:57.860 --> 15:04.300
Wir möchten eine Routenänderung vornehmen, also können wir vielleicht nur ein "P" -Tag machen

15:08.330 --> 15:14.390
Und dieses 'p' -Tag wird auch das 'onClick' -Ereignis haben.

15:14.590 --> 15:20.280
Und beim Klicken wird es sagen, dass wir von "Anmelden" wollen, dass wir uns registrieren wollen.

15:20.680 --> 15:21.380
Perfekt.

15:21.400 --> 15:27.550
Und dann, wenn du zu App dot js gehst, wollen wir diese Komponente importieren,

15:32.790 --> 15:35.710
"Registrieren" und "Registrieren".

15:39.570 --> 15:46.420
Und 'Register' ist definiert, wird aber nie benutzt, weil wir es zu unserem Render hinzufügen müssen.

15:46.430 --> 15:54.760
Jetzt ist das ein bisschen schwierig, weil wir ein paar mehr bedingte Prüfungen machen müssen. Wird sich bewegen

15:54.940 --> 15:57.790
ein bisschen herum, nur um saubereren Code zu haben.

15:57.790 --> 16:08.320
Ich werde sagen, wenn 'state' dot 'route' 'home' ist, dann möchte ich, dass Sie unseren Homescreen rendern

16:12.140 --> 16:14.300
und ansonsten,

16:19.270 --> 16:22.780
Ich werde einen anderen Ausdruck haben, also wickle ich ihn in geschweifte Klammern.

16:23.400 --> 16:31.700
Und dieser andere Ausdruck, wir werden ein anderes Ternär haben, das sagen wird, dass 'dieser' Punkt 'Zustand' Punkt 'Weg' gleich ist

16:33.540 --> 16:41.320
'signing', wenn es angemeldet ist, geben wir das 'Signin' Formular zurück,

16:44.500 --> 16:51.930
Andernfalls senden wir das Formular 'Registrieren' zurück.

16:52.090 --> 16:53.920
Und ich weiß, es gibt bessere Möglichkeiten, es zu tun.

16:53.920 --> 16:58.250
Wir hätten das hier einfach rausholen können oder es und die Rückmeldung gemacht.

16:58.480 --> 17:02.910
Aber jetzt wollen wir, dass das funktioniert, damit wir das testen können.

17:02.950 --> 17:03.680
Wir haben 'Anmelden'.

17:03.700 --> 17:10.490
Wenn ich auf "Registrieren" klicke, gehe ich zur Registrierung, aber wir müssen den Titel ändern, damit wir das sehen können.

17:10.540 --> 17:11.740
Lass uns das noch einmal machen.

17:11.920 --> 17:20.630
Gehen wir zurück zu "Registrieren" und wir ändern den Titel in "Registrieren".

17:20.650 --> 17:22.150
Lass uns zurückgehen, wir sind auf "Anmelden".

17:22.150 --> 17:33.440
Wenn ich auf "Registrieren" klicke, gehe ich auf "Registrieren" und wenn ich auf "Anmelden" klicke, bin ich endlich drin. Und lass uns endlich auch etwas ändern

17:33.440 --> 17:38.890
die Eingabe 'type' 'submit' oder der 'value' auf 'Register'.

17:39.170 --> 17:40.360
Lass uns das nochmal speichern.

17:43.370 --> 17:47.030
Geh zurück, registriere dich, klicke auf "Registrieren".

17:47.510 --> 17:52.460
Ich weiß nicht, ob Sie auch bemerkt haben, dass wir nicht den Cursor bekommen, wenn wir auf "Registrieren" klicken

17:52.460 --> 17:53.370
repariere das.

17:53.480 --> 17:58.830
Wir gehen zur 'Anmeldung' und wir sagen das auf diesem 'p' Tag,

17:58.840 --> 18:02.270
wir werden sagen, dass es ein "Zeiger" ist

18:02.750 --> 18:08.710
Klasse.

18:08.920 --> 18:09.310
Da gehst du. Whoo! Gut.

18:09.370 --> 18:13.110
Also bekommen wir unsere Form, was gut ist.

18:13.130 --> 18:17.250
Das letzte, was ich beheben möchte, ist das "Abmelden".

18:17.410 --> 18:26.980
Ich möchte nur dann "Abmelden" können, wenn ich zu Hause bin, und vielleicht, wenn ich mich anmelde oder registriere,

18:27.100 --> 18:32.290
Ich habe die beiden Navigationsregisterkarten hier.

18:32.520 --> 18:34.010
Das ist ziemlich einfach zu machen.

18:34.020 --> 18:40.110
Wir können zurück zu 'Navigation' und in 'Navigation' können wir sagen,

18:45.410 --> 18:50.790
wenn 'isSignedIn' ist, eine Variable, die wir noch nicht haben, aber wir können eine Variable erstellen.

18:51.020 --> 18:59.770
Ich möchte nur, dass Sie darüber nachdenken, wie wir das gestalten wollen. Also, wenn es angemeldet ist, der Benutzer, in diesem Fall

18:59.980 --> 19:01.030
wir wollen zeigen

19:03.780 --> 19:07.750
dieses Recht?

19:07.880 --> 19:14.120
Ansonsten können wir zeigen, und ich zeige Ihnen, wie Sie das ohne das ternäre tun, so wie wir es gemacht haben

19:14.120 --> 19:14.940
es in der App

19:14.950 --> 19:15.680
Punkt js.

19:15.770 --> 19:17.260
Ich möchte dir beide Wege zeigen.

19:17.420 --> 19:26.330
Wenn der Benutzer nicht angemeldet ist, sollten wir vielleicht zwei Navigationen haben, eine, die sagt

19:29.440 --> 19:34.940
'Anmelden' und ein weiterer 'Registrieren'.

19:39.150 --> 19:42.630
Und hier drüben sehe ich, dass wir das Ganze drehen

19:42.660 --> 19:49.740
anstatt was ich hätte tun sollen, ist die Rückkehr des Individuums.

19:49.750 --> 19:51.400
Also, hier werde ich 'Rückkehr' sagen,

19:57.180 --> 20:00.490
wickle das in eine Klammer.

20:00.750 --> 20:12.680
Und wir haben die erste Rückkehr und dann, wenn es angemeldet ist, werden wir 'zurückkommen'.

20:12.810 --> 20:16.190
Lass uns das speichern, Oop! Ich habe hier einen weiteren Fehler gemacht.

20:16.200 --> 20:17.930
Wir brauchen das nicht, um Dinge zu "nav" zu machen.

20:18.000 --> 20:21.780
Wir wollen eigentlich nur das mittlere "p" -Tag

20:24.920 --> 20:30.230
und hier fügen Sie einfach die zwei Links hinzu.

20:30.380 --> 20:35.870
Also die 'Anmelden' und 'Registrieren'. Also können wir das entfernen, weil es mir gab und Fehler, weil ich zurückkehrte

20:35.870 --> 20:36.840
mehr als eine Sache.

20:39.020 --> 20:39.820
Gut.

20:39.900 --> 20:40.690
Sieht gut aus.

20:40.740 --> 20:43.210
Wir wollen sicherstellen, dass der 'onRouteChange',

20:43.230 --> 20:52.570
Wenn wir auf "Anmelden" klicken, gehen alle nach "Zuhause". Wenn wir erneut auf "Registrieren" klicken, wird auch "Zuhause" angezeigt.

20:52.890 --> 20:57.360
Wenn ich auf "Abmelden" klicke, gehe ich zu "Anmelden".

20:57.510 --> 21:00.790
Und dann existiert 'isSignedIn' noch nicht,

21:01.170 --> 21:12.360
Es sieht also so aus, als müssten wir einen neuen Zustand hinzufügen, und wir nennen dies 'isSignedIn' und

21:12.690 --> 21:17.390
um anzufangen, wird es falsch sein. Und es gibt etwas, was wir leicht tun können

21:17.400 --> 21:26.920
im 'onRouteChange'. 'onRouteChange' können wir vielleicht eine weitere if-Anweisung hinzufügen, und wir werden sagen, wenn 'Route'

21:29.300 --> 21:33.450
entspricht "Abmeldung".

21:33.740 --> 21:35.540
Also, um sich abzumelden.

21:35.930 --> 21:45.540
Nun, dann sollten wir 'setState' von 'isSignedIn' auf 'false' setzen, weil wir uns abmelden.

21:45.710 --> 21:46.760
Sonst wenn

21:49.280 --> 22:04.680
"route" entspricht "home", also in diesem Fall wollen wir "setState" von "isSignedIn" auf "true" setzen.

22:05.310 --> 22:11.520
Und du denkst vielleicht, wollen wir nicht authentifizieren und sicherstellen, dass sie Zugang zu bekommen haben?

22:11.520 --> 22:15.750
Zuhause? und das ist etwas, worüber wir uns jetzt keine Sorgen machen werden, wir wollen es nur zum Laufen bringen.

22:16.050 --> 22:21.330
Wenn also die Route 'signout' ist, dann ist 'isSignedIn' falsch.

22:21.330 --> 22:23.920
Wenn die "Route" zu Hause ist, dann sind sie offensichtlich unterschrieben.

22:24.030 --> 22:25.620
Es wird also wahr sein.

22:25.830 --> 22:31.790
Und egal, wir wollen immer noch die Route ändern. Mal sehen, ob das tatsächlich funktioniert.

22:31.950 --> 22:41.950
Ich gehe zurück, klicke auf 'Registrieren', oop! Ich gehe nach Hause, anstatt auf die Seite "Registrieren" zu gehen.

22:41.970 --> 22:45.510
Also habe ich hier einen Fehler gemacht, wenn ich in "Navigation" gehe,

22:45.510 --> 22:51.750
Natürlich, wenn ich auf "Registrieren" klicke, wollen wir ins "Register" gehen und wenn ich auf "Anmelden" klicke, wollen wir

22:51.750 --> 22:58.300
Gehe zu 'Anmelden'. Llet rettet das, lasst uns das nochmal versuchen.

22:59.410 --> 23:01.840
"Anmelden", nichts passiert, weil wir schon hier sind.

23:01.930 --> 23:02.500
Anmelden, Registrieren

23:02.500 --> 23:04.030
nett,

23:04.040 --> 23:06.470
"Anmelden", "Registrieren", "Anmelden", "Registrieren"

23:06.490 --> 23:08.900
Perfekt. Klicken Sie hier auf 'Registrieren',

23:09.040 --> 23:19.000
Ich gehe auf "Registrieren", wenn ich auf "Registrieren" klicke, bin ich bei "Zuhause" und hoppla! Wir sehen, dass wir diese Änderung zu 'Abmelden' und

23:19.000 --> 23:21.700
Das ist auf der Home-Seite, also können wir zurück zum App-Punkt gehen

23:21.770 --> 23:23.040
js

23:23.080 --> 23:24.620
Und es ist eine einfache Lösung.

23:24.730 --> 23:25.930
Wir können hier zurück gehen.

23:26.020 --> 23:34.390
Wir wollen die Requisite von 'isSignedIn' tatsächlich als 'diesen' Punkt 'Staat' bezeichnen

23:34.410 --> 23:44.280
Punkt "signieren". Oop! das ist es nicht, 'isSignedIn'. Lass uns sparen. Wenn wir also zurückgehen, sehen wir das äh! es ist nicht

23:44.280 --> 23:44.760
Arbeiten.

23:44.760 --> 23:52.970
Und deshalb, weil es wieder so schwierig ist mit Javascript, habe ich "falsch" in eine Zeichenkette verwandelt.

23:53.130 --> 24:03.310
Also, wenn es überprüft, ist 'IsSignedIn' hier falsch, technisch ist in Javascript wahr, weil es eine Zeichenfolge ist,

24:03.310 --> 24:04.390
So existiert es.

24:04.420 --> 24:08.770
Wenn ich hier bin und "Boolean"

24:11.350 --> 24:15.190
falsch, wird sagen, dass es wahr ist.

24:18.180 --> 24:19.580
Kommen wir also zurück.

24:19.590 --> 24:25.740
Ich werde sagen, isSignedIn ', das sollte falsch sein, ein Boolean.

24:25.740 --> 24:28.660
Lass uns sehen, ob das funktioniert.

24:29.400 --> 24:34.670
Es wird sich registrieren. Wenn ich auf "Registrieren" klicke, bin ich zu Hause, wenn ich auf "Abmelden" klicke. Ich melde mich ab.

24:35.220 --> 24:37.530
Aber sehen Sie, wie sich das nicht ändert.

24:38.310 --> 24:42.380
Weil ich hier einen weiteren Fehler gemacht habe.

24:42.540 --> 24:49.950
Wenn wir hier auf "Abmelden" klicken, möchten wir im Idealfall "Abmeldung" sagen.

24:53.310 --> 24:54.390
und wenn wir uns abmelden,

25:00.640 --> 25:04.870
wir melden uns ordnungsgemäß ab.

25:04.880 --> 25:12.750
Gut. Wir haben uns eine nette App besorgt.

25:12.790 --> 25:20.050
Es gibt ein paar Aufräummaterialien, die wir hier machen können, wie das Entfernen der "Konsole".

25:20.140 --> 25:24.650
Wir verwenden auch sehr oft diesen "Punkt" -Zustand, in dem wir die Destrukturierung verwenden können.

25:24.970 --> 25:41.560
Ich kann also 'isSignedIn', 'imageUrl', 'route' und 'box' destrukturiert haben.

25:41.760 --> 25:44.140
Jetzt kann ich die Dinge ein bisschen sauberer machen.

25:48.660 --> 25:50.570
Durch das Entfernen von "diesem" Punkt "Zustand" überall,

25:58.920 --> 25:59.700
da gehst du.

26:03.180 --> 26:05.520
Oh! und ich muss hier 'const' hinzufügen.

26:08.610 --> 26:09.330
Gut.

26:09.490 --> 26:12.200
Perfekt, das sieht ziemlich gut aus.

26:14.160 --> 26:16.530
'OnButtonSubmit', 'onInputChange',

26:16.570 --> 26:17.770
Alles sieht gut aus.

26:17.770 --> 26:20.440
Wir haben unsere 'CalculateFaceLocation'.

26:20.500 --> 26:26.380
Es gibt natürlich ein paar Dinge, die wir verbessern können, aber im Moment haben wir eine funktionierende App, die das tut

26:26.440 --> 26:28.090
genau das, was wir brauchen.

26:28.120 --> 26:31.710
Es gibt Gesichtserkennung und es funktioniert gut.

26:31.720 --> 26:37.060
Ich möchte auch die Konsole sehen, stellen Sie sicher, dass wir keine Fehler bekommen. Und wir sehen, dass wir zwei Dinge haben

26:37.060 --> 26:37.640
Hier.

26:38.050 --> 26:40.140
Eine davon ist eine ungültige DOM-Eigenschaft für.

26:40.180 --> 26:47.930
Meintest du htmlFor ?, es gibt uns einen netten Fehler, der bei Signin dot js sagt, und das ist weil nochmal

26:47.930 --> 26:52.880
Wir verwenden JSX und 'for' ist ein JavaScript-Wort.

26:53.000 --> 27:01.760
Auch wenn Sie in html "for" für "labels" verwenden können, um sie an die Eingabe anzuhängen, müssen wir in JSX ein "htmlFor" tun, also

27:01.760 --> 27:09.630
Wir können 'htmlFor', 'htmlFor',

27:13.610 --> 27:17.410
speichern Sie das, und wir müssen das tun und das "Register" auch.

27:26.570 --> 27:28.080
Und das funktioniert.

27:28.190 --> 27:34.250
Aber wenn ich auf "Anmelden" klicke, bekomme ich die Formularübermittlung abgebrochen, weil das Formular nicht verbunden ist, und das

27:34.250 --> 27:36.130
ist weil mit HTML,

27:36.350 --> 27:42.650
Erinnern Sie sich daran, wann wir an Formularen gearbeitet haben, es wird automatisch bei einer Eingabe oder bei einem Button eine Taste gedrückt

27:42.740 --> 27:50.180
'onSubmit' Event, wo 'type' submit ist, werden Sie automatisch versuchen, diese Formulare zu senden.

27:50.180 --> 27:53.690
Wenn ich das wirklich zu einem 'div' ändere,

27:58.080 --> 28:06.030
und ich speichere das, wenn wir wieder zu "Registrieren" gehen und auf "Registrieren" klicken, bekomme ich diesen Fehler nicht mehr. Nochmal,

28:06.060 --> 28:13.080
denn in zukünftigen Videos, wenn wir das Backend erstellen, werden wir nicht unbedingt ein Formular senden,

28:13.080 --> 28:15.690
Wir werden es durch JSON senden, das dynamischer ist.

28:15.690 --> 28:18.310
Wir können die Dinge ein wenig besser anpassen.

28:18.510 --> 28:25.530
Wir können uns einfach nicht um HTML-Formulare kümmern, so dass wir eine vollständige Anpassung mit JSON haben. So können wir das tun

28:25.530 --> 28:27.510
Das gleiche gilt auch hier.

28:33.620 --> 28:36.000
Und nochmal, nochmal signieren, keine Fehler.

28:36.020 --> 28:38.090
Alles funktioniert wie vorgesehen.

28:38.090 --> 28:46.900
Wenn der Formularteil verwirrend ist, sollten Sie den Abschnitt HTTP, JSON und AJAX überprüfen. Wie ich bereits sagte,

28:46.910 --> 28:52.120
Formulare reichen automatisch ein oder versuchen, Dinge für uns einzureichen, wir reichen noch nichts ein.

28:52.130 --> 28:58.310
Wir werden unseren eigenen Server erstellen, wo wir unsere eigenen Benutzer anmelden und registrieren können

28:58.430 --> 29:01.370
unsere eigenen neuen Benutzer.

29:01.380 --> 29:06.330
Es gibt ein paar Dinge, die wir aufräumen können und wir brauchen uns keine Sorgen zu machen, weil wir arbeiten

29:06.520 --> 29:13.470
App Und jetzt möchte ich mit dem Erstellen eines Servers beginnen, damit wir uns tatsächlich einloggen können und

29:13.470 --> 29:18.840
Melden Sie sich ab und verwenden Sie einen Server, mit dem diese Website interagiert.

29:18.940 --> 29:20.550
Ich werde dich in diesem einen sehen. Buh-Tschüss