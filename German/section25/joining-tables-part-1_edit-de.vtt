WEBVTT

00:00.730 --> 00:04.680
Willkommen zurück. Jetzt haben wir ein paar SQL-Befehle ausgeführt

00:04.680 --> 00:10.660
und Sie sollten sich bei den meisten von ihnen wohl fühlen. Aber es gibt eine Sache, die ich irgendwie weggelassen habe

00:10.710 --> 00:16.500
bis jetzt. Du erinnerst dich hier, als wir über relationale Datenbanken sprachen, erwähnte ich etwas über unsere

00:16.500 --> 00:19.030
Primärschlüssel und ein Fremdschlüssel.

00:19.200 --> 00:25.550
Wie diese Tabellen mit einigen Werten wie Benutzername miteinander verknüpft sind.

00:25.560 --> 00:31.210
Nun, wir werden anfangen, diese Idee der Verbindung der Tabellen einzuführen und wie wir das tun können.

00:32.890 --> 00:41.220
Das erste, was ich dir zeigen möchte, ist dieser Befehl hier. Ich möchte eine Login-Tabelle mit create erstellen

00:41.220 --> 00:42.300
TABELLE, die wir gesehen haben

00:44.860 --> 00:49.600
Und jetzt hier drin,

00:49.750 --> 00:50.940
Ich habe ein paar Dinge.

00:51.190 --> 00:55.440
Ich habe eine ID, die den Datentyp seriell hat.

00:55.450 --> 00:59.190
Schauen wir uns an, was das ist.

00:59.230 --> 01:04.400
Wir sehen, dass der Datentyp seriell ein automatisch inkrementierender Integer-Wert ist.

01:04.610 --> 01:05.220
OK.

01:05.470 --> 01:11.980
Und dieser automatisch erhöhte Wert jedes Mal, wenn ein neuer Benutzer erstellt wird.

01:11.990 --> 01:16.350
Es wird eins, zwei, drei, vier, fünf gehen.

01:16.450 --> 01:20.640
Es ist also eine eindeutige ID, die wir jedem Benutzer zuweisen können.

01:20.650 --> 01:22.720
Dies ist jedoch für die Login-Tabelle.

01:22.720 --> 01:27.930
Also erstellen wir hier eine ID für jeden Login-Eintrag.

01:29.510 --> 01:30.960
Und Sie sehen, dass es NOT NULL heißt.

01:31.020 --> 01:39.230
Nicht null bedeutet, dass dieser Brunnen ein gefülltes Grundstück sein muss.

01:39.260 --> 01:45.000
Denken Sie daran, als wir den Benutzertisch hatten und wir hatten keine Punkte und wir hatten null hier.

01:45.320 --> 01:49.380
Nun, wenn wir nicht NULL, das heißt, das ist nicht möglich.

01:50.900 --> 01:54.760
Und dann haben wir auch Primärschlüssel und Primärschlüssel einstellen

01:54.770 --> 02:01.480
Wenn Sie eine Tabelle erstellen, ist eines der wichtigsten Dinge. Mit der Aussage, dass die ID hier ist die

02:01.480 --> 02:02.780
Primärschlüssel.

02:03.530 --> 02:11.420
Es sagt, dass ich genau das möchte, wenn ich nach Dingen suche. Und Datenbanken sind wirklich

02:11.420 --> 02:11.930
wirklich gut.

02:11.930 --> 02:21.400
Wenn Sie einen Primärschlüssel zum Abrufen dieser Informationen festlegen. Und wie Sie wissen, sind Primärschlüssel nur eine pro Tabelle.

02:21.520 --> 02:28.090
Normalerweise etwas wie eine ID oder etwas Einzigartiges wie eine E-Mail. Indem Sie dies als Primärschlüssel festlegen,

02:28.130 --> 02:35.930
Wir haben jetzt eine sehr, sehr schnelle Art, Informationen auszuwählen oder zu erfassen.

02:36.010 --> 02:43.360
Wenn wir uns hier den zweiten Wert ansehen, die zweite Spalte. Wir haben ein Geheimnis, das ein variables Zeichen ist

02:43.360 --> 02:44.260
von einer 100.

02:44.440 --> 02:53.350
Schauen wir uns an, was dieser Datentyp ist. Für das String-Datentyp-Variable-Zeichen gibt es eine Größe,

02:56.100 --> 02:58.810
und wir können sagen, dass numerische Zeichen gespeichert werden sollen.

02:59.130 --> 03:06.270
Wir sagen also, dass der geheime Wert in unserem Fall der Hashwert ist, der nicht größer als 100 ist.

03:06.630 --> 03:13.050
Und es ist auch nicht null, das muss immer gefüllt werden, wenn wir etwas in dieses einfügen

03:13.050 --> 03:13.690
Tabelle.

03:13.770 --> 03:20.930
Sonst wird es scheitern. Und dann haben wir einen Namen, der Text ist, den wir vorher benutzt haben.

03:21.030 --> 03:28.680
Aber es muss auch einzigartig sein. Und das einzigartige Keyword sagt, dass, wenn ein Name bereits existiert, wir

03:28.680 --> 03:30.850
kann nicht eingefügt werden.

03:30.960 --> 03:33.140
Lassen Sie uns diesen Befehl ausführen und sehen, was passiert.

03:35.030 --> 03:37.070
Lass uns auffrischen.

03:37.130 --> 03:41.980
Wir haben jetzt die Login-Tabelle mit ID, Secret und Name.

03:42.120 --> 03:44.090
Lassen Sie uns hier einige Informationen eingeben.

03:46.520 --> 03:53.080
Ich werde INSERT INTO login sagen.

03:53.080 --> 03:59.890
Wir müssen jetzt nichts mehr in die ID einfügen, weil das für uns gemacht wird, weil es seriell ist,

03:59.890 --> 04:10.740
Es wird nur automatisch erhöht. Aber für das Geheimnis können wir sagen, dass das Geheimnis ein Hash und der Name sein wird

04:11.280 --> 04:16.180
wird eine Art von Text sein. Lass uns das ein wenig formatieren.

04:23.270 --> 04:27.170
VAULES und wir werden eine Art String sagen.

04:27.200 --> 04:28.930
Wir sagen nur 'ABC' hier.

04:30.750 --> 04:32.190
Und der Name wird "Andrei" sein.

04:36.310 --> 04:39.430
Lassen Sie uns die Abfrage ausführen.

04:39.630 --> 04:44.510
Lass uns zum Login zurückkehren, aktualisieren, zur Anmeldung gehen.

04:44.640 --> 04:52.150
Und wir sehen, dass Andrei mit ID von 1 eingefügt wurde. Wenn ich zurück zur Abfrage gehe und einen anderen hinzufüge

04:52.150 --> 04:57.970
Person lass uns Sally tun und ihr Passwort ist 'xyz'.

04:59.350 --> 05:08.680
Führe die Abfrage aus und sollte jetzt drin sein.

05:08.890 --> 05:16.030
Und dir ist auch aufgefallen, dass ihre ID jetzt 2 ist. Was ist, wenn ich das nochmal eingebe?

05:17.250 --> 05:24.090
Ich erhalte einen Fehler, doppelte Schlüsselwerte verletzen die eindeutige Einschränkung "login_name_key", weil wir das gesagt haben

05:24.090 --> 05:27.080
Wir wollen einzigartig für den Namen.

05:27.240 --> 05:28.110
Sehr cool.

05:28.450 --> 05:30.210
Lassen Sie uns die letzte eingeben.

05:31.090 --> 05:32.290
Und das wird sein

05:32.090 --> 05:33.990
John

05:34.970 --> 05:40.970
Denn das haben wir in unserer Benutzertabelle.

05:41.040 --> 05:50.090
Also haben wir 'John' perfekt und wenn Sie sich einloggen, haben wir auch 'John' mit seinem Geheimnis, welches 'lol' ist.

05:50.270 --> 05:57.380
Und beachte hier, dass es vier statt drei sind, weil wir einen Befehl ausgeführt haben, aber das haben wir nicht geschafft, aber

05:57.380 --> 06:01.980
ist nicht wirklich wichtig, solange diese einzigartig sind. Dies sind die primären Schlüssel.

06:02.030 --> 06:10.450
Dies ist die eine Sache, die wir sicherstellen, dass es in unserer Tabelle immer einzigartig ist. Aber damit haben wir

06:10.450 --> 06:12.480
hat etwas Interessantes geschaffen.

06:12.640 --> 06:21.910
Wir haben Andrei, Sally und John, die auch mit Andrei, Sally und John in der Users Tabelle leben. Wenn wir entwerfen

06:21.910 --> 06:29.850
Datenbanken wie diese können wir jetzt Andrei, Sally und John haben, die auf die Benutzer verweisen.

06:29.930 --> 06:40.380
Und wenn ich Andrei oder Andrejs Geheimnis, das in diesem Fall "abc" ist, schnappen wollte, habe ich einen ausländischen Schlüssel, der

06:40.380 --> 06:51.870
ist das. Diese Namensspalte in der Anmeldung ist der Fremdschlüssel, der auf die - in unserem Fall die Primärdatenbank - verweist

06:51.870 --> 06:57.540
Geben Sie hier den Schlüssel ein, da dies die eindeutigen Identifizierungswerte in der Tabelle Benutzer sind.

06:57.750 --> 06:59.610
Das ist Andrei.

06:59.830 --> 07:03.880
Im nächsten Video werde ich dir zeigen, wie wir diese beiden endlich miteinander verbinden können.

07:04.880 --> 07:05.910
Ich sehe dich in diesem.

07:06.160 --> 07:06.440
Tschüss.
