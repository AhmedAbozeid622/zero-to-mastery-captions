WEBVTT 00:00.760 -&gt; 00:07.620 Bine ați venit înapoi, așa cum am menționat mai devreme, dezvoltatorii sunt cu adevărat buni să vă asigurați că nu se vor ține mereu același lucru. 00:09.900 -&gt; 00:15.940 Și dacă se întâmplă ceva ce se face de mai multe ori, ei construiesc un instrument pentru el, astfel încât să devină mai simplu. 00:17.810 -&gt; 00:20.170 Ei bine, construirea de servere a fost una dintre ele. 00:20.170 -&gt; 00:23.290 Este ceva ce toată lumea folosește. Deci, oamenii folosesc bibliotecile exact așa cum am folosit React pe partea frontală a JavaScript-ului pentru a face viața noastră mai ușoară și a construi mai repede servere mai robuste. Permalink here (line 161) 00:34.270 -&gt; 00:39.690 Și multe biblioteci pe care oamenii le folosesc cu Nodul pentru a crea un server. 00:40.340 -&gt; 00:47.630 Dar cea mai populară și cea mai bună, cea mai bună, acum este Express și am aici statul JavaScript 2017 00:47.630 -&gt; 00:54.290 sondaj - este un sondaj faimos care devine facut in fiecare an la sfarsitul anului care ii cere dezvoltatorilor 00:54.350 -&gt; 00:57.740 ce instrumente preferate sunt ce unelte de front-end le folosesc. 00:57.740 -&gt; 00:59.880 Și vă recomand să verificați. Dar puteți vedea aici că pentru bibliotecă cea mai populară bibliotecă este Express și această bară purpurie 01:07.910 -&gt; 01:10.710 înseamnă &quot;am folosit-o înainte și ar folosi-o din nou &quot;. 01:11.430 -&gt; 01:17.500 Sunt alții ca Koa, Meteor, Hapi, dar utilizarea lor este foarte mică. 01:17.510 -&gt; 01:24.370 Express este încercat și testat; există o mulțime de instrumente și informații online pentru asta 01:24.370 -&gt; 01:29.140 deci, dacă rămâneți blocat, puteți găsi imediat un răspuns la problema dvs. 01:29.260 -&gt; 01:33.160 Deci, Express este calea de a merge în 2018. 01:33.160 -&gt; 01:40.130 Deci, să învățăm un Express și să vă arătăm cât de ușor este să ne creăm propriul server. 01:41.610 -&gt; 01:48.510 Deci, vom șterge serverul pe care l-am construit anterior în ultimul videoclip și vom instala Express. 01:48.860 -&gt; 01:55.680 Să facem &#39;npm install&#39; și din nou prin npm avem pachetul Express. 01:58.930 -&gt; 02:01.620 Și acum avem Express la dispoziția noastră. 02:01.660 -&gt; 02:03.070 Deci haideți să o luăm. 02:03.110 -&gt; 02:13.230 Modul în care creați un server Express este foarte simplu:pur și simplu faceți &quot;const expres = necesită (&quot; expres &quot;); 02:13.550 -&gt; 02:25.800 Trebuie să facem o aplicație const și apoi să creăm acea aplicație, pentru a rula Express, pur și simplu facem expres () 02:25.970 -&gt; 02:27.650 Și apoi în cele din urmă 02:27.650 -&gt; 02:32.710 &#39;app.listen (3000)&#39; și asta-i tot. 02:32.730 -&gt; 02:35.710 Avem o alergare Express. 02:36.010 -&gt; 02:44.920 Permiteți-mi să fac &#39;npm start&#39; și vedem că serverul Node rulează. 02:45.150 -&gt; 02:51.140 Și dacă mă întorc la localhost:3000 am &quot;Nu pot obține&quot;. 02:51.370 -&gt; 02:54.150 Și asta pentru că din nou nu facem nimic. Dar în doar trei rânduri avem un server și vreau să-ți arăt că Express are un mare ghid pentru a începe și o tona de informații despre modul în care 03:04.510 -&gt; 03:09.600 să o folosească. 03:10.680 -&gt; 03:14.120 Și documentația pe care o puteți verifica pe cont propriu. 03:14.250 -&gt; 03:15.630 Dar pentru moment ne permite să ne construim propria noastră. 03:18.440 -&gt; 03:20.890 Ei bine, exprima este într-adevăr foarte bun la a face rutarea. 03:21.030 -&gt; 03:29.690 Dacă vă amintiți în gazda noastră locală am primit &quot;Nu pot obține&quot;. Pentru a face o cerere GET cu Express pur și simplu facem 03:29.930 -&gt; 03:34.450 &#39;app.get ()&#39; - în primul parametru este calea; vom face traseul traseului [&#39;/&#39;]. 03:53:32 Și cel de-al doilea parametru primește o cerere și un răspuns și în Express, în loc să scrie totul, calea obișnuită de a face asta face &#39;req&#39; și &#39; res &#39;și&#39; aici &#39;putem spune&#39; res.send () &#39;și vom 03:56.720 -&gt; 04:06.780 să trimitem un &quot;hellooooo&quot; exact ca în videoclipul nostru precedent unde vom folosi modulul HTTP cu Nod. 04:06.920 -&gt; 04:19.750 Să verificăm asta; Să vedem dacă funcționează. Am de gând să salvez, să mă reîmprospătesc și să fiu &quot;hellooooo&quot;. Dacă deschid consola 04:19.750 -&gt; 04:28.560 aici și tab-ul Network și refresh din nou, văd că răspunsul este &quot;hellooooo&quot;. 04:28.690 -&gt; 04:40.520 Vedem &quot;Content-Type:text / html&quot; care a fost convertit automat pentru noi. De asemenea, în loc să trimit [ing] 04:40.730 -&gt; 04:43.710 doar un cod HTML. 04:43.880 -&gt; 04:47.150 Deci, în loc de a face ceva de genul &quot; <h1> &quot;04:49.990 -&gt; 04:51.010 și&quot; </h1> &quot;04:54.400 -&gt; 05:06.080 care ne dă un <h1> &quot;Hellooooo&quot; De asemenea, pot trimite acum JSON. &quot;const utilizatorul&quot; din nou și de această dată numele de utilizator va fi Sally 05:13.590 -&gt; 05:23.470 și hobby-ul său va fi fotbal și trebuie să adăugăm un &#39;=&#39; aici și apoi treceți în &#39;utilizator&#39; 05:26.370 -&gt; 05:31.430 Dacă salvez asta și mă întorc și reîmprospătează. Uită-te la asta! 05:31.780 -&gt; 05:37.180 Aceasta face în mod automat &quot;JSON.stringify ()&quot; pentru mine și returnează 05:30:50 -&gt; 05:46.000 un Content-Type JSON și un tip de conținut &quot;application / json&quot; care este JSON. Foarte tare. Deci tu 05:46.000 -&gt; 05:49.400 poți vedea puterea Express chiar din acest exemplu simplu. 05:49.690 -&gt; 05:56.420 E nevoie de multă repetare și ne face viața mai ușoară. 05:56.440 -&gt; 06:01.990 Acum am făcut doar GET aici, dar puteți face și POST cereri. 06:01.190 -&gt; 06:11.440 Deci, de exemplu, dacă am făcut &quot;post&quot; / profil &quot;, bine 06:06.190 -&gt; 06:19.410 pentru că acum am făcut Metoda de solicitare, care a fost GET din browser. 06:19.640 -&gt; 06:30.950 Dar aici accept doar o cerere POST din &quot;profil&quot;. Dacă fac &quot;/ profil&quot; aici 06:35.620 -&gt; 06:45.060 primesc &quot;Nu pot obține / profil&quot; deoarece, deși mergem la adresa URL corectă, facem o solicitare GET. 06:45.070 -&gt; 06:46.750 Ori de câte ori reîmprospătăm un browser 06:46.780 -&gt; 06:48.290 este o cerere GET. 06:48.790 -&gt; 06:56.530 Și pentru a face asta, trebuie să trimitem de fapt câteva date și vă voi arăta cum să faceți acest lucru în următoarele două videoclipuri în 06:56.620 -&gt; 06:58.200. 06:58.240 -&gt; 07:07.890 Dar doar pentru a vă arăta cum funcționează Express pot continua adăugarea acestor trasee - să facem &#39;get&#39; a &#39;/ profile&#39; care întoarce 07:12.790 -&gt; 07:15.460 &quot;obținerea profilului&quot;. 07:15.640 -&gt; 07:17.110 Și dacă fac altceva un &quot;get&quot; de data asta la &quot;rădăcină&quot; url [/] și asta voi spune doar &quot; 07:29.580 -&gt; 07:30.630 dacă salvez asta acum 07:30.620 -&gt; 07:43.340 și reîmprospătați &#39;/ profil&#39; Voi primi un &quot;200 OK&quot; cu răspunsul de a obține pro și dacă nu fac &#39;/ profil&#39; 07:43.340 -&gt; 07:45.830 și doar urlul &quot;rădăcină&quot; voi primi &quot;root&quot;. 07:48.950 -&gt; 07:53.780 Și modul în care Express funcționează este verificarea fiecărei linii în linie. 07:53.790 -&gt; 08:01.670 Așa că, de exemplu, se va verifica, &quot;Hei a făcut cererea GET să aibă urlul&quot; root &quot;[/]?&quot;. 08:02.100 -&gt; 08:05.160 &quot;Cererea GET are&quot; / profile &quot;08:05.160 -&gt; 08:07.760. se potrivește cu oricare dintre aceste 08:10.260 -&gt; 08:14.640 bine, va funcționa indiferent de funcția din interiorul ei este 08:14.940 -&gt; 08:28.280 Dacă fac o adresă URL care nu există, 404 nu a fost găsit &#39;, deoarece am făcut o solicitare GET la această adresă url 08:28.280 -&gt; 08:33.660 care nu există, deci folosind această metodă putem folosi metoda GET 08:33.670 -&gt; 08:41.830 metoda POST , metoda PUT și metoda DELETE pe care o vom demonstra în următoarele 08:41.830 -&gt; 08:43.210 câteva clipuri video. 08:43.210 -&gt; 08:49.990 Dar după cum putem vedea că este o chestiune simplă de a spune dacă mergeți pe această rută faceți acest lucru dacă mergeți la asta 08:50.200 -&gt; 08:54.510 faceți asta și totul este doar logic și se scurge tot drumul în jos 08:56.040 -&gt; 08:58.480 În regulă Ne vedem în următorul film. 08:58.480 -&gt; 08:58.930 La revedere.