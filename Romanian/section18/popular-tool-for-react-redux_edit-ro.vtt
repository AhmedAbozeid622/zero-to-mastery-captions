WEBVTT

00:01.280 --> 00:02.510
Bine ai revenit.

00:02.750 --> 00:08.870
Vreau să iau un singur videoclip pentru a trece peste lucru care ar putea să-i lase pe mulți oameni când pornesc prima oară

00:08.870 --> 00:19.830
off cu React. Amintiți-vă, React este doar o bibliotecă de vizualizare a straturilor. Prin urmare, React vă permite să construiți componente

00:19.920 --> 00:29.720
interfețe de utilizator. Și, are unele soluții, cum ar fi propriul management de stat local, și un simplu

00:29.720 --> 00:34.040
mod de a gestiona evenimentele pentru a face interacțiuni pe site-ul nostru să se întâmple.

00:35.440 --> 00:40.110
Dar, la sfârșitul zilei, este o bibliotecă simplă care ajută la vizualizare.

00:40.360 --> 00:48.430
Odată ce începeți să construiți aplicații la scară largă, trebuie să adăugați pe React.

00:48.700 --> 00:55.630
Puterea lui React provine din această capacitate de a aborda noile caracteristici, noi biblioteci. Pentru a

00:55.630 --> 00:59.520
personalizați-o, după cum doriți, propriei aplicații.

00:59.660 --> 01:08.270
Deci, pe măsură ce aplicațiile cresc sau începeți să lucrați pentru o companie mare, veți vedea că ei folosesc alte instrumente

01:08.360 --> 01:14.810
pe partea de sus a React. Și am vrut să trec repede, unele dintre cele mai comune, comune de văzut

01:14.810 --> 01:16.270
acolo.

01:16.300 --> 01:20.710
Mai întâi avem "ROUTERUL REACT" și asta este pentru rutare.

01:20.890 --> 01:29.080
Deci, schimbarea de pagini și schimbarea rutelor în url nostru, este destul de mult standard, atunci când vine vorba de orice React și

01:29.080 --> 01:30.190
Proiect Redux.

01:30.520 --> 01:32.930
Deci, foarte recomandat.

01:33.100 --> 01:35.010
Foarte ușor de utilizat.

01:35.320 --> 01:36.650
Foarte ușor de învățat, de asemenea.

01:36.700 --> 01:39.640
Te va lua o zi și o poți alege destul de ușor.

01:41.160 --> 01:49.650
Aveți, de asemenea, lucruri precum bibliotecile de utilități. Și acestea sunt biblioteci care adaugă javascript-ul curent

01:49.770 --> 01:52.440
instrumente, că ieșiți din cutie.

01:52.440 --> 01:56.740
Deci, gândiți-vă la aceasta ca la funcții adăugate la javascript.

01:56.950 --> 01:58.720
Cele mai populare sunt "Ramda".

01:58.810 --> 02:06.080
Dacă vreți să păstrați cu adevărat ideologia de programare funcțională, o bibliotecă foarte bună. Și există

02:06.100 --> 02:16.690
de asemenea, cel mai popular "Lo dash", care vă oferă din nou instrumente suplimentare pe care le puteți utiliza cu javascript. Tu la fel

02:16.820 --> 02:20.570
doriți să vă gândiți la stil cu React.

02:20.630 --> 02:27.380
Și din nou, există o serie de instrumente pe care oamenii le folosesc pentru stil. Există "plin de farmec" pe care eu chiar într-adevăr

02:27.380 --> 02:28.170
ca.

02:28.250 --> 02:35.480
Există "componente de stil" care din nou sunt foarte drăguțe și destul de asemănătoare cu cele "pline de farmec".

02:35.570 --> 02:38.520
Și apoi există lucruri precum "module CSS".

02:38.630 --> 02:46.490
Să presupunem că aceste trei sunt probabil cele mai bune de utilizat, dacă doriți să faceți o abordare mai inteligentă

02:46.580 --> 02:47.830
stiluri în React.

02:47.870 --> 02:50.300
Și din nou, acestea sunt destul de ușor de ridicat.

02:50.300 --> 02:52.720
Poți petrece o zi pe ele și o să te agiți.

02:53.860 --> 02:57.490
Apoi, avem ceva numit "gatsby dot js (gatsbyjs)".

02:58.060 --> 03:02.980
Și, acest lucru este cu adevărat bun pentru site-urile web statice din React.

03:02.980 --> 03:06.340
Deci, este simplu site-uri bazate pe text.

03:06.460 --> 03:08.920
De fapt, dacă accesați documentația React,

03:18.840 --> 03:28.110
documentația lor este, de fapt, servită cu "gatsby dot js (gatsbyjs)", pentru că ele sunt doar simple bazate pe text

03:28.860 --> 03:29.640
pagini.

03:29.760 --> 03:31.310
Aceasta funcționează într-adevăr foarte bine.

03:33.430 --> 03:35.710
Apoi, există și "Următorul

03:35.750 --> 03:41.510
dot js ', extrem de popular pentru aplicațiile redate de pe server.

03:41.740 --> 03:45.490
Și despre asta vom vorbi când ajungem la secțiunea de server. Și de fapt vom

03:45.490 --> 03:52.330
construiți o aplicație simplă "Next.js". Dar foarte popular și îmi recomand foarte mult dacă construiești ceva

03:52.330 --> 04:00.040
partea de server. În continuare, probabil, ceea ce este cunoscut pentru React și am ales doar două opțiuni aici, dar există

04:00.040 --> 04:01.230
atât de mulți acolo.

04:01.230 --> 04:05.920
Reacția este într-adevăr foarte bună pentru că suntem capabili să construim componente reutilizabile.

04:05.970 --> 04:12.270
Deci, dacă construiesc o componentă de calendar foarte cool, o pot pune online și alți oameni pot apuca asta

04:12.270 --> 04:15.800
componente, și să o folosească și în proiectele lor.

04:16.770 --> 04:23.610
Deci, unele dintre cele mai mari sunt componente "materiale", "ui" materiale, pe care le puteți folosi din nou.

04:23.820 --> 04:33.940
Și există și biblioteca "semantic ui" care are o tona de componente React pe care le puteți utiliza.

04:34.050 --> 04:41.760
Din nou, un alt motiv minunat de a folosi React este, aceste componente pe care oamenii le împărtășesc. Și puteți doar să adăugați

04:41.760 --> 04:44.510
pe site-ul dvs.

04:44.670 --> 04:49.810
Și apoi, în sfârșit, există instrumente care fac Redux mai bun, mai eficient.

04:49.980 --> 04:56.310
Aveți lucruri ca "reselect", că veți vedea în majoritatea proiectelor Redux că ajutați cu ceva numit

04:56.310 --> 05:01.620
selectați și îmbunătățiți performanța aplicațiilor.

05:01.650 --> 05:09.240
Aveți, de asemenea, lucruri precum "Redux-Saga", care gestionează acțiunile asincrone în Redux.

05:09.240 --> 05:16.080
Deci, gândiți-vă la asta ca la redux-thunk, dar supraîncărcat. Așa că lucrurile devin din ce în ce mai complexe

05:16.080 --> 05:18.510
tot mai multe acțiuni asincrone,

05:18.510 --> 05:23.040
ați putea dori să începeți să vă uitați la lucruri precum "Redux Saga".

05:23.040 --> 05:25.840
Este un pic cam complicat să-l înveți mai întâi.

05:26.100 --> 05:28.500
Și există oameni care o iubesc și o urăsc.

05:28.500 --> 05:32.650
Dar cu siguranță ceva care încearcă să rezolve problema

05:32.670 --> 05:36.200
ce facem atunci când începem să facem aplicații mai mari și mai mari și mai mari.

05:36.510 --> 05:43.950
Apoi, aveți și ceva de genul "IMMUTABLE" js, pe care îl puteți folosi ca bibliotecă pentru a vă asigura că aceasta

05:43.950 --> 05:49.260
statul dvs. rămâne imuabil și pune în aplicare acest lucru printre echipele dvs. de dezvoltatori.

05:50.300 --> 05:57.310
Acum, nu mă aștept să cunoașteți fiecare dintre acestea și să utilizați fiecare dintre acestea în proiectele voastre.

05:58.420 --> 06:04.510
De fapt, vreau să avertizez împotriva lor. Și de fiecare dată când adaugi ceva, întreabă-te, fă-o

06:04.510 --> 06:05.710
Chiar am nevoie?

06:05.710 --> 06:08.390
Care este beneficiul pe care-l iau din asta?

06:09.640 --> 06:17.020
Deoarece adăugarea oricărei biblioteci la proiectul nostru, adaugă o greutate în plus, adaugă javascript suplimentar pe care trebuie să-l livrăm

06:17.020 --> 06:17.960
la client.

06:18.340 --> 06:26.140
Deci, asigurați-vă, dacă adăugați oricare dintre aceste lucruri, că aveți un motiv justificabil care de fapt se îmbunătățește

06:26.230 --> 06:29.370
valoarea produsului dvs.

06:30.290 --> 06:32.820
Și, de asemenea, ajută cu dezvoltarea.

06:32.840 --> 06:38.930
Atunci când vă gândiți la valoare, nu gândiți doar clienții și utilizatorii să se gândească și la echipele de dezvoltatori și

06:38.930 --> 06:44.970
persoanele cu care lucrați. Vor beneficia dacă adăugați "IMMUTABLE" js la codul dvs. de bază.

06:45.260 --> 06:52.730
Sau, este curba de învățare suplimentară și frustrarea pe care dezvoltatorii ar putea să o aibă prin utilizarea "IMMUTABLE", în valoare de

06:53.060 --> 06:57.170
garanțiile pe care le-ar putea adăuga la proiectul dvs.

06:58.010 --> 07:05.780
Dar, oricum, am vrut să subliniez faptul că, în calitate de dezvoltator senior, întotdeauna luați în considerare argumentele pro și contra, dacă tu

07:05.780 --> 07:13.940
aveți nevoie de ceva și dacă aveți nevoie de ceva, analizați cu adevărat, care este cel mai bun instrument pentru această slujbă.

07:13.940 --> 07:15.280
Mă simt de parcă am distrus un record.

07:15.290 --> 07:22.700
Am spus acest lucru de nenumărate ori, dar este un concept foarte important. Deci nu dau doar "IMMUTABLE" js pentru că

07:22.880 --> 07:26.470
ați citit-o într-un post de pe blog, apoi toată lumea se răzbună despre asta.

07:26.480 --> 07:32.480
Fiecare proiect este diferit, deci trebuie să puteți lua aceste decizii pentru dvs., pentru proiectul dvs.

07:32.510 --> 07:33.940
pentru echipa de dezvoltatori.

07:35.690 --> 07:40.100
Bine, suficient de mult de la mine, te voi vedea în următoarea. Pa! Pa