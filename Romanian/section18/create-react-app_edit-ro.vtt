WEBVTT

00:01.340 --> 00:02.130
Bine ai revenit.

00:02.180 --> 00:06.380
Este timpul să construiți aplicația Robo Friends pentru a începe.

00:06.500 --> 00:08.850
Să ne deschidem terminalul.

00:08.870 --> 00:11.050
Ar trebui să ne simțim confortabil până acum.

00:11.480 --> 00:17.960
Pentru această secțiune, într-adevăr recomand codarea de-a lungul și urmărirea de-a lungul proceselor pentru că voi

00:17.960 --> 00:23.310
va învăța mult mai bine, făcând-o singură.

00:23.360 --> 00:24.530
Și cum am promis.

00:24.530 --> 00:28.750
Este destul de ușor și vom avea o aplicație frumoasă la sfârșitul acesteia.

00:28.850 --> 00:35.450
Dar pentru cei care se bucură doar de vizionarea și de a lucra după aceea, voi oferi prietenilor finali Robo

00:35.540 --> 00:38.190
fișierele de aplicații pentru dvs. la sfârșitul acestei secțiuni.

00:40.150 --> 00:40.590
O.K.

00:40.860 --> 00:41.940
Deci nu avem încă nimic.

00:41.970 --> 00:43.470
Suntem pe desktop.

00:43.470 --> 00:52.940
Trebuie să creați un dosar de proiect și trebuie să instalați reacția.

00:52.940 --> 01:01.490
Acum, dacă vă amintiți în NPM, am putea instala reacție și o avem ca parte a pachetelor noastre în package.json

01:01.500 --> 01:02.350
-

01:02.530 --> 01:07.480
Dar există din nou un instrument deoarece aplicațiile de reacție sunt atât de comune.

01:07.480 --> 01:15.320
Există un instrument care ne permite să creați imediat o aplicație de reacție cu toate fișierele noastre deja puse în aplicare.

01:15.370 --> 01:18.050
Se numește creați reacție

01:20.580 --> 01:21.280
app.

01:21.680 --> 01:29.780
Acest instrument este un pachet global pe care doriți să îl instalați de la NPM și creează un proiect demarat

01:29.810 --> 01:36.270
conține pachet web care conține babel, astfel încât să putem folosi cele mai recente funcții JavaScript.

01:36.620 --> 01:41.860
Acesta conține scame și depanare pe care nu ne-am uitat încă.

01:41.990 --> 01:46.880
Creează toată această infrastructură pentru dvs. atât de îndată ce puteți începe să scrieți aplicația și este foarte

01:46.880 --> 01:51.720
instrument foarte bun pe care mulți o folosesc, așa că vom instala aplicația create-react-app.

01:51.740 --> 01:55.880
Dacă vă aduceți aminte, pur și simplu faceți npm să instalați liniuța g

01:59.110 --> 02:04.130
iar acest lucru ne va da posibilitatea să creăm-reacție-app din nou dacă primiți aceste erori.

02:04.160 --> 02:07.220
Întotdeauna amintiți-vă să faceți sudo

02:14.550 --> 02:20.920
acum că avem app create-react-app, pur și simplu spunem create-react-app și numele aplicației noastre.

02:20.940 --> 02:25.390
În cazul nostru, îl vom numi Robo Friends.

02:29.180 --> 02:36.010
Vedeți că instalează o grămadă de lucruri de care avem nevoie.

02:36.400 --> 02:44.260
Se pare că este un succes creat de Robo Friends la directorul meu și chiar îți oferă niște comenzi bune

02:44.290 --> 02:52.600
npm start npm run build npm test npm executați eject dar vom ajunge la asta mai târziu.

02:52.600 --> 02:55.940
Să vedem ce avem în dosarul nostru desktop.

02:57.120 --> 03:01.250
Avem prieteni Robo care au fost deja create pentru noi.

03:01.650 --> 03:03.270
OK, hai să intrăm în asta.

03:05.000 --> 03:14.690
Și acum, dacă fac, pare că avem o mulțime de dosare și fișiere, cum ar fi pachetele

03:14.690 --> 03:18.150
deja create pentru noi și modulele de noduri cât de minunat este acest lucru.

03:18.170 --> 03:23.790
Se instalează deja reacționează și toate dependențele de care avem nevoie.

03:23.930 --> 03:28.830
De fapt, dacă mergem pe desktop, vedem dosarul aici.

03:28.970 --> 03:31.690
Deci, să tragem acest text sublim.

03:31.880 --> 03:36.740
Deschide-l și voi schimba ecranele de jur împrejur, așa încât să vedem

03:40.280 --> 03:42.190
ambele în același timp.

03:47.680 --> 03:56.180
Acum, înainte de a vă arăta ce se află în dosar vedem că dacă mergem la package.json vedem dependențele

03:56.180 --> 03:57.530
am reacționat.

03:57.530 --> 04:04.880
Avem ceva numit reac-dom și script-uri de reacție și avem, de asemenea, o grămadă de scripturi care

04:04.970 --> 04:07.160
pe care le-au creat deja pentru noi.

04:07.160 --> 04:10.850
Am început să construim un test și să scoatem.

04:11.010 --> 04:16.710
Să începem cu pornirea, pentru că se pare că începe să citească scripturile de reacție și să înceapă

04:16.710 --> 04:18.210
până la serverul nostru.

04:18.210 --> 04:19.790
Așa că am de gând să spun npm începe

04:26.870 --> 04:35.990
uita-te la faptul că avem pe localhost o aplicație de eșantionare reacționează astfel încât totul funcționează.

04:36.030 --> 04:40.200
Nu trebuia să facem nimic altceva decât pentru a rula cu adevărat doar două comenzi.

04:40.470 --> 04:41.220
Foarte tare.

04:41.400 --> 04:41.680
O.K.

04:41.700 --> 04:46.530
Să vedem ce a creat-reacție-app-a creat pentru noi.

04:46.530 --> 04:52.660
Avem o citire care este doar informație că dacă vă aduceți aminte când o punem pe github

04:52.710 --> 04:53.820
aceasta va fi afișată

04:53.840 --> 05:01.040
în dosarul proiectului avem package.json care are din nou sens.

05:01.280 --> 05:03.500
Îți voi explica dependențele.

05:03.530 --> 05:04.710
în următorul videoclip.

05:04.940 --> 05:12.110
Dar vedem acele scripturi pe care ni le oferim și toți folosesc scripturi de reacție.

05:12.410 --> 05:16.540
Acum, script-urile de reacție este ceea ce face ca crea-reac-app

05:16.580 --> 05:22.960
atât de minunat în loc să instalăm lucruri precum webpack și babel.

05:22.970 --> 05:29.330
Vă amintiți cât de mult am avut de făcut pentru a obține ES6 JavaScript de lucru.

05:29.480 --> 05:36.170
Apoi, de asemenea, folosim browser-ul pentru a lega fișierele JavaScript care reacționează foarte bine și face totul

05:36.170 --> 05:42.940
pentru tine și pentru cea mai recentă și cea mai mare folosire pe care nu trebuie să ne facem griji pentru oricare dintre ele.

05:42.950 --> 05:49.820
Deci, permite oamenilor să construiască aplicații într-adevăr foarte rapide și puteți utiliza ejectul dacă ați terminat dorit

05:49.820 --> 05:53.610
pentru a personaliza scripturile de reacție și pentru a merge pe cont propriu.

05:54.020 --> 06:00.710
Deci, pe măsură ce proiectul dvs. devine tot mai mare și mai mare, puteți oricând să vă scoateți și să vă personalizați aplicația, este cel mai bun mod

06:00.710 --> 06:02.450
pentru a începe un proiect de reacție.

06:02.450 --> 06:06.920
Este gestionat de echipa Facebook și este într-adevăr foarte bun.

06:08.580 --> 06:09.060
O.K.

06:09.230 --> 06:16.910
De asemenea, vedem că există un pachet-lock.json și acesta este un fișier care este generat automat

06:16.910 --> 06:18.390
de pachet.json

06:18.620 --> 06:26.000
Se asigură că numerele de versiuni ale dependențelor sunt blocate astfel încât dacă dau acest proiect

06:26.000 --> 06:33.350
pentru oricine altcineva oriunde în lume, ne asigurăm că versiunile sunt corecte, astfel încât să funcționeze

06:34.130 --> 06:35.300
100 la sută din timp.

06:36.370 --> 06:40.900
De asemenea, avem ceva numit git-ignore și are un punct în fața acestuia.

06:40.900 --> 06:42.600
Este numit un fișier punct.

06:42.850 --> 06:47.230
Și înainte de a alerga git și împingeți acest proiect pe github.

06:47.560 --> 06:54.460
Ei bine, verifică acest fișier și dacă vede ceva aici că nu ar trebui să îl includă în mod automat

06:54.460 --> 06:56.030
spune că ignoră aceste fișiere.

06:56.200 --> 07:01.720
Așadar, amintiți-vă cum am spus modulele de noduri pe care nu dorim să le împingem la un repo, pentru că avem bine pachetul

07:01.720 --> 07:08.950
și creează muncă inutilă și așteaptă să ne împingă din nou proiectul, din care nu ne pasă

07:08.950 --> 07:13.780
grupul de module nod nu ne pasă de dosarul de acoperire care din nou este despre testarea de care nu avem nevoie

07:13.780 --> 07:14.870
pentru a acoperi asta.

07:15.100 --> 07:18.430
De asemenea, nu ne interesează dosarele de construire.

07:18.450 --> 07:25.940
Și câteva altele pe care le generează automat pentru noi nu avem nevoie să o atingem.

07:26.120 --> 07:32.810
Apoi, avem evident modulele noastre de nod și puteți vedea aici că există o mulțime de ele din nou

07:32.840 --> 07:36.940
create-react-app se construiește automat pentru noi în mod automat.

07:36.990 --> 07:41.850
Avem, de asemenea, un dosar public și aici totul ar trebui să fie familiar.

07:41.850 --> 07:48.730
Avem index.html avem ceva numit manifest.json

07:49.070 --> 07:56.300
Este o caracteristică nouă care permite utilizatorilor să descarce o comandă rapidă către site-ul dvs. și să aibă o pictogramă pe site-ul lor

07:56.300 --> 07:56.750
desktop-ul.

07:56.750 --> 07:58.640
Dar din nou nu trebuie să ne îngrijorăm.

07:58.760 --> 08:06.620
Și apoi avem favicon.ico care este pictograma mică care apare în partea de sus aici și pe tine

08:06.620 --> 08:13.060
poate schimba acest lucru cu orice fișier .ico pe care doriți și există instrumente online pentru a le genera pentru dvs.

08:13.070 --> 08:14.970
Din nou ceva la care nu trebuie să ne facem griji.

08:16.520 --> 08:21.240
Și în final avem folderul src care este dosarul sursă.

08:21.400 --> 08:25.090
Aici se petrec toate reacțiile magice.

08:25.370 --> 08:29.640
Dacă te uiți la index.js care este fișierul script principal.

08:29.660 --> 08:37.100
Facem cateva importuri pe care le aducem aminte ca importim doar diferite scripturi si suntem pur si simplu

08:37.100 --> 08:40.720
spunând această nouă sintaxă pe care nu am mai văzut până acum.

08:40.730 --> 08:45.310
ReactDOM render document app obține elemente prin ID.

08:45.320 --> 08:46.890
OK, știm asta.

08:47.000 --> 08:55.420
Așa că luăm un element de identificare root și spunem că aplicația ReactDOM render.

08:55.700 --> 09:02.120
Dacă mergem la index.html fișierul vedem aici și ei au foarte frumos comentarii că

09:02.130 --> 09:11.580
Puteți citi că vedem că în interiorul corpului există doar un div acest fișier noscript este în cazul unui browser

09:11.580 --> 09:13.260
nu utilizează JavaScript.

09:13.260 --> 09:15.660
Din nou, nu trebuie să ne îngrijorăm.

09:15.690 --> 09:18.360
Este pur și simplu implicit, deoarece este o practică bună.

09:18.630 --> 09:23.960
Dar în corpul nostru avem doar această divină cu rădăcină de identitate și nimic altceva.

09:23.980 --> 09:26.160
Totuși, când mergem la aplicația noastră, vedem asta.

09:26.370 --> 09:28.270
Ei bine, cu siguranță e ceva acolo.

09:28.360 --> 09:33.310
Există cel puțin un text aici și cel puțin un logo acolo. Deci, întoarce-te aici.

09:34.550 --> 09:37.010
Fără a ști orice reacție, putem spune asta.

09:37.170 --> 09:37.840
O.K.

09:38.300 --> 09:48.820
Suntem capturați această rădăcină de identificare în fișierul index.js și spunem că dorim să afișăm această aplicație

09:49.300 --> 09:54.750
componentă și aceasta este ceea ce numim sintaxa JSX la care vom ajunge mai târziu.

09:54.910 --> 09:59.030
Această aplicație este un mod de a reacționa prin a spune că aceasta este o componentă de reacție.

09:59.050 --> 10:06.240
Și vreau să redați pe ecran acest lucru, astfel încât să pot schimba asta

10:06.550 --> 10:13.550
Ei bine, putem spune H1 Hello World.

10:14.120 --> 10:14.520
Salut Lume

10:18.160 --> 10:18.760
h1

10:19.680 --> 10:29.520
Și dacă salvez asta, vei observa că reacția ne compilează automat pentru noi, așa că nu am

10:29.520 --> 10:32.490
pentru a reîmprospăta și a privi la faptul că pe site-ul nostru avem

10:32.670 --> 10:33.860
Salut Lume.

10:35.280 --> 10:36.490
Foarte tare.

10:36.510 --> 10:39.450
Acum, din nou, un alt lucru minunat despre crearea-react-app

10:39.450 --> 10:43.670
De asemenea, vă oferă avertismente pe care se spune că aplicația este definită, dar nu este utilizată niciodată.

10:43.680 --> 10:48.920
Deci, dacă mă duc aici, importez App, dar nu o folosesc niciodată.

10:48.930 --> 10:56.740
Așadar, avem și un sfat foarte bun în terminalul nostru despre cum putem îmbunătăți aplicația.

10:57.010 --> 10:57.490
O.K.

10:57.750 --> 11:02.160
Ultimul lucru pe care vreau să-ți arăt înainte să intrăm în secțiunea următoare este să începem să săpăm

11:02.160 --> 11:05.800
codul, după cum puteți vedea colorarea este un fel de off.

11:05.820 --> 11:12.280
Și asta pentru că Sublime Text nu înțelege cu adevărat ce se întâmplă aici.

11:13.790 --> 11:21.080
Dacă schimbăm acest lucru la Babel JavaScript, te duci acolo.

11:21.230 --> 11:26.720
Avem o sintaxă frumoasă și totul arată bine.

11:27.660 --> 11:28.500
Perfect.

11:28.560 --> 11:33.260
Avem setarea aplicației dvs. Vreau să modificați eticheta de aici

11:33.270 --> 11:33.900
Salut Lume

11:33.900 --> 11:37.540
Pentru moment, doar pentru a vă asigura că totul funcționează.

11:37.660 --> 11:43.880
Dar deocamdată aveți un set în următorul videoclip pe care vom trece prin restul fișierelor și

11:43.880 --> 11:47.270
începeți să construiți prima noastră componentă.

11:47.300 --> 11:48.430
Va fi foarte distractiv.

11:48.470 --> 11:49.410
Ne vedem în acel. Pa! Pa
