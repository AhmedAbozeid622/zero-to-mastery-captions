WEBVTT

00:00.810 --> 00:01.730
Bine ai revenit.

00:01.890 --> 00:05.450
Este timpul să revenim la construirea de pagini web.

00:05.670 --> 00:09.050
Dar de data asta cu JavaScript.

00:09.330 --> 00:15.030
Până acum am învățat HTML și CSS și am învățat JavaScript

00:15.240 --> 00:22.380
dar separat. Adevărata putere vine totuși când combinăm toate aceste trei tehnologii. Acum, precedentul

00:22.380 --> 00:29.370
videoclipuri am menționat modul în care JavaScript a permis acțiuni care urmează să fie efectuate pe pagina web. Ei bine, ce au făcut ei

00:29.370 --> 00:30.030
înseamnă acolo?

00:31.040 --> 00:37.090
Prin adăugarea JavaScript în paginile noastre web avem acum puterea pe care nu am avut-o niciodată cu HTML

00:37.130 --> 00:43.790
și CSS. Putem schimba toate elementele HTML din pagină,

00:43.980 --> 00:51.120
putem schimba toate atributele HTML din pagină, putem schimba toate stilurile CSS din pagină,

00:51.120 --> 00:59.400
eliminați elementele și atributele HTML existente, adăugați noi elemente și atribute HTML și JavaScript

00:59.400 --> 01:08.570
poate reacționa la evenimentele HTML existente sau poate crea propriile evenimente HTML pe pagină.

01:08.580 --> 01:15.370
Acum, unele dintre aceste lucruri ar fi schimbarea dalelor CSS sau a atributelor și elementelor HTML.

01:15.380 --> 01:24.710
Ei bine, am putea să le facem înainte, dar cu JavaScript putem face acest lucru în timp ce utilizatorul se află pe pagină.

01:24.720 --> 01:27.410
Să ne uităm la diagrama.

01:27.580 --> 01:34.300
Am solicitat codul HTML, iar browserul web a văzut eticheta de link.

01:34.700 --> 01:46.320
Luați CSS și înainte de a folosi JavaScript dacă vrem să schimbăm stilul sau să schimbăm modul în care se vede HTML.

01:46.320 --> 01:49.100
Poate că vrem să dăm clic pe pagina Despre.

01:49.120 --> 02:01.530
În timp ce ne-am solicita HTML și CSS-ul de peste tot pentru a schimba modul în care pagina web arata, dar acum

02:02.190 --> 02:10.650
cu JavaScript tot ce ai nevoie este acest lucru și JavaScript poate face asta tot pentru tine, dacă vrei totul

02:10.650 --> 02:12.070
aceeași pagină.

02:12.120 --> 02:16.260
Acum, în această secțiune, vom învăța toate astea. Pentru a face asta

02:16.260 --> 02:21.090
deși trebuie să ne întoarcem la diagramele noastre și să înțelegem două lucruri.

02:21.150 --> 02:26.780
Unul este DOM, iar al doilea este motorul JavaScript.

02:26.850 --> 02:34.140
Până în acest moment am vorbit cum se solicită codul HTML apoi CSS, atunci browserul face ceva special, acesta

02:34.140 --> 02:36.340
creează ceva numit DOM.

02:36.480 --> 02:39.160
Așa arată așa.

02:39.340 --> 02:45.860
Atunci când o pagină web este încărcată, browserul creează DOM, care este reprezentat de modelul Object Document.

02:46.060 --> 02:50.880
Vedeți aici că avem un document cu elementul HTML rădăcină.

02:51.070 --> 02:56.460
Avem un element de cap, un element corp cu cateva tag-uri "a" si tag-uri "h1".

02:56.470 --> 02:58.000
Ce înseamnă cu adevărat acest lucru?

02:58.030 --> 03:01.520
Puteți vedea același lucru în consola, așa că haideți să verificăm asta.

03:03.110 --> 03:08.990
Deci DOM sau modelul Object Document este pur și simplu "document".

03:09.040 --> 03:12.490
Deci, dacă deschidem documentul acolo, du-te acolo.

03:12.560 --> 03:17.440
Avem același lucru pe care l-am văzut în fila elemente. Lasă-mă să închid stilul aici.

03:18.530 --> 03:24.890
Chiar în consola.

03:24.990 --> 03:27.580
De ce avem nevoie de DOM?

03:27.720 --> 03:37.050
Ei bine, am avut nevoie de o modalitate de a obține, de a schimba, de a adăuga sau de a șterge elemente HTML, astfel încât DOM a fost creat pentru a putea face ceva

03:37.050 --> 03:39.070
asa.

03:39.240 --> 03:42.530
'Document.write ( "helloooo")'

03:44.170 --> 03:51.590
și urmăriți ce se întâmplă cu pagina web, se schimbă

03:51.730 --> 03:52.590
"Helloooo".

03:52.600 --> 04:00.700
Deci DOM este ceva ce creează un browser pentru a ne permite să modificăm codurile HTML și CSS.

04:00.970 --> 04:04.420
OK acum ce se intampla cu cealalta fraza pe care am mentionat-

04:04.420 --> 04:07.770
motorul JavaScript? Până la acest punct

04:07.770 --> 04:14.540
am vorbit despre modul în care fiecare browser încărcați JavaScript și îl citește magic.

04:14.570 --> 04:16.490
Ce inseamna asta?

04:16.690 --> 04:24.110
Ei bine, fiecare browser are un lucru numit "motor JavaScript" și toate au nume destul de cool.

04:24.110 --> 04:35.710
Chrome are un motor "V8", Edge are "Chalker Core", Safari are "Nitro" și Firefox are "SpiderMonkey". Si ce

04:35.720 --> 04:43.670
ei fac ei sunt cei care se uita la fișierul JavaScript și citiți-l linie de linie și executați

04:43.670 --> 04:44.830
JavaScript.

04:44.840 --> 04:48.300
Deci, cum se leagă aceste două?

04:48.530 --> 04:53.400
Acum putem folosi JavaScript pentru a vorbi cu DOM.

04:53.540 --> 04:56.960
Vedeți când am documentat documentul punct (document.write)

05:00.220 --> 05:02.110
că a fost JavaScript nu-i așa?

05:02.140 --> 05:09.390
Acesta arata ca un obiect si avea metoda de scriere care accepta un argument

05:09.430 --> 05:18.250
'Helloooo'. Browserele Web ne permit să accesăm DOM prin obiectul documentului și asta este

05:18.250 --> 05:19.330
un obiect.

05:19.420 --> 05:26.710
Și acum avem puterea pe care am menționat-o mai înainte pentru a face toate lucrurile pentru a modifica în mod esențial felul nostru

05:26.830 --> 05:29.410
pagina web arată.

05:29.410 --> 05:38.530
Deci, știind ce facem, documentăm ecranul pe care îl vedem în browser. Chiar aici și documentul

05:38.650 --> 05:41.210
după cum am menționat este doar un obiect.

05:41.500 --> 05:48.520
Acum are un obiect parent? Ei bine, de fapt

05:48.580 --> 05:48.940
o face.

05:48.940 --> 05:51.850
Se numește o fereastră.

05:52.090 --> 05:59.610
Și vedeți aici o fereastră este un obiect cu o mulțime de proprietăți.

05:59.810 --> 06:08.130
Dar dacă ne defăim aici vedem că una dintre proprietăți este document și chiar o evidențiază

06:08.130 --> 06:13.790
noi și dacă deschidem documentul, avem mai multe proprietăți.

06:13.830 --> 06:24.730
De asemenea, amintiți-vă "alert" și "prompt" uita la faptul că obiectul ferestrei are alertă.

06:24.790 --> 06:26.570
Deci, să încercăm ceva.

06:26.790 --> 06:34.960
Dacă am făcut "window.alert" ("check check") ", aceasta va continua să funcționeze?

06:34.960 --> 06:39.920
Sa vedem? Da, încă funcționează.

06:39.960 --> 06:49.790
Motivul pentru care "alerta" a funcționat astfel a fost pentru că "fereastra" este - vă puteți gândi la ea ca la marele părinte al lui

06:49.800 --> 06:59.680
totul și o fereastră de browser este un obiect care descrie acest browser și oricând utilizați o metodă

07:00.070 --> 07:08.210
cum ar fi "alertă" dacă nu specificați nimic care presupune că vorbești despre obiectul ferestrei,

07:08.370 --> 07:16.410
cel mai mare părinte. Dar amintiți-vă "document.write"?

07:17.730 --> 07:25.340
Putem face asta pe obiectul ferestrei?

07:25.460 --> 07:31.100
Să verificăm asta. Am o eroare "window.write"

07:31.110 --> 07:36.410
nu este o funcție deoarece nu există ca proprietate a "ferestrei"

07:36.420 --> 07:43.310
tt există ca proprietate a unui document care este o proprietate a "ferestrei".

07:43.320 --> 07:54.580
Deci, să recapitulăm. Un browser web are un obiect fereastră care are proprietatea "document" care specifică ce ar trebui

07:54.580 --> 07:58.390
afișați pentru a decide ce trebuie afișat

07:58.390 --> 08:10.030
obiectul documentului, modelul de obiect document citește codurile HTML și CSS și apoi JavaScript care este citit

08:10.360 --> 08:13.590
linie de linie de ceva de genul unui motor JavaScript -

08:13.600 --> 08:17.380
În Google Chrome, care este motorul V-8 - citește prin acesta.

08:17.770 --> 08:27.400
Și dacă vreodată trebuie să schimbe ceva JavaScript poate vorbi cu obiectul documentului și modifica

08:27.600 --> 08:33.850
HTML și CSS. Utilizând noua noastră putere găsită, în următorul videoclip

08:33.940 --> 08:40.510
vom începe să manipulăm DOM pentru a face site-urile noastre mai interactive cu JavaScript.

08:40.510 --> 08:42.100
Să începem. Pa! Pa
