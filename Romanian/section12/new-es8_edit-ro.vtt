WEBVTT

00:01.990 --> 00:10.800
ES8 are încă câteva caracteristici noi introduse în 2017, în comparație cu ES7. În acest videoclip,

00:10.810 --> 00:13.360
Vom trece peste cele importante.

00:13.660 --> 00:17.750
Deci, primul este "șpaclu șir".

00:18.010 --> 00:28.110
Avem noi funcții pe care le putem adăuga la șirurile care sunt ".padStart" și ".padEnd". Acum, pentru a demonstra

00:28.110 --> 00:43.810
asta, să mergem în consola. Și facem doar o "Turtle" și vom face un ".Start" de 10, dacă fac asta,

00:43.810 --> 00:48.230
Am "Turtle" cu 10 spații în fața lui.

00:49.810 --> 01:01.170
Dacă fac ".padEnd" pentru a obține "Turtle" cu 10 spații după ea, și acest lucru este util doar pentru alinierea caracterelor, de

01:01.170 --> 01:09.310
siruri de caractere, daca doriti o placuta speciala pentru ele. Din nou foarte simplu foarte ușor de preluat, doar un alt șir

01:09.310 --> 01:11.980
metodă pe care am primit-o.

01:11.980 --> 01:13.510
Hai să intrăm în cea de-a doua.

01:13.510 --> 01:20.830
Cel de-al doilea pe care l-am primit este ceva numit virgule de urmărire în listele de parametri ale funcțiilor și în apelurile.

01:21.040 --> 01:21.840
Hmm! Ce înseamnă asta?

01:21.970 --> 01:33.200
Ei bine, acum pot face ceva de genul "const fun", "a, b, c, d" și adăugați o virgulă la sfârșit.

01:34.370 --> 01:38.610
Și dacă fac o funcție, să spunem doar "console.log" (s)

01:38.930 --> 01:41.670
"a", doar o funcție simplă.

01:41.690 --> 01:48.920
Pot rula acum această funcție, ca una, două, trei, patru și apoi o virgulă la sfârșit.

01:49.220 --> 01:54.120
Și acesta este încă valabil javascript. Dacă execut acest lucru,

01:54.200 --> 01:55.550
Vedeți asta, funcționează.

01:55.550 --> 01:56.680
Consola log "a".

01:56.690 --> 01:59.030
Care este una, este logat.

01:59.030 --> 02:03.850
De ce ar fi util acest lucru?

02:03.860 --> 02:09.320
Principalul motiv este că, atunci când începeți să obțineți foarte multe liste de parametri, veți vedea o mulțime de oameni

02:09.320 --> 02:12.420
a face lucruri similare cu asta.

02:15.910 --> 02:18.140
Doar pentru a face lucrurile un pic mai curat.

02:18.310 --> 02:27.080
Și când începeți să faceți acest lucru, de fiecare dată când adăugați un nou parametru, este mult mai ușor.

02:27.100 --> 02:32.710
Dar, de asemenea, în github, atunci când faceți schimbări, aceasta face diferența.

02:32.710 --> 02:35.860
Diferențele verde și roșu sunt mult mai curate.

02:35.860 --> 02:41.750
Deci este doar sintactică și doar face lucrurile să arate puțin mai frumoase.

02:41.760 --> 02:47.530
Din nou, în mod normal, nu ați vrea să faceți așa ceva, dar poate când aveți o listă lungă de parametri

02:47.770 --> 02:54.520
astfel încât virgula de sfârșit este acum validă și nu va da o eroare. In regula.

02:54.630 --> 02:56.130
Să ne uităm la următorul.

02:56.400 --> 03:00.720
Următoarea este că avem "object.values"

03:03.310 --> 03:12.410
și "obiecte." și acestea sunt foarte utile, deoarece înainte de acestea am avut ceva numit

03:12.420 --> 03:21.680
"object.keys" și "object.keys" ne-au permis să facem ceva similar cu array-urile, dar pe obiecte.

03:22.030 --> 03:32.700
De exemplu, dacă avem un obiect (obj) care, să spunem, va avea un obiect și acest obiect

03:32.790 --> 03:42.820
va avea "userName0", "Santa", avem "userName1", "Rudolph".

03:43.000 --> 03:51.920
Și avem, de asemenea, "userName2", "Mr. Grinch“.

03:52.000 --> 03:57.550
Privind acum la acest obiect, pentru că nu este o matrice

03:57.550 --> 04:05.790
nu putem face "harta" sau "filtru" sau "reduce", dar acest tip de obiect urât.

04:05.830 --> 04:10.810
Iar acest lucru ilustrează un bun punct, uneori când lucrați cu servere, veți obține obiecte

04:10.930 --> 04:17.110
nu vă place sau nu doriți să lucrați, dar tot doriți să repetați acest lucru.

04:17.230 --> 04:22.360
Și înainte de a putea face ceva de genul asta cu "obiect. Chei", fă-ți un pic mai mult spațiu aici,

04:22.360 --> 04:31.450
așa că putem vedea, aș putea face 'object.keys' și aici, vom arunca obiectul.

04:31.450 --> 04:36.140
Și acum, o pot folosi ca o matrice sau pot merge unul câte unul.

04:37.190 --> 04:38.240
Ca o matrice.

04:39.490 --> 04:42.120
Deci este ca și cum ar fi o matrice.

04:42.120 --> 04:45.310
Dar cu excepția faptului că are proprietăți și valori.

04:45.490 --> 04:53.180
Deci, să spunem, am vrut să facem o buclă "forEach" și pentru fiecare cheie, adică, pentru fiecare cheie din matrice.

04:53.500 --> 05:05.840
Deci, pentru fiecare "nume de utilizator", avem, de asemenea, indicele care este 0, 1, 2, doar rap aceasta în paranteze.

05:05.980 --> 05:15.710
Și acum, în cadrul audierii, putem spune "console.log (key)" și apoi "object [key]".

05:15.970 --> 05:20.500
Deci, acum, luăm obiectul cu cheia "username".

05:20.500 --> 05:29.470
Deci, dacă console.log "acest lucru, să copiați și să lipiți acest lucru, curățați puțin acest lucru și văd că am,

05:29.480 --> 05:34.970
'username' 'Santa', 'username1' 'Rudolph', 'username2' 'Domnul Grinch“.

05:35.190 --> 05:44.580
Și aceasta este o modalitate pentru noi de a itera sau a trece prin obiecte, dar cu 'object.entries'

05:44.760 --> 05:45.860
lucrurile devin un pic mai ușor.

05:46.730 --> 05:58.610
De exemplu, putem face "obiect", trebuie să facem mai mult spațiu, putem face "obiect.value" și "obiect.value",

05:58.970 --> 06:06.020
dacă fac un "ForEach" aici, eu pur și simplu apuc "valoarea" din valoare.

06:06.140 --> 06:11.670
Pot doar "console.log (valoare)".

06:13.080 --> 06:19.530
Și acum, obțin valoarea fiecărui obiect.

06:19.560 --> 06:28.830
Aceasta este buclele prin "Mos Craciun", "Rudolf" și "Dl. Grinch“.

06:29.060 --> 06:31.390
Cu înregistrările, dacă fac "object.entries".

06:31.630 --> 06:33.250
Să vedem ce se întâmplă.

06:34.360 --> 06:42.990
Să ștergem acest lucru, primesc o serie de "username" "Santa", "username1" "Rudolph" și "username2" Grinch“.

06:43.030 --> 06:49.600
Deci, acest lucru vă oferă o mulțime de control vă obține atât de proprietate și valoare sau cheie și valoare, și puteți face orice

06:49.600 --> 06:55.910
vrei cu ea și folosește "foreach", "map", "reduce", "filtrează" toate acele funcții de matrice.

06:55.930 --> 06:58.130
Deci, să folosim aici un scenariu real.

06:58.390 --> 07:04.330
Să spunem, am vrut, am primit asta de la backend, backend-ul ne trimite doar o grămadă

07:04.330 --> 07:09.940
utilizatorii pe care i-au avut în baza de date și dorim să generăm "nume de utilizator" pentru că nu ne place

07:09.940 --> 07:16.540
'username0', 'username1', 'username2', doriți să afișați numele care afișează "Santa" cu

07:16.690 --> 07:21.540
ID numbe, adică 0, pentru "Rudolf" va fi 1, pentru "Mr. Grinch "va fi 2.

07:21.610 --> 07:25.160
Cum putem face asta? folosind puterile noastre noi.

07:25.570 --> 07:30.040
Ei bine, pot face pur și simplu ceva cu 'object.entries',

07:31.340 --> 07:40.290
și "object.entries" vor avea un "obiect" pe care îl pot cartografia și acest lucru ne va da o "valoare",

07:40.860 --> 07:44.370
amintiți-vă din nou că acest lucru va întoarce array-urile.

07:44.640 --> 07:55.700
Și aici vrem doar să ne întoarcem la o valoare de 1 pentru că vrem să luăm pe "Mos Craciun", "Rudolph" și "Dl. Grinch“.

07:55.740 --> 07:58.690
Deci acesta este al doilea element din matrice.

07:59.130 --> 08:06.710
Și apoi vrem să adăugăm la asta, ca o valoare a unui șir "0" care este primul element.

08:06.750 --> 08:09.540
Deci 'username0', 'username1', 'username2'.

08:10.080 --> 08:13.330
Și aici vrem să "înlocuiască",

08:13.440 --> 08:21.480
aceasta este doar o funcție pe care o putem folosi pe șiruri și dorim să o înlocuiască pe "username" cu un șir gol (").

08:22.710 --> 08:29.520
Ceea ce facem aici este că noi creăm un nou șir cu "Santa", 0

08:29.940 --> 08:30.490
pentru că nu avem nevoie de numele de utilizator aici.

08:30.510 --> 08:38.280
Deci acum, chiar dacă avem un obiect, putem să-l bifăm ca o matrice și așa avem noi

08:38.280 --> 08:42.430
numele utilizatorilor, "Santa0", "Rudolph1" și "Mr. Grinch2' .

08:42.780 --> 08:43.880
Cat de tare e asta?

08:44.880 --> 08:50.790
Deci, acestea sunt foarte utile adăugiri la limbaj, în special 'object.values' și

08:50.790 --> 08:57.970
'objects.entries', puteți face multe lucruri, dar există o mare caracteristică ES8 care a sosit și

08:57.980 --> 09:03.870
toata lumea este incantata si se numesc Async, Oh, asteapta!

09:04.100 --> 09:07.670
Acum este nou și toată lumea din comunitate este foarte încântată de asta.

09:07.670 --> 09:14.710
Cu toate acestea, pentru a înțelege pe deplin avantajul și pentru ao înțelege, avem nevoie de un întreg videoclip pe cont propriu.

09:14.960 --> 09:17.220
Așa că te văd în acel.

09:17.530 --> 09:17.790
Buh-pa.