WEBVTT

00:02.210 --> 00:10.700
NPM a fost creat pentru dezvoltatori pentru a putea distribui codul JavaScript pe care l-au scris. Pe aici

00:10.790 --> 00:16.660
orice dezvoltator din întreaga lume poate lua codul altcuiva care poate rezolva problema lui.

00:17.780 --> 00:23.780
Aceasta creează o bază de cunoștințe excelentă de scripturi pe care oamenii pot să le actualizeze sau să le îmbunătățească și să le construiască în mod constant

00:23.780 --> 00:26.330
pe partea de sus. De fapt,

00:26.330 --> 00:32.140
este foarte rar că o aplicație sau un site web în aceste zile sunt construite doar de la zero.

00:32.990 --> 00:39.140
Folosind inteligența colectivă, putem să luăm bucăți de cod care sunt foarte bune și se construiesc pe partea de sus

00:39.140 --> 00:40.950
din ea pentru a crea produsul nostru.

00:41.710 --> 00:48.070
De exemplu, folosind JavaScript, puteți scrie aplicații de realitate virtuală, dar nu trebuie să figureze

00:48.070 --> 00:50.120
afară totul.

00:50.140 --> 00:56.980
Cineva acolo a lucrat deja pe posibilitatea de a folosi JavaScript VR Deci, utilizați codul persoanei respective

00:56.980 --> 00:58.200
începeți proiectul.

00:58.270 --> 01:01.190
Să vorbim despre modul în care NPM funcționează.

01:02.650 --> 01:05.490
NPM arată astfel.

01:05.560 --> 01:13.180
Un site Web cu o bară de căutare pare a fi Google, dar aici puteți căuta ceea ce numim Pachete

01:15.210 --> 01:23.180
și aceste pachete sunt localizate în registrul NPM și acest registru ține evidența fișierelor care au

01:23.180 --> 01:25.130
fost depus.

01:25.180 --> 01:33.100
Oricine poate trimite aceste fișiere care sunt numite pachete sau module și conțin două lucruri;

01:33.100 --> 01:35.640
Un fișier JavaScript și un fișier package.json.

01:35.680 --> 01:43.010
și fișierul package.json pe care nu l-ați mai văzut până acum este un metasou care descrie

01:43.280 --> 01:45.020
acest pachet.

01:45.230 --> 01:54.540
Deci, puteți vedea aici că acest registru NPM este doar un registru al tuturor acestor fișiere de JavaScript care

01:54.570 --> 01:55.770
alte persoane au scris.

01:56.850 --> 02:03.090
Iar ideea este să aveți mici fișiere JavaScript care fac într-adevăr un lucru foarte bine, astfel încât alte persoane

02:03.270 --> 02:03.950
o pot folosi.

02:05.140 --> 02:16.820
Apoi, compuneți sau combinați diferite piese de cod și pachete diferite pe proiectul dvs. pentru a adăuga funcționalități

02:17.660 --> 02:22.400
și nu trebuie să rescrieți ceva care a fost deja scris de o altă persoană.

02:23.110 --> 02:29.980
Deci, după cum puteți vedea aici, să spun o persoană care tocmai a scris un fișier JavaScript care este într-adevăr

02:29.980 --> 02:30.970
foarte util.

02:30.970 --> 02:39.100
Ei bine, ei cred că alți oameni ar putea fi capabili să o folosească, astfel încât să o împingă la Registrul NPM și

02:39.100 --> 02:46.670
folosind bara de căutare de aici cineva poate găsi pachetul dvs. Poate că doresc să aibă un fișier de script

02:46.720 --> 02:52.460
care creează o listă de matrice pentru persoanele interesate de pisici.

02:52.570 --> 03:02.100
Ei bine, ei pot găsi acest fișier și îl pot descărca de la Registrul NPM pe calculatorul lor.

03:02.170 --> 03:05.140
Deci, hai să vorbim despre beneficiile acestui lucru.

03:06.470 --> 03:11.360
Ei bine, veți obține cunoștințe de la alții, poate că nu știți totul,

03:11.370 --> 03:13.560
poate că alții sunt mai buni decât tine

03:13.630 --> 03:18.280
acest anumit lucru bine folosiți acea cunoaștere colectivă pentru a le utiliza codul.

03:19.180 --> 03:21.580
Dar există și un dezavantaj pentru asta.

03:21.780 --> 03:24.770
Nu toate pachetele sunt cod bun.

03:24.840 --> 03:34.080
Oricine poate să-și pună fișierele la NPM și, de asemenea, adăugați mai mulți octeți la proiectul dvs. care vă fac

03:34.080 --> 03:36.210
dimensiunea proiectului chiar mai mare.

03:36.210 --> 03:43.940
Dacă aveți toate aceste fișiere în proiectul dvs., ei bine, sunt multe dosare și fiecare va merge

03:43.940 --> 03:47.820
trebuie să fie trimise de la server la browser.

03:48.050 --> 03:54.110
Și după cum știți din secțiunile anterioare, dorim să minimizăm dimensiunea proiectului, așa că am construit rapid

03:54.250 --> 04:01.540
aplicații web și există o artă în găsirea de pachete NPM bune și vă veți obișnui cu asta după câteva momente

04:01.540 --> 04:02.300
experienţă.

04:02.320 --> 04:04.000
Deci, nu vă faceți griji.
 
04:04.270 --> 04:08.380
Acum vedeți și aici că am ceva numit fire.

04:08.690 --> 04:15.320
fire încă utilizează Registrul NPM, dar s-ar putea să-l vedeți din când în când la fel ca NPM.

04:15.370 --> 04:19.010
Este un instrument pentru a atrage lucrurile din Registrul NPM.

04:19.030 --> 04:26.560
Nu vom vorbi despre acest lucru în acest curs, dar trebuie doar să rețineți că atât firele cât și NPM sunt foarte asemănătoare.

04:26.560 --> 04:32.800
Dacă învățați unul, atunci îl cunoașteți pe celălalt, așa că nu vă temeți dacă auziți un proiect care folosește fire

04:32.800 --> 04:38.470
în loc de NPM. Acum puteți căuta NPM și puteți găsi lucruri.

04:38.790 --> 04:42.840
Dar există de obicei trei tipuri de pachete.

04:43.060 --> 04:46.640
Una dintre ele este pachetele pe care le puteți utiliza în browser.

04:46.640 --> 04:52.390
Deci, pe Front End, deci poți descărca JQuery de la NPM.

04:52.850 --> 04:58.010
Puteți descărca tot felul de scripturi care vă ajută în fluxul de lucru din față.

04:58.030 --> 05:04.330
Al doilea tip sunt cele care vă oferă comenzi noi pe care le puteți folosi pe linia de comandă și vă voi arăta

05:04.330 --> 05:06.760
un exemplu care mai târziu în această secțiune.

05:06.790 --> 05:15.100
Și în sfârșit, al treilea tip de pachet NPM este o dată pe care îl puteți folosi pe Node.js pe Back End.

05:15.100 --> 05:21.640
Și asta ar putea părea înfricoșător pentru tine, dar nu vă faceți griji când ajungem la secțiunea Node.js, vă voi arăta câteva dintre pachetele Nod

05:21.640 --> 05:25.240
pe care le puteți folosi, dar este aproape același lucru ca și JavaScript.

05:25.480 --> 05:29.610
De fapt, NPM reprezintă Node Package Manager.

05:29.620 --> 05:35.200
A fost inițial construită pentru nod, dar a fost atât de bună și atât de populară încât o puteți folosi acum pentru Front End

05:35.200 --> 05:36.220
de asemenea.

05:36.930 --> 05:38.820
Dar este tot același lucru.

05:38.820 --> 05:40.430
Totul funcționează la fel.

05:40.530 --> 05:43.330
Asa cum am spus mai devreme ca sunt doar scripturi care sunt

05:43.350 --> 05:49.710
puteți utiliza celelalte persoane pe care le-ați scris și le vom folosi foarte mult în acest curs.

05:49.710 --> 05:53.730
Acum vă puteți întreba, de ce învățăm acest lucru.

05:53.790 --> 05:57.600
și acest curs? Vreau să spun, este într-adevăr atât de important?

05:57.960 --> 06:00.710
Da, de fapt, trei trebuie să facă lucrurile.

06:00.810 --> 06:06.570
Acum când începeți un proiect în 2018 și îl veți vedea în fiecare proiect.

06:06.570 --> 06:09.690
Unul este faptul că - bine, au un fișier HTML,

06:09.820 --> 06:12.610
Fișier CSS sau fișier JavaScript.

06:12.960 --> 06:18.660
S-ar putea să aibă - ar putea avea mai multe dintre acestea, dar toate proiectele au acelea care sunt în special cele care sunt

06:18.660 --> 06:19.820
bazate pe web.

06:19.830 --> 06:27.060
De asemenea, trebuie să aveți proiectul dvs. pe github și să utilizați controlul sursă ca Git. Nimeni nu își păstrează propriile

06:27.060 --> 06:28.260
proiect pe computerul lor.

06:28.260 --> 06:31.820
Ei au întotdeauna cu controlul sursei.

06:31.950 --> 06:39.090
Și în sfârșit gestionați dependențele care sunt pachete pe care alte persoane le-au scris. Cu ajutorul NPM

06:39.300 --> 06:41.480
package.json.

06:41.490 --> 06:48.300
Deci, în această secțiune, vom lucra la acest lucru și vom finaliza configurarea modului în care se desfășoară un proiect tipic

06:48.300 --> 06:52.520
arată în 2018 și știm cum să facem primele două, nu?

06:52.770 --> 06:58.650
Acum, în următoarele două videoclipuri, vă voi arăta cum să începeți să utilizați NPM pentru a descărca fișiere și a le utiliza

06:58.650 --> 07:01.900
package.json pentru a gestiona aceste fișiere.

07:02.250 --> 07:07.060
Este o parte critică a fluxului de lucru al dezvoltatorului. Așa că te văd în următoarea. Pa! Pa.
