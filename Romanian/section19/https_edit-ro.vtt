WEBVTT

00:01.450 --> 00:07.380
În 1989, Tim Berners-Lee a inventat HTML-ul care a schimbat lumea.

00:07.400 --> 00:13.930
Dar HTML nu ar face prea mult dacă nu am putea să aducem documente din întreaga lume și computere diferite.

00:13.930 --> 00:16.860
Pentru ca asta să se întâmple

00:16.870 --> 00:24.280
Tim a construit "Protocolul de transfer de hipertext" sau HTTP pe scurt.

00:24.290 --> 00:29.810
Acum țineți minte aceste săgeți din diagramele pe care le-am avut.

00:30.020 --> 00:37.070
V-am spus că aceste săgeți erau pur și simplu firele și cablurile conectate care au conectat lumea

00:37.250 --> 00:37.860
web.

00:38.840 --> 00:39.960
"Acest drept?

00:39.980 --> 00:46.590
Ți-ai amintit diagrama. "Dar vezi că sunt doar fire.

00:46.610 --> 00:53.840
Nu există instrucțiuni despre cum să faceți lucruri pentru că aveți nevoie de ceva numit protocol.

00:53.840 --> 01:00.830
Gândește-te la acesta ca pe un standard pe care toți îl urmează. Dacă toată lumea este de acord, atunci protocolul funcționează și poate fi

01:00.830 --> 01:11.570
folosit de toată lumea. HTTP pe care îl am aici este un protocol care permite extragerea de resurse, cum ar fi HTML

01:11.700 --> 01:12.630
documente.

01:12.670 --> 01:17.470
Vreau să spun că este în numele protocolului de transfer de hipertext.

01:17.540 --> 01:24.120
Acum, cu ajutorul unui cod HTML și HTTP, avem acum World Wide Web.

01:24.260 --> 01:31.610
Putem să luăm fișierele HTML și să le primim dacă mergem la "google.com/about"

01:31.610 --> 01:34.260
Pagina HTML o luăm și o primim.

01:34.280 --> 01:43.290
Deci, HTTP este protocolul sau regulile pe care le folosim pe fire.

01:43.440 --> 01:50.550
Este fundația oricărui schimb de date de pe web și deschide calea pentru ceva numit client

01:50.730 --> 02:01.870
server protocol, ceea ce înseamnă că cererile sunt inițiate de către destinatar, care în cazul nostru este browserul web.

02:01.950 --> 02:09.240
Deci, trimit o cerere folosind HTTP. Serverul înțelege acum ceea ce afișează browserul web pentru că

02:10.200 --> 02:18.000
se vorbește în HTTP și serverul poate răspunde acum cu HTML și browserul o înțelege din cauză că

02:18.270 --> 02:20.310
vorbeste prin HTTP

02:20.340 --> 02:21.780
din nou.

02:21.940 --> 02:29.950
Deci, ar trebui să vă gândiți la HTTP ca pe un limbaj comun pe care îl pot utiliza un client și un server pentru a comunica.

02:29.950 --> 02:33.930
Pur și simplu spun că poți să-mi dai acest document.

02:34.170 --> 02:36.570
Și serverul nu poate spune nimic.

02:36.630 --> 02:37.920
Aici este.

02:37.920 --> 02:43.330
Și până în acest moment nu am vorbit cu un server în aplicația noastră?

02:43.440 --> 02:50.160
Construim aplicațiile frontale sau aplicațiile client orientate folosind HTML, CSS, javascript

02:50.190 --> 02:54.120
și reacționăm, dar am trăit în lumea noastră.

02:54.340 --> 03:01.860
Nu există comunicări cu alt computer. HTTP ne permite acum să comunicăm cu serverele, cu exterior

03:01.860 --> 03:02.990
lume.

03:03.060 --> 03:06.050
Deci, să trecem mai departe terminologia.

03:06.200 --> 03:15.780
Clienții și serverele pot comunica prin schimbul de mesaje individuale. Mesajele trimise de client

03:16.320 --> 03:28.180
de obicei, un browser web sunt numite cereri, iar mesajele trimise de server sunt numite, de obicei, răspunsuri.

03:28.220 --> 03:35.120
Deci, dacă HTTP este limba care ne permite să comunicăm între aceste două, mă învață unele dintre ele

03:35.120 --> 03:35.990
cuvinte potrivite.

03:36.290 --> 03:37.690
Vreau să spun că este o întrebare bună.

03:37.820 --> 03:44.690
Și norocos pentru tine HTTP este destul de ușor de învățat pentru că ai doar câteva cuvinte și o să arăt

03:44.690 --> 03:45.940
ceea ce sunt acum.

03:46.070 --> 03:51.910
Ai "Ați primit" că ai "POST" pe ​​care ai "PUT".

03:51.990 --> 03:53.880
În cele din urmă, aveți "DELETE".

03:57.360 --> 04:00.130
și acum te gândești "umm asta e?"

04:00.130 --> 04:04.880
Și da HTTP este frumos pentru că e simplu.

04:04.920 --> 04:06.660
Nu aveți nevoie să complicați prea mult lucrurile.

04:07.750 --> 04:15.520
Învățați aceste patru cuvinte și aceste limbi și puteți să vă construiți aplicația visurilor voastre.

04:15.520 --> 04:18.810
Să trecem prin ea unul câte unul. "GET" înseamnă

04:18.820 --> 04:22.530
Ei bine, vreau să obțin un fișier HTML.

04:22.660 --> 04:28.360
Deci, cereți să obțineți ceva și serverul răspunde cu această solicitare.

04:28.420 --> 04:31.700
Un "POST" spune că vreau să post ceva.

04:31.710 --> 04:38.410
Deci, asta o să trimit niște date pe serverele Google și vreau să le "trimiteți" - vreau să le adăugați

04:38.950 --> 04:44.520
pe serverele sau baza de date. "PUT" este

04:44.780 --> 04:46.530
Voi trimite câteva date.

04:46.700 --> 04:51.950
Și vreau să actualizați unele date care există deja pe serverele Google și să le actualizați cu acest nou

04:51.950 --> 04:59.270
informațiile și apoi "DELETE" înseamnă să ștergeți o bucată de date pe backend - pe servere sau pe

04:59.270 --> 05:01.240
Bază de date.

05:01.250 --> 05:08.270
Deci, dacă folosim Twitter ca exemplu, "GET" va fi să primești feedul Twitter cu toate tweeturile de la

05:08.270 --> 05:18.450
astăzi. "POST" ar fi dacă ați creat un utilizator nou și doriți să îl adăugați pe serverele Twitter. 'A PUNE'

05:18.600 --> 05:25.880
ar fi dacă ați făcut un tweet, dar doriți să faceți o modificare sau o editare, astfel încât să editați acel tweet și să "DELETE"

05:25.890 --> 05:32.080
va însemna că fie ștergeți contul dvs. de utilizator, fie ștergeți un tweet. Și nu-ți face griji că o să mergem

05:32.080 --> 05:36.130
Folosiți-le atunci când ajungem la secțiunea backend și construim proiectul nostru final.

05:36.520 --> 05:45.040
Acum, de-a lungul anilor, HTTP a fost extins pentru a nu vă îngrijora doar textul. Nu numai să preluați documentele hipertext

05:45.040 --> 05:53.500
cum ar fi HTML, dar și imagini și clipuri video și postarea conținutului pe servere, ca în cazul rezultatelor formularului HTML.

05:53.650 --> 06:01.300
și HTTP pot fi, de asemenea, folosite pentru a prelua o parte din documente pentru a actualiza paginile web la cerere, numită AJAX

06:01.750 --> 06:04.900
și avem un videoclip care vine să vorbească despre asta.

06:05.020 --> 06:09.170
Dar ideea principală rămâne de a folosi aceste patru verbe

06:09.190 --> 06:13.230
tocmai am învățat, acum putem comunica cu serverele.

06:13.340 --> 06:13.630
In regula.

06:13.630 --> 06:23.220
Deci, știm că această săgeată de aici în partea de sus folosește HTTP pentru a face cereri folosind unul din aceste patru verbe.

06:23.230 --> 06:23.680
Bine,

06:23.700 --> 06:27.630
așa că cred că obțineți partea cererii. Acum,

06:27.700 --> 06:29.320
la ce răspunde serverul?

06:29.320 --> 06:30.770
Cum rămâne cu răspunsul aici?

06:30.850 --> 06:38.140
Serverul vă trimite două lucruri principale. unul este un mesaj HTTP.

06:38.210 --> 06:42.780
Acesta este ceva pe care l-ați văzut înainte și voi lega de asta

06:42.800 --> 06:49.360
Resursele W3school au un succes de 200 de mesaje.

06:49.410 --> 06:57.250
Probabil ați văzut 200 OK înainte de a fi văzut 404 de mesaje, ceea ce înseamnă că nu a fost găsit.

06:57.390 --> 07:03.530
Dacă introduceți o adresă URL care nu există, veți primi un număr de 404 și poate uneori veți obține o sumă de 500

07:03.570 --> 07:05.080
mesaj de eroare care este

07:05.230 --> 07:07.260
Ei bine, este ceva în neregulă cu serverul.

07:07.530 --> 07:15.000
Deci, acesta este doar un cod numeric care vine cu fiecare răspuns care vă spune răspunsul serverului.

07:15.000 --> 07:16.080
Deci asta e primul.

07:18.390 --> 07:22.980
Al doilea este de obicei un fel de date, cum ar fi HTML.

07:23.190 --> 07:25.530
Și până acum am făcut HTML.

07:25.830 --> 07:31.160
În următoarele videoclipuri, însă, vă voi arăta că pot trimite și alte lucruri decât HTML simplu.

07:31.230 --> 07:33.600
Deci, să adăugăm acum la această diagramă.

07:34.230 --> 07:43.760
Vrem să spunem că acest lucru are și un cod de stare și pentru moment vom spune 200 că totul a fost bine și înăuntru

07:43.790 --> 07:50.770
răspunsul ar da codul de stare plus noul fișier HTML.

07:51.020 --> 07:51.890
In regula.

07:52.070 --> 07:56.900
Să demonstrăm acest lucru online pentru a vedea cum puteți urmări această acțiune.

07:58.360 --> 08:04.410
Am aici un mare site web numit 'example.com' și este un simplu site web pe care îl puteți vizita

08:04.510 --> 08:05.330
chiar acum.

08:05.440 --> 08:12.830
Dar aspectul răcoritor este dacă deschideți consola dezvoltatorului, până acum ne-am uitat

08:12.830 --> 08:20.450
fila elemente și apoi fila consola Vreau să vă arăt fila de rețea pe care o avem aici. Acum

08:20.450 --> 08:21.620
tab-ul Network-

08:21.980 --> 08:27.610
Este posibil să faceți clic pe unele dintre aceste icoane și veți vedea că vor apărea lucruri diferite.

08:27.710 --> 08:30.900
Asigurați-vă că filtrul a dispărut.

08:31.780 --> 08:39.960
Totul este deconectat și acum la "example.com" în timp ce acesta este deschis doar pur și simplu refresh

08:43.010 --> 08:44.420
și uită-te la asta.

08:44.600 --> 08:47.880
Voi faceți clic pe această pictogramă care o face puțin mai mare.

08:47.900 --> 08:52.010
Acesta este un plugin, deci nu vă faceți griji cu privire la acest javascript, ci la cel mai important lucru pe care îl spune.

08:52.010 --> 08:55.940
"example.com" "Stare:200 OK"

08:55.970 --> 09:03.140
Și "Tip:document" și chiar îmi spune dimensiunea - timpul necesar pentru a obține acest lucru care este de 53 de milisecunde ...

09:03.140 --> 09:04.760
E destul de repede.

09:04.760 --> 09:07.790
Asta înseamnă că serverul a răspuns cu 200.

09:07.790 --> 09:13.830
Dacă fac clic pe aceasta, primesc o grămadă de lucruri pe care nu trebuie să ne îngrijim cu adevărat, ci doar câteva

09:13.830 --> 09:16.080
lucruri 'Cerere URL'

09:16.080 --> 09:23.340
asta am cerut. Avem un cod de stare de 200 de la server.

09:23.340 --> 09:31.280
Și dacă dăm clic pe răspunsul, există un mesaj de răspuns pe care l-am primit de la documentul HTML

09:31.280 --> 09:32.760
Server.

09:32.860 --> 09:36.870
Dacă revenim la Anteturi, vedem și că metoda noastră de solicitare a fost "GET".

09:36.970 --> 09:44.430
Am făcut o solicitare "GET". Să închidem și să reîmprospătăm din nou.

09:44.490 --> 09:48.880
Acum primesc un statut de 304. A 304

09:48.930 --> 09:55.050
Dacă ne uităm aici nu înseamnă că modificarea indică faptul că pagina de solicitare nu a fost modificată încă de la

09:55.050 --> 09:59.150
ultima cerere. Pentru că am cerut deja acest lucru

09:59.170 --> 10:04.800
acum Google este suficient de inteligent pentru a spune oh nu am de gând să vă faceți griji cu privire la server și solicitând la fel

10:04.800 --> 10:05.640
lucru peste si peste.

10:05.640 --> 10:09.960
Am deja memorat așa că aici este.

10:10.130 --> 10:10.730
Foarte tare.

10:10.730 --> 10:13.740
Deci, fila Network este într-adevăr foarte utilă pentru asta.

10:14.030 --> 10:14.420
In regula.

10:14.420 --> 10:20.330
Deci, puteți să mergeți mai departe și să jucați cu "example.com" și să vedeți cum funcționează HTTP.

10:21.970 --> 10:29.590
Și prin modul în care da acest HTTP pe care îl vedeți aici este ceea ce înseamnă atunci când faci o solicitare HTTP se spune

10:29.680 --> 10:34.340
hei face HTTP - folosim webul din întreaga lume.

10:34.640 --> 10:38.260
Și cereți acest lucru de la server.

10:38.450 --> 10:39.110
Foarte tare.

10:39.140 --> 10:40.650
Și dacă vă întrebați despre "s".

10:40.670 --> 10:43.850
Nu vă faceți griji, vă voi spune la sfârșitul acestui videoclip ce înseamnă și asta.

10:46.410 --> 10:46.970
In regula.

10:47.120 --> 10:49.780
Acum, dacă vreau să trimit date.

10:49.850 --> 10:53.790
Dacă ne întoarcem la diagrama noastră, fac o cerere "GET".

10:53.840 --> 10:58.090
Dar dacă vreau să trimit anumite informații serverului.

10:58.100 --> 11:02.120
În afară de unele URL-uri spunând că vreau aceste informații.

11:02.120 --> 11:04.330
Ei bine, există două modalități pe care le puteți face.

11:05.440 --> 11:08.300
Una este ceva numit șir de interogare.

11:08.530 --> 11:13.140
Și apoi al doilea este prin corpul cererii.

11:13.250 --> 11:20.450
Așa că vă voi arăta cum am lucrat aici, atât la forma pe care am creat-o în prima noastră

11:20.660 --> 11:24.270
secțiunea HTML avansată când știm doar codul HTML.

11:24.860 --> 11:25.990
Să deschidem dosarul.

11:29.810 --> 11:30.850
Am aici.

11:30.870 --> 11:34.650
Dacă dau dublu clic pe -hh, îți amintești asta, nu-i așa.

11:34.650 --> 11:37.990
Am parcurs un drum lung. În această formă

11:38.100 --> 11:46.280
dacă vă aduceți aminte că am avut o metodă de formular "GET" și acum ați putea înțelege ce înseamnă "GET".

11:46.320 --> 11:52.220
Se spune cu acest formular că vreau să faci o cerere "GET".

11:52.350 --> 11:59.960
Să vedem ce se întâmplă când fac clic pe înregistrare în timp ce deschid fila de rețea.

12:00.160 --> 12:04.000
Voi faceți clic pe "Înregistrați-vă!".

12:04.010 --> 12:04.650
In regula.

12:04.730 --> 12:07.190
Deci avem această cerere.

12:07.190 --> 12:14.810
Vedem că am făcut o cerere și a creat aceste lucruri numite șiruri de interogare.

12:14.840 --> 12:21.370
Primul mod de a trimite date către server. Cu o solicitare "GET" dacă doriți să trimiteți informații printr-o

12:21.380 --> 12:29.710
forma se adaugă la adresa URL utilizând acest punct de întrebare care spune că sunt pe cale să vă trimit o interogare

12:29.710 --> 12:34.400
și va avea o cheie și o valoare.

12:34.630 --> 12:36.550
În acest caz, numele, prenumele

12:36.550 --> 12:38.310
totul e gol, deci nu există informații.

12:38.320 --> 12:42.110
Dar altfel o să spun că prenumele este egală cu Andrei.

12:42.400 --> 12:51.900
Dacă dau clic pe aceasta, vedem că există Parametrii căsuței de interogare pe care i-am trimis. Avem primul nume,

12:51.960 --> 12:55.370
numele de familie, e-mailul, parola și ziua de naștere, care este necompletată.

12:55.710 --> 13:02.590
Dar dacă ne defăim în mașină, implicit este Volvo, astfel încât să avem mașini:Volvo.

13:02.730 --> 13:07.140
Deci, această informație este trimisă acum pe server.

13:07.140 --> 13:10.260
Acestea sunt parametrii șirului de interogare folosind "GET".

13:10.260 --> 13:12.390
Și am menționat însă un lucru.

13:12.480 --> 13:16.530
Vedem că avem aici o parolă care nu este foarte sigură.

13:16.560 --> 13:27.850
Dacă m-am întors la formular și am tastat în "secret" și am faceți clic pe înregistrare din nou Ei bine, acum am parola mea

13:28.270 --> 13:34.900
în afară, trimis peste fir și chiar am aici în bara de adrese URL.

13:35.070 --> 13:35.370
In regula.

13:35.370 --> 13:36.350
Vom reveni la asta.

13:37.790 --> 13:39.060
Deci, aceasta este o cale.

13:39.170 --> 13:44.930
Cea de-a doua cale este prin corpul cererii.

13:44.930 --> 13:48.210
Permiteți-mi să vă arăt cum funcționează modul în care trimitem informații

13:48.230 --> 13:57.110
corpul este folosirea unei solicitări "POST" și acesta este ceva pe care veți vedea mai des decât o solicitare "GET"

13:57.110 --> 14:04.690
este că vrem să adăugăm câteva date de formă serverului, așa că dorim să publicăm ceva dacă schimbăm acest lucru

14:04.690 --> 14:06.790
aici o să salvez asta.

14:06.970 --> 14:09.300
Și să deschidem o nouă filă.

14:10.430 --> 14:14.920
Cu date noi salvate, acesta este un formular de postare.

14:15.010 --> 14:23.540
Dacă îl deschid aici și scriu parola "secret" și fac clic pe "Înregistrează-te!"

14:26.590 --> 14:32.230
Obțineți "register.html", dar nu există șiruri de interogare.

14:32.350 --> 14:33.370
Dacă fac clic pe aceasta,

14:36.350 --> 14:41.290
Văd că acum, în loc de șirul de interogări, sunt date de formă.

14:41.480 --> 14:48.650
Și chiar spune "Content-Type:application / x-www-form-urlencoded".

14:49.070 --> 14:57.830
Și acesta este doar un mod HTML de a spune că aceasta este o formă și acesta este corpul, dar nu este afișat aici.

14:57.860 --> 15:03.200
Deci, acum serverul nu poate accesa parola de interogare și nu vă faceți griji vă voi arăta cum serverele

15:03.200 --> 15:03.780
fa aia.

15:03.860 --> 15:09.740
Când ajungem la secțiunea de backend. În loc să-l accesez prin paramatele de interogare pe care le pot accesa acum

15:09.740 --> 15:12.160
prin intermediul formularului de date.

15:12.170 --> 15:15.440
Deci, să ne întoarcem la diagramă.

15:15.610 --> 15:22.850
Acum intelegem ca putem face cereri HTTP folosind 'GET', 'POST', 'PUT' si 'DELETE'.

15:22.850 --> 15:35.140
Pot folosi șiruri de interogare care se află în partea de sus a adresei URL pentru a trimite datele sau corpul cererii

15:35.500 --> 15:41.350
și apoi serverul răspunde cu un cod de stare bazat pe modul în care cererea mea a fost și se întoarce că cu

15:41.350 --> 15:42.440
un raspuns.

15:42.820 --> 15:52.290
Dar problema pe care am văzut-o a fost că parola era vizibilă în ambele cazuri, nu-i așa?

15:52.300 --> 15:57.550
Și dacă am avea o persoană înfățișătoare înfricoșătoare aici.

15:57.560 --> 15:58.360
Acolo te duci.

15:58.580 --> 16:08.140
Dacă am avea o persoană care urmărea comunicarea noastră, cererile noastre HTTP și monitorizarea acesteia.

16:08.380 --> 16:15.370
Dacă am folosit șiruri de interogare pentru a-mi pune parola înăuntru, poate doar să mă uite peste umeri și să văd

16:15.440 --> 16:18.790
Parola lui Andrea este secretă.

16:18.790 --> 16:29.510
Acum mă pot conecta la contul Google sau dacă folosesc modul de trimitere a datelor de la corp, el poate găsi o cale

16:29.510 --> 16:33.460
pentru ca această cerere să vină mai întâi la el. Și

16:36.900 --> 16:44.160
Uită-te la datele din formular și vezi că parola mea este secretă. "Nu este

16:44.180 --> 16:44.750
este foarte bine?

16:44.750 --> 16:57.210
Ei bine, o soluție la aceasta a fost ideea HTTPS. HTTPS înseamnă transferul hipertext

16:57.240 --> 17:06.820
Protocol Secure și puteți vedea aici că "W3C" utilizează versiunea securizată a HTTPS.

17:06.860 --> 17:11.280
Comunicarea între browser și site-urile Web este acum criptată.

17:12.610 --> 17:13.330
Și ce înseamnă asta?

17:13.330 --> 17:22.380
Criptarea înseamnă doar că este amestecat, așa că numai clientul și serverul cunosc permisul secret sau

17:22.390 --> 17:25.360
cheia secretă pentru a citi mesajul.

17:26.740 --> 17:35.050
Iar această parte "S" secretă folosește o tehnologie numită securitate strat de transport sau predecesorul său securizat

17:35.050 --> 17:41.870
socket-uri sau TLS și SSL pe scurt.

17:41.920 --> 17:51.820
Deci acum, chiar și cu HTTPS în cazul în care atacatorul sau ceea ce noi numim un om în mijlocul de persoană care este doar de monitorizare

17:51.820 --> 17:58.030
cererile noastre. Chiar dacă primesc parola, va fi doar un jbberish complet

17:58.030 --> 18:06.120
au ceva asemănător cu acest lucru și bine, care nu este parola noastră, așa că va fi lipsită de sens evită

18:06.170 --> 18:07.690
acel atac.

18:07.690 --> 18:08.960
Acesta este doar sfat.

18:09.280 --> 18:17.040
În calitate de dezvoltator, trebuie să-i spuneți tuturor prietenilor dacă trimiteți vreodată informații sensibile, poate că vă logați

18:17.040 --> 18:18.330
într-un cont bancar.

18:18.450 --> 18:26.130
Asigurați-vă că există HTTPS acolo dacă nu există HTTPS atunci când trimiteți - poate vă conectați

18:26.130 --> 18:27.560
cu parola.

18:27.690 --> 18:30.250
Ei bine, asta nu e sigur.

18:30.400 --> 18:30.890
In regula.

18:31.010 --> 18:40.860
Să recapitulăm. Browserul dvs. web este un client HTTP care trimite cereri către mașinile server. Când browser-ul

18:40.920 --> 18:48.930
utilizatorul introduce solicitări prin deschiderea unui fișier sau prin introducerea unei adrese URL sau făcând clic pe un hypertext

18:48.930 --> 18:50.500
legați o etichetă de ancorare.

18:50.880 --> 18:56.530
Browserul construiește o solicitare HTTP și o trimite pentru a comunica cu serverul.

18:56.730 --> 19:02.380
Acum serverul ne poate trimite informații. Cea mai veche versiune am putea folosi

19:02.470 --> 19:09.430
Parametrii URL, cum ar fi "www.google.com/about" și doar pentru a obține în mod specific HTML.

19:09.510 --> 19:11.020
Asta a fost.

19:11.050 --> 19:18.950
Apoi a apărut formularul, astfel încât să putem trimite de fapt mai multe date decât adresa URL care ne spune

19:18.950 --> 19:20.880
doriți să mergeți la acest fișier HTML.

19:21.260 --> 19:34.930
Acum am putea utiliza "GET" sau "POST" pentru a trimite date. Fie printr-un șir de caractere sau un șir de interogări și un server poate lua

19:34.930 --> 19:40.540
acțiune bazată pe acele date și returnați o nouă pagină.

19:40.630 --> 19:47.200
Și aceasta este fundamentul web-ului și modul în care a fost posibilă realizarea web-ului mondial acum. Prin

19:47.380 --> 19:53.140
client server de comunicare. În următoarele câteva videoclipuri vom învăța și mai multe.

19:53.390 --> 19:56.820
Pentru a înțelege cu adevărat această putere vă voi vedea în următoarea. Pa! Pa.
